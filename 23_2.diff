
--- ./PYME/Acquire/MetaDataHandler.py	(original)
+++ ./PYME/Acquire/MetaDataHandler.py	(refactored)

         
@@ -298,7 +298,7 @@
         elif isinstance(value, str):
             node.setAttribute('class', 'str')
             node.setAttribute('value', value)
-        elif isinstance(value, unicode):
+        elif isinstance(value, str):
             node.setAttribute('class', 'unicode')
             node.setAttribute('value', value)
         elif np.isscalar(value):
@@ -312,7 +312,7 @@
 



--- ./PYME/Acquire/Hardware/CanonEOS/eossdk.py	(original)
+++ ./PYME/Acquire/Hardware/CanonEOS/eossdk.py	(refactored)
@@ -70,7 +70,7 @@
 
 class UserString:
     def __init__(self, seq):
-        if isinstance(seq, basestring):
+        if isinstance(seq, str):
             self.data = seq
         elif isinstance(seq, UserString):
             self.data = seq.data[:]
@@ -79,7 +79,7 @@
     def __str__(self): return str(self.data)
     def __repr__(self): return repr(self.data)
     def __int__(self): return int(self.data)
-    def __long__(self): return long(self.data)
+    def __long__(self): return int(self.data)
     def __float__(self): return float(self.data)
     def __complex__(self): return complex(self.data)
     def __hash__(self): return hash(self.data)
@@ -101,12 +101,12 @@
     def __add__(self, other):
         if isinstance(other, UserString):
             return self.__class__(self.data + other.data)
-        elif isinstance(other, basestring):
+        elif isinstance(other, str):
             return self.__class__(self.data + other)
         else:
             return self.__class__(self.data + str(other))
     def __radd__(self, other):
-        if isinstance(other, basestring):
+        if isinstance(other, str):
             return self.__class__(other + self.data)
         else:
             return self.__class__(str(other) + self.data)
@@ -120,7 +120,7 @@
     def capitalize(self): return self.__class__(self.data.capitalize())
     def center(self, width, *args):
         return self.__class__(self.data.center(width, *args))
-    def count(self, sub, start=0, end=sys.maxint):
+    def count(self, sub, start=0, end=sys.maxsize):
         return self.data.count(sub, start, end)
     def decode(self, encoding=None, errors=None): # XXX improve this?
         if encoding:
@@ -138,13 +138,13 @@
                 return self.__class__(self.data.encode(encoding))
         else:
             return self.__class__(self.data.encode())
-    def endswith(self, suffix, start=0, end=sys.maxint):
+    def endswith(self, suffix, start=0, end=sys.maxsize):
         return self.data.endswith(suffix, start, end)
     def expandtabs(self, tabsize=8):
         return self.__class__(self.data.expandtabs(tabsize))
-    def find(self, sub, start=0, end=sys.maxint):
+    def find(self, sub, start=0, end=sys.maxsize):
         return self.data.find(sub, start, end)
-    def index(self, sub, start=0, end=sys.maxint):
+    def index(self, sub, start=0, end=sys.maxsize):
         return self.data.index(sub, start, end)
     def isalpha(self): return self.data.isalpha()
     def isalnum(self): return self.data.isalnum()
@@ -164,9 +164,9 @@
         return self.data.partition(sep)
     def replace(self, old, new, maxsplit=-1):
         return self.__class__(self.data.replace(old, new, maxsplit))
-    def rfind(self, sub, start=0, end=sys.maxint):
+    def rfind(self, sub, start=0, end=sys.maxsize):
         return self.data.rfind(sub, start, end)
-    def rindex(self, sub, start=0, end=sys.maxint):
+    def rindex(self, sub, start=0, end=sys.maxsize):
         return self.data.rindex(sub, start, end)
     def rjust(self, width, *args):
         return self.__class__(self.data.rjust(width, *args))
@@ -178,7 +178,7 @@
     def rsplit(self, sep=None, maxsplit=-1):
         return self.data.rsplit(sep, maxsplit)
     def splitlines(self, keepends=0): return self.data.splitlines(keepends)
-    def startswith(self, prefix, start=0, end=sys.maxint):
+    def startswith(self, prefix, start=0, end=sys.maxsize):
         return self.data.startswith(prefix, start, end)
     def strip(self, chars=None): return self.__class__(self.data.strip(chars))
     def swapcase(self): return self.__class__(self.data.swapcase())
@@ -221,7 +221,7 @@
         start = max(start, 0); end = max(end, 0)
         if isinstance(sub, UserString):
             self.data = self.data[:start]+sub.data+self.data[end:]
-        elif isinstance(sub, basestring):
+        elif isinstance(sub, str):
             self.data = self.data[:start]+sub+self.data[end:]
         else:
             self.data =  self.data[:start]+str(sub)+self.data[end:]
@@ -233,7 +233,7 @@
     def __iadd__(self, other):
         if isinstance(other, UserString):
             self.data += other.data
-        elif isinstance(other, basestring):
+        elif isinstance(other, str):
             self.data += other
         else:
             self.data += str(other)
@@ -248,7 +248,7 @@
                 ('data', c_char_p)]
 
     def __init__(self, obj=""):
-        if isinstance(obj, (str, unicode, UserString)):
+        if isinstance(obj, (str, UserString)):
             self.data = str(obj)
         else:
             self.raw = obj
@@ -398,7 +398,7 @@
                 return ctypes.CDLL(path, ctypes.RTLD_GLOBAL)
             else:
                 return ctypes.cdll.LoadLibrary(path)
-        except OSError,e:
+        except OSError as e:
             raise ImportError(e)
 
     def getpaths(self,libname):
@@ -805,7 +805,7 @@
 
 kEdsAccess_ReadWrite = (kEdsAccess_Write + 1) # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKTypes.h: 571
 
-kEdsAccess_Error = 4294967295L # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKTypes.h: 571
+kEdsAccess_Error = 4294967295 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKTypes.h: 571
 
 EdsAccess = enum_anon_248 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKTypes.h: 571
 
@@ -855,7 +855,7 @@
 
 kEdsImageSize_Small3 = 16 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKTypes.h: 616
 
-kEdsImageSize_Unknown = 4294967295L # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKTypes.h: 616
+kEdsImageSize_Unknown = 4294967295 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKTypes.h: 616
 
 EdsImageSize = enum_anon_251 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKTypes.h: 616
 
@@ -869,7 +869,7 @@
 
 kEdsCompressQuality_SuperFine = 5 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKTypes.h: 629
 
-kEdsCompressQuality_Unknown = 4294967295L # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKTypes.h: 629
+kEdsCompressQuality_Unknown = 4294967295 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKTypes.h: 629
 
 EdsCompressQuality = enum_anon_252 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKTypes.h: 629
 
@@ -993,7 +993,7 @@
 
 EdsImageQuality_SRSJ = 40108560 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKTypes.h: 708
 
-EdsImageQuality_Unknown = 4294967295L # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKTypes.h: 708
+EdsImageQuality_Unknown = 4294967295 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKTypes.h: 708
 
 EdsImageQuality = enum_anon_253 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKTypes.h: 708
 
@@ -1043,7 +1043,7 @@
 
 kEdsImageQualityForLegacy_LR2SJ = 3080735 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKTypes.h: 738
 
-kEdsImageQualityForLegacy_Unknown = 4294967295L # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKTypes.h: 738
+kEdsImageQualityForLegacy_Unknown = 4294967295 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKTypes.h: 738
 
 EdsImageQualityForLegacy = enum_anon_254 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKTypes.h: 738
 
@@ -1121,7 +1121,7 @@
 
 kEdsBatteryLevel2_BCLevel = 0 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKTypes.h: 810
 
-kEdsBatteryLevel2_AC = 4294967295L # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKTypes.h: 810
+kEdsBatteryLevel2_AC = 4294967295 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKTypes.h: 810
 
 EdsBatteryLevel2 = enum_anon_259 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKTypes.h: 810
 
@@ -1253,7 +1253,7 @@
 
 kEdsColorSpace_AdobeRGB = 2 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKTypes.h: 924
 
-kEdsColorSpace_Unknown = 4294967295L # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKTypes.h: 924
+kEdsColorSpace_Unknown = 4294967295 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKTypes.h: 924
 
 EdsColorSpace = enum_anon_267 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKTypes.h: 924
 
@@ -1337,7 +1337,7 @@
 
 kEdsAEMode_PhotoInMovie = 21 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKTypes.h: 984
 
-kEdsAEMode_Unknown = 4294967295L # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKTypes.h: 984
+kEdsAEMode_Unknown = 4294967295 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKTypes.h: 984
 
 EdsAEMode = enum_anon_270 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKTypes.h: 984
 
@@ -1351,7 +1351,7 @@
 
 kEdsBracket_FEB = 8 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKTypes.h: 997
 
-kEdsBracket_Unknown = 4294967295L # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKTypes.h: 997
+kEdsBracket_Unknown = 4294967295 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKTypes.h: 997
 
 EdsBracket = enum_anon_271 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKTypes.h: 997
 
@@ -2416,7 +2416,7 @@
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKTypes.h: 249
 try:
-    kEdsPropID_AtCapture_Flag = 2147483648L
+    kEdsPropID_AtCapture_Flag = 2147483648
 except:
     pass
 
@@ -2884,559 +2884,559 @@
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 34
 try:
-    EDS_ISSPECIFIC_MASK = 2147483648L
+    EDS_ISSPECIFIC_MASK = 2147483648
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 35
 try:
-    EDS_COMPONENTID_MASK = 2130706432L
+    EDS_COMPONENTID_MASK = 2130706432
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 36
 try:
-    EDS_RESERVED_MASK = 16711680L
+    EDS_RESERVED_MASK = 16711680
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 37
 try:
-    EDS_ERRORID_MASK = 65535L
+    EDS_ERRORID_MASK = 65535
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 42
 try:
-    EDS_CMP_ID_CLIENT_COMPONENTID = 16777216L
+    EDS_CMP_ID_CLIENT_COMPONENTID = 16777216
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 43
 try:
-    EDS_CMP_ID_LLSDK_COMPONENTID = 33554432L
+    EDS_CMP_ID_LLSDK_COMPONENTID = 33554432
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 44
 try:
-    EDS_CMP_ID_HLSDK_COMPONENTID = 50331648L
+    EDS_CMP_ID_HLSDK_COMPONENTID = 50331648
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 49
 try:
-    EDS_ERR_OK = 0L
+    EDS_ERR_OK = 0
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 55
 try:
-    EDS_ERR_UNIMPLEMENTED = 1L
+    EDS_ERR_UNIMPLEMENTED = 1
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 56
 try:
-    EDS_ERR_INTERNAL_ERROR = 2L
+    EDS_ERR_INTERNAL_ERROR = 2
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 57
 try:
-    EDS_ERR_MEM_ALLOC_FAILED = 3L
+    EDS_ERR_MEM_ALLOC_FAILED = 3
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 58
 try:
-    EDS_ERR_MEM_FREE_FAILED = 4L
+    EDS_ERR_MEM_FREE_FAILED = 4
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 59
 try:
-    EDS_ERR_OPERATION_CANCELLED = 5L
+    EDS_ERR_OPERATION_CANCELLED = 5
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 60
 try:
-    EDS_ERR_INCOMPATIBLE_VERSION = 6L
+    EDS_ERR_INCOMPATIBLE_VERSION = 6
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 61
 try:
-    EDS_ERR_NOT_SUPPORTED = 7L
+    EDS_ERR_NOT_SUPPORTED = 7
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 62
 try:
-    EDS_ERR_UNEXPECTED_EXCEPTION = 8L
+    EDS_ERR_UNEXPECTED_EXCEPTION = 8
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 63
 try:
-    EDS_ERR_PROTECTION_VIOLATION = 9L
+    EDS_ERR_PROTECTION_VIOLATION = 9
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 64
 try:
-    EDS_ERR_MISSING_SUBCOMPONENT = 10L
+    EDS_ERR_MISSING_SUBCOMPONENT = 10
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 65
 try:
-    EDS_ERR_SELECTION_UNAVAILABLE = 11L
+    EDS_ERR_SELECTION_UNAVAILABLE = 11
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 68
 try:
-    EDS_ERR_FILE_IO_ERROR = 32L
+    EDS_ERR_FILE_IO_ERROR = 32
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 69
 try:
-    EDS_ERR_FILE_TOO_MANY_OPEN = 33L
+    EDS_ERR_FILE_TOO_MANY_OPEN = 33
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 70
 try:
-    EDS_ERR_FILE_NOT_FOUND = 34L
+    EDS_ERR_FILE_NOT_FOUND = 34
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 71
 try:
-    EDS_ERR_FILE_OPEN_ERROR = 35L
+    EDS_ERR_FILE_OPEN_ERROR = 35
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 72
 try:
-    EDS_ERR_FILE_CLOSE_ERROR = 36L
+    EDS_ERR_FILE_CLOSE_ERROR = 36
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 73
 try:
-    EDS_ERR_FILE_SEEK_ERROR = 37L
+    EDS_ERR_FILE_SEEK_ERROR = 37
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 74
 try:
-    EDS_ERR_FILE_TELL_ERROR = 38L
+    EDS_ERR_FILE_TELL_ERROR = 38
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 75
 try:
-    EDS_ERR_FILE_READ_ERROR = 39L
+    EDS_ERR_FILE_READ_ERROR = 39
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 76
 try:
-    EDS_ERR_FILE_WRITE_ERROR = 40L
+    EDS_ERR_FILE_WRITE_ERROR = 40
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 77
 try:
-    EDS_ERR_FILE_PERMISSION_ERROR = 41L
+    EDS_ERR_FILE_PERMISSION_ERROR = 41
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 78
 try:
-    EDS_ERR_FILE_DISK_FULL_ERROR = 42L
+    EDS_ERR_FILE_DISK_FULL_ERROR = 42
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 79
 try:
-    EDS_ERR_FILE_ALREADY_EXISTS = 43L
+    EDS_ERR_FILE_ALREADY_EXISTS = 43
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 80
 try:
-    EDS_ERR_FILE_FORMAT_UNRECOGNIZED = 44L
+    EDS_ERR_FILE_FORMAT_UNRECOGNIZED = 44
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 81
 try:
-    EDS_ERR_FILE_DATA_CORRUPT = 45L
+    EDS_ERR_FILE_DATA_CORRUPT = 45
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 82
 try:
-    EDS_ERR_FILE_NAMING_NA = 46L
+    EDS_ERR_FILE_NAMING_NA = 46
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 85
 try:
-    EDS_ERR_DIR_NOT_FOUND = 64L
+    EDS_ERR_DIR_NOT_FOUND = 64
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 86
 try:
-    EDS_ERR_DIR_IO_ERROR = 65L
+    EDS_ERR_DIR_IO_ERROR = 65
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 87
 try:
-    EDS_ERR_DIR_ENTRY_NOT_FOUND = 66L
+    EDS_ERR_DIR_ENTRY_NOT_FOUND = 66
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 88
 try:
-    EDS_ERR_DIR_ENTRY_EXISTS = 67L
+    EDS_ERR_DIR_ENTRY_EXISTS = 67
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 89
 try:
-    EDS_ERR_DIR_NOT_EMPTY = 68L
+    EDS_ERR_DIR_NOT_EMPTY = 68
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 92
 try:
-    EDS_ERR_PROPERTIES_UNAVAILABLE = 80L
+    EDS_ERR_PROPERTIES_UNAVAILABLE = 80
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 93
 try:
-    EDS_ERR_PROPERTIES_MISMATCH = 81L
+    EDS_ERR_PROPERTIES_MISMATCH = 81
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 94
 try:
-    EDS_ERR_PROPERTIES_NOT_LOADED = 83L
+    EDS_ERR_PROPERTIES_NOT_LOADED = 83
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 97
 try:
-    EDS_ERR_INVALID_PARAMETER = 96L
+    EDS_ERR_INVALID_PARAMETER = 96
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 98
 try:
-    EDS_ERR_INVALID_HANDLE = 97L
+    EDS_ERR_INVALID_HANDLE = 97
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 99
 try:
-    EDS_ERR_INVALID_POINTER = 98L
+    EDS_ERR_INVALID_POINTER = 98
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 100
 try:
-    EDS_ERR_INVALID_INDEX = 99L
+    EDS_ERR_INVALID_INDEX = 99
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 101
 try:
-    EDS_ERR_INVALID_LENGTH = 100L
+    EDS_ERR_INVALID_LENGTH = 100
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 102
 try:
-    EDS_ERR_INVALID_FN_POINTER = 101L
+    EDS_ERR_INVALID_FN_POINTER = 101
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 103
 try:
-    EDS_ERR_INVALID_SORT_FN = 102L
+    EDS_ERR_INVALID_SORT_FN = 102
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 106
 try:
-    EDS_ERR_DEVICE_NOT_FOUND = 128L
+    EDS_ERR_DEVICE_NOT_FOUND = 128
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 107
 try:
-    EDS_ERR_DEVICE_BUSY = 129L
+    EDS_ERR_DEVICE_BUSY = 129
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 108
 try:
-    EDS_ERR_DEVICE_INVALID = 130L
+    EDS_ERR_DEVICE_INVALID = 130
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 109
 try:
-    EDS_ERR_DEVICE_EMERGENCY = 131L
+    EDS_ERR_DEVICE_EMERGENCY = 131
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 110
 try:
-    EDS_ERR_DEVICE_MEMORY_FULL = 132L
+    EDS_ERR_DEVICE_MEMORY_FULL = 132
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 111
 try:
-    EDS_ERR_DEVICE_INTERNAL_ERROR = 133L
+    EDS_ERR_DEVICE_INTERNAL_ERROR = 133
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 112
 try:
-    EDS_ERR_DEVICE_INVALID_PARAMETER = 134L
+    EDS_ERR_DEVICE_INVALID_PARAMETER = 134
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 113
 try:
-    EDS_ERR_DEVICE_NO_DISK = 135L
+    EDS_ERR_DEVICE_NO_DISK = 135
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 114
 try:
-    EDS_ERR_DEVICE_DISK_ERROR = 136L
+    EDS_ERR_DEVICE_DISK_ERROR = 136
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 115
 try:
-    EDS_ERR_DEVICE_CF_GATE_CHANGED = 137L
+    EDS_ERR_DEVICE_CF_GATE_CHANGED = 137
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 116
 try:
-    EDS_ERR_DEVICE_DIAL_CHANGED = 138L
+    EDS_ERR_DEVICE_DIAL_CHANGED = 138
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 117
 try:
-    EDS_ERR_DEVICE_NOT_INSTALLED = 139L
+    EDS_ERR_DEVICE_NOT_INSTALLED = 139
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 118
 try:
-    EDS_ERR_DEVICE_STAY_AWAKE = 140L
+    EDS_ERR_DEVICE_STAY_AWAKE = 140
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 119
 try:
-    EDS_ERR_DEVICE_NOT_RELEASED = 141L
+    EDS_ERR_DEVICE_NOT_RELEASED = 141
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 122
 try:
-    EDS_ERR_STREAM_IO_ERROR = 160L
+    EDS_ERR_STREAM_IO_ERROR = 160
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 123
 try:
-    EDS_ERR_STREAM_NOT_OPEN = 161L
+    EDS_ERR_STREAM_NOT_OPEN = 161
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 124
 try:
-    EDS_ERR_STREAM_ALREADY_OPEN = 162L
+    EDS_ERR_STREAM_ALREADY_OPEN = 162
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 125
 try:
-    EDS_ERR_STREAM_OPEN_ERROR = 163L
+    EDS_ERR_STREAM_OPEN_ERROR = 163
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 126
 try:
-    EDS_ERR_STREAM_CLOSE_ERROR = 164L
+    EDS_ERR_STREAM_CLOSE_ERROR = 164
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 127
 try:
-    EDS_ERR_STREAM_SEEK_ERROR = 165L
+    EDS_ERR_STREAM_SEEK_ERROR = 165
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 128
 try:
-    EDS_ERR_STREAM_TELL_ERROR = 166L
+    EDS_ERR_STREAM_TELL_ERROR = 166
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 129
 try:
-    EDS_ERR_STREAM_READ_ERROR = 167L
+    EDS_ERR_STREAM_READ_ERROR = 167
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 130
 try:
-    EDS_ERR_STREAM_WRITE_ERROR = 168L
+    EDS_ERR_STREAM_WRITE_ERROR = 168
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 131
 try:
-    EDS_ERR_STREAM_PERMISSION_ERROR = 169L
+    EDS_ERR_STREAM_PERMISSION_ERROR = 169
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 132
 try:
-    EDS_ERR_STREAM_COULDNT_BEGIN_THREAD = 170L
+    EDS_ERR_STREAM_COULDNT_BEGIN_THREAD = 170
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 133
 try:
-    EDS_ERR_STREAM_BAD_OPTIONS = 171L
+    EDS_ERR_STREAM_BAD_OPTIONS = 171
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 134
 try:
-    EDS_ERR_STREAM_END_OF_STREAM = 172L
+    EDS_ERR_STREAM_END_OF_STREAM = 172
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 137
 try:
-    EDS_ERR_COMM_PORT_IS_IN_USE = 192L
+    EDS_ERR_COMM_PORT_IS_IN_USE = 192
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 138
 try:
-    EDS_ERR_COMM_DISCONNECTED = 193L
+    EDS_ERR_COMM_DISCONNECTED = 193
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 139
 try:
-    EDS_ERR_COMM_DEVICE_INCOMPATIBLE = 194L
+    EDS_ERR_COMM_DEVICE_INCOMPATIBLE = 194
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 140
 try:
-    EDS_ERR_COMM_BUFFER_FULL = 195L
+    EDS_ERR_COMM_BUFFER_FULL = 195
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 141
 try:
-    EDS_ERR_COMM_USB_BUS_ERR = 196L
+    EDS_ERR_COMM_USB_BUS_ERR = 196
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 144
 try:
-    EDS_ERR_USB_DEVICE_LOCK_ERROR = 208L
+    EDS_ERR_USB_DEVICE_LOCK_ERROR = 208
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 145
 try:
-    EDS_ERR_USB_DEVICE_UNLOCK_ERROR = 209L
+    EDS_ERR_USB_DEVICE_UNLOCK_ERROR = 209
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 148
 try:
-    EDS_ERR_STI_UNKNOWN_ERROR = 224L
+    EDS_ERR_STI_UNKNOWN_ERROR = 224
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 149
 try:
-    EDS_ERR_STI_INTERNAL_ERROR = 225L
+    EDS_ERR_STI_INTERNAL_ERROR = 225
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 150
 try:
-    EDS_ERR_STI_DEVICE_CREATE_ERROR = 226L
+    EDS_ERR_STI_DEVICE_CREATE_ERROR = 226
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 151
 try:
-    EDS_ERR_STI_DEVICE_RELEASE_ERROR = 227L
+    EDS_ERR_STI_DEVICE_RELEASE_ERROR = 227
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 152
 try:
-    EDS_ERR_DEVICE_NOT_LAUNCHED = 228L
+    EDS_ERR_DEVICE_NOT_LAUNCHED = 228
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 154
 try:
-    EDS_ERR_ENUM_NA = 240L
+    EDS_ERR_ENUM_NA = 240
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 155
 try:
-    EDS_ERR_INVALID_FN_CALL = 241L
+    EDS_ERR_INVALID_FN_CALL = 241
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 156
 try:
-    EDS_ERR_HANDLE_NOT_FOUND = 242L
+    EDS_ERR_HANDLE_NOT_FOUND = 242
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 157
 try:
-    EDS_ERR_INVALID_ID = 243L
+    EDS_ERR_INVALID_ID = 243
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 158
 try:
-    EDS_ERR_WAIT_TIMEOUT_ERROR = 244L
+    EDS_ERR_WAIT_TIMEOUT_ERROR = 244
 except:
     pass
 
@@ -3592,67 +3592,67 @@
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 190
 try:
-    EDS_ERR_TAKE_PICTURE_AF_NG = 36097L
+    EDS_ERR_TAKE_PICTURE_AF_NG = 36097
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 191
 try:
-    EDS_ERR_TAKE_PICTURE_RESERVED = 36098L
+    EDS_ERR_TAKE_PICTURE_RESERVED = 36098
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 192
 try:
-    EDS_ERR_TAKE_PICTURE_MIRROR_UP_NG = 36099L
+    EDS_ERR_TAKE_PICTURE_MIRROR_UP_NG = 36099
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 193
 try:
-    EDS_ERR_TAKE_PICTURE_SENSOR_CLEANING_NG = 36100L
+    EDS_ERR_TAKE_PICTURE_SENSOR_CLEANING_NG = 36100
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 194
 try:
-    EDS_ERR_TAKE_PICTURE_SILENCE_NG = 36101L
+    EDS_ERR_TAKE_PICTURE_SILENCE_NG = 36101
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 195
 try:
-    EDS_ERR_TAKE_PICTURE_NO_CARD_NG = 36102L
+    EDS_ERR_TAKE_PICTURE_NO_CARD_NG = 36102
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 196
 try:
-    EDS_ERR_TAKE_PICTURE_CARD_NG = 36103L
+    EDS_ERR_TAKE_PICTURE_CARD_NG = 36103
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 197
 try:
-    EDS_ERR_TAKE_PICTURE_CARD_PROTECT_NG = 36104L
+    EDS_ERR_TAKE_PICTURE_CARD_PROTECT_NG = 36104
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 198
 try:
-    EDS_ERR_TAKE_PICTURE_MOVIE_CROP_NG = 36105L
+    EDS_ERR_TAKE_PICTURE_MOVIE_CROP_NG = 36105
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 199
 try:
-    EDS_ERR_TAKE_PICTURE_STROBO_CHARGE_NG = 36106L
+    EDS_ERR_TAKE_PICTURE_STROBO_CHARGE_NG = 36106
 except:
     pass
 
 # C:\\PYME\\PYME\\Acquire\\Hardware\\CanonEOS\\/EDSDKErrors.h: 202
 try:
-    EDS_ERR_LAST_GENERIC_ERROR_PLUS_ONE = 245L
+    EDS_ERR_LAST_GENERIC_ERROR_PLUS_ONE = 245
 except:
     pass
 

 

--- ./PYME/Acquire/Hardware/Old/Sensicam/__init__.py	(original)
+++ ./PYME/Acquire/Hardware/Old/Sensicam/__init__.py	(refactored)
@@ -21,4 +21,4 @@
 #
 ##################
 
-from sensicam import *
+from .sensicam import *
--- ./PYME/Acquire/Hardware/Old/Sensicam/sensicam.py	(original)
+++ ./PYME/Acquire/Hardware/Old/Sensicam/sensicam.py	(refactored)
@@ -62,7 +62,7 @@
 
 import types
 try:
-    _object = types.ObjectType
+    _object = object
     _newclass = 1
 except AttributeError:
     class _object : pass

   


--- ./PYME/Acquire/Hardware/uc480/uc480.py	(original)
+++ ./PYME/Acquire/Hardware/uc480/uc480.py	(refactored)
@@ -130,7 +130,7 @@
 			if len (words)!=2: continue
 			name, value = words
 			if value.startswith('0x'):
-				exec '%s = %s' % (name, value)
+				exec('%s = %s' % (name, value))
 				d[name] = eval(value)
 				l.append('%s = %s' % (name, value))
 			# elif name.startswith('DAQmxError') or name.startswith('DAQmxWarning'):
@@ -145,9 +145,9 @@
 				l.append('%s = %s' % (name, value))
 			elif value.startswith('UC'):
 				print(value)
-				d[name] = unicode(value[3:-1])
+				d[name] = str(value[3:-1])
 				l.append('%s = unicode("%s")' % (name, value[3:-1]))
-			elif d.has_key(value):
+			elif value in d:
 				d[name] = d[value]
 				l.append('%s = %s' % (name, d[value]))
 			else:
@@ -215,7 +215,7 @@
 	func = getattr(libuc480, funcname)
 	new_args = []
 	for a in args:		
-		if isinstance (a, unicode):
+		if isinstance (a, str):
 			print((name, 'argument',a, 'is unicode'))
 			new_args.append (str (a))
 		else:
--- ./PYME/Acquire/Hardware/uc480/uc480_h.py	(original)
+++ ./PYME/Acquire/Hardware/uc480/uc480_h.py	(refactored)
@@ -3,8 +3,8 @@
 IS_COLORMODE_INVALID = 0
 IS_COLORMODE_MONOCHROME = 1
 IS_COLORMODE_BAYER = 2
-KODAK_KAI1020M_NAME = unicode("D1024G23M\0")
-KODAK_KAI1020C_NAME = unicode("D1024G23C\0")
+KODAK_KAI1020M_NAME = str("D1024G23M\0")
+KODAK_KAI1020C_NAME = str("D1024G23C\0")
 IS_SENSOR_INVALID = 0x0000
 IS_SENSOR_C0640R13M = 0x0001
 IS_SENSOR_C0640R13C = 0x0002
@@ -226,7 +226,7 @@
 IS_OFF = 0
 IS_ON = 1
 IS_IGNORE_PARAMETER = -1
-IS_USE_DEVICE_ID = 0x8000L
+IS_USE_DEVICE_ID = 0x8000
 IS_GET_AUTO_EXIT_ENABLED = 0x8000
 IS_DISABLE_AUTO_EXIT = 0
 IS_ENABLE_AUTO_EXIT = 1

--- ./PYME/Acquire/Loft/timeseqdialog.py	(original)
+++ ./PYME/Acquire/Loft/timeseqdialog.py	(refactored)
@@ -34,7 +34,7 @@
 [wxID_TSEQDIALOG, wxID_TSEQDIALOGBSTART, wxID_TSEQDIALOGSTATICBOX5, 
  wxID_TSEQDIALOGSTATICBOX6, wxID_TSEQDIALOGSTMEMORY, wxID_TSEQDIALOGTNUMSLICES, 
  wxID_TSEQDIALOGTTIMESTEP, 
-] = map(lambda _init_ctrls: wx.NewId(), range(7))
+] = [wx.NewId() for _init_ctrls in range(7)]
 class seqDialog(wxFrame):
     def _init_ctrls(self, prnt):
         # generated method, don't edit
--- ./PYME/Acquire/Loft/timesequenceaquisator.py	(original)
+++ ./PYME/Acquire/Loft/timesequenceaquisator.py	(refactored)
@@ -53,11 +53,11 @@
     def Verify(self):
         return (True,) 
     def doStartLog(self):
-        if not 'GENERAL' in self.log.keys():
+        if not 'GENERAL' in list(self.log.keys()):
             self.log['GENERAL'] = {}
-        if not 'PIEZOS' in self.log.keys():
+        if not 'PIEZOS' in list(self.log.keys()):
             self.log['PIEZOS'] = {}
-        if not 'CAMERA' in self.log.keys():
+        if not 'CAMERA' in list(self.log.keys()):
             self.log['CAMERA'] = {}
             
         #self.log['PIEZOS']['Piezo'] = self.piezos[self.GetScanChannel()][2]
--- ./PYME/Acquire/Protocols/tile.py	(original)
+++ ./PYME/Acquire/Protocols/tile.py	(refactored)
@@ -61,7 +61,7 @@
 
         self.subplot.cla()
 
-        for i in xrange(X.size):
+        for i in range(X.size):
             self.subplot.plot(ox + X[i], oy + Y[i])#, c=i)
 
         #self.subplot.set_xlim(0, 512)
--- ./PYME/Acquire/Protocols/tile3D.py	(original)
+++ ./PYME/Acquire/Protocols/tile3D.py	(refactored)
@@ -61,7 +61,7 @@
 
         self.subplot.cla()
 
-        for i in xrange(X.size):
+        for i in range(X.size):
             self.subplot.plot(ox + X[i], oy + Y[i])#, c=i)
 
         #self.subplot.set_xlim(0, 512)
--- ./PYME/Acquire/Protocols/tile671.py	(original)
+++ ./PYME/Acquire/Protocols/tile671.py	(refactored)
@@ -52,7 +52,7 @@
 
         self.subplot.cla()
 
-        for i in xrange(X.size):
+        for i in range(X.size):
             self.subplot.plot(ox + X[i], oy + Y[i])#, c=i)
 
         #self.subplot.set_xlim(0, 512)








             zs = self.pixelShifts[2]





--- ./PYME/Analysis/DataSources/UnsplitDataSource.py	(original)
+++ ./PYME/Analysis/DataSources/UnsplitDataSource.py	(refactored)

@@ -131,11 +131,11 @@
 
     fres = np.empty(NClumps, dt)
     
-    clist = [[] for i in xrange(NClumps)]
+    clist = [[] for i in range(NClumps)]
     for i, c in enumerate(assigned):
         clist[int(c-1)].append(i)
 
-    for i in xrange(NClumps):
+    for i in range(NClumps):
             #coalesce the connected ponts into one
             vals = fitResults[clist[i]]
 


 



 

--- ./PYME/Analysis/FitFactories/SplitterFitFR.py	(original)
+++ ./PYME/Analysis/FitFactories/SplitterFitFR.py	(refactored)
@@ -25,7 +25,7 @@
 #from scipy.signal import interpolate
 #import scipy.ndimage as ndimage
 from pylab import *
-import copy_reg
+import copyreg
 import numpy
 import types
 
@@ -43,7 +43,7 @@
 def unpickleSlice(start, stop, step):
         return slice(start, stop, step)
 
-copy_reg.pickle(slice, pickleSlice, unpickleSlice)
+copyreg.pickle(slice, pickleSlice, unpickleSlice)
 
 
 def f_gauss2d2c(p, Xg, Yg, Xr, Yr):
@@ -221,7 +221,7 @@
         fitErrors=None
         try:       
             fitErrors = scipy.sqrt(scipy.diag(cov_x)*(infodict['fvec']*infodict['fvec']).sum()/(len(dataROI.ravel())- len(res)))
-        except Exception, e:
+        except Exception as e:
             pass
 
         #res = hstack([res, array([0,0,0,0])])
-
--- ./PYME/Analysis/FitFactories/SplitterFitInterpQR.py	(original)
+++ ./PYME/Analysis/FitFactories/SplitterFitInterpQR.py	(refactored)
@@ -25,10 +25,10 @@
 #from scipy.signal import interpolate
 #import scipy.ndimage as ndimage
 from pylab import *
-import copy_reg
+import copyreg
 import numpy
 import types
-import cPickle
+import pickle
 
 from PYME.Analysis._fithelpers import *
 #from PYME.Analysis.FitFactories.zEstimators import astigEstimator
@@ -39,7 +39,7 @@
 def unpickleSlice(start, stop, step):
         return slice(start, stop, step)
 
-copy_reg.pickle(slice, pickleSlice, unpickleSlice)
+copyreg.pickle(slice, pickleSlice, unpickleSlice)
 
 def f_Interp3d2c(p, interpolator, Xg, Yg, Zg, Xr, Yr, Zr, safeRegion, axialShift, *args):
     """3D PSF model function with constant background - parameter vector [A, x0, y0, z0, background]"""
@@ -138,7 +138,7 @@
                     print('model changed')
                     self.startPosEstimator.splines.clear()
 
-                if not 'z' in self.startPosEstimator.splines.keys():
+                if not 'z' in list(self.startPosEstimator.splines.keys()):
                     self.startPosEstimator.calibrate(self.interpolator, metadata)
             else:
                 self.interpolator.genTheoreticalModel(metadata)
@@ -281,7 +281,7 @@
         fitErrors=None
         try:       
             fitErrors = scipy.sqrt(scipy.diag(cov_x) * (infodict['fvec'] * infodict['fvec']).sum() / (len(dataROI.ravel())- len(res)))
-        except Exception, e:
+        except Exception as e:
             pass
 
         #normalised Chi-squared
--- ./PYME/Analysis/FitFactories/SplitterFitInterpR.py	(original)
+++ ./PYME/Analysis/FitFactories/SplitterFitInterpR.py	(refactored)
@@ -25,10 +25,10 @@
 #from scipy.signal import interpolate
 #import scipy.ndimage as ndimage
 from pylab import *
-import copy_reg
+import copyreg
 import numpy
 import types
-import cPickle
+import pickle
 
 from PYME.Analysis._fithelpers import *
 #from PYME.Analysis.FitFactories.zEstimators import astigEstimator
@@ -39,7 +39,7 @@
 def unpickleSlice(start, stop, step):
         return slice(start, stop, step)
 
-copy_reg.pickle(slice, pickleSlice, unpickleSlice)
+copyreg.pickle(slice, pickleSlice, unpickleSlice)
 
 def f_Interp3d2c(p, interpolator, Xg, Yg, Zg, Xr, Yr, Zr, safeRegion, axialShift, *args):
     """3D PSF model function with constant background - parameter vector [A, x0, y0, z0, background]"""
@@ -168,7 +168,7 @@
                     print('model changed')
                     self.startPosEstimator.splines.clear()
 
-                if not 'z' in self.startPosEstimator.splines.keys():
+                if not 'z' in list(self.startPosEstimator.splines.keys()):
                     self.startPosEstimator.calibrate(self.interpolator, metadata)
             else:
                 self.interpolator.genTheoreticalModel(metadata)
@@ -316,7 +316,7 @@
         fitErrors=None
         try:       
             fitErrors = scipy.sqrt(scipy.diag(cov_x) * (infodict['fvec'] * infodict['fvec']).sum() / (len(dataROI.ravel())- len(res)))
-        except Exception, e:
+        except Exception as e:
             pass
 
         #normalised Chi-squared
--- ./PYME/Analysis/FitFactories/SplitterFitQR.py	(original)
+++ ./PYME/Analysis/FitFactories/SplitterFitQR.py	(refactored)
@@ -25,7 +25,7 @@
 #from scipy.signal import interpolate
 #import scipy.ndimage as ndimage
 from pylab import *
-import copy_reg
+import copyreg
 import numpy
 import types
 
@@ -43,7 +43,7 @@
 def unpickleSlice(start, stop, step):
         return slice(start, stop, step)
 
-copy_reg.pickle(slice, pickleSlice, unpickleSlice)
+copyreg.pickle(slice, pickleSlice, unpickleSlice)
 
 
 def f_gauss2d2c(p, Xg, Yg, Xr, Yr):
@@ -239,7 +239,7 @@
         fitErrors=None
         try:       
             fitErrors = scipy.sqrt(scipy.diag(cov_x)*(infodict['fvec']*infodict['fvec']).sum()/(len(dataROI.ravel())- len(res)))
-        except Exception, e:
+        except Exception as e:
             pass
 
 	#print res, fitErrors, resCode
--- ./PYME/Analysis/FitFactories/SplitterMultifitSR.py	(original)
+++ ./PYME/Analysis/FitFactories/SplitterMultifitSR.py	(refactored)
@@ -25,7 +25,7 @@
 #from scipy.signal import interpolate
 import scipy.ndimage as ndimage
 #from pylab import *
-import copy_reg
+import copyreg
 import numpy
 #import types
 
@@ -41,7 +41,7 @@
 def unpickleSlice(start, stop, step):
         return slice(start, stop, step)
 
-copy_reg.pickle(slice, pickleSlice, unpickleSlice)
+copyreg.pickle(slice, pickleSlice, unpickleSlice)
 
 def f_gauss2dSlow(p, X, Y):
     """2D Gaussian model function with linear background - parameter vector [A, x0, y0, sigma, background, lin_x, lin_y]"""
@@ -349,7 +349,7 @@
                 fitErrors=None
                 try:       
                     fitErrors = scipy.sqrt(scipy.diag(cov_x)*(infodict['fvec']*infodict['fvec']).sum()/(len(d_m)- len(res)))
-                except Exception, e:
+                except Exception as e:
                     pass
                 #print res, fitErrors, resCode
                 #recreate a list of events in the desired format
--- ./PYME/Analysis/FitFactories/SplitterObjFindR.py	(original)
+++ ./PYME/Analysis/FitFactories/SplitterObjFindR.py	(refactored)
@@ -25,7 +25,7 @@
 #from scipy.signal import interpolate
 import scipy.ndimage as ndimage
 from pylab import *
-import copy_reg
+import copyreg
 import numpy
 import types
 
@@ -43,7 +43,7 @@
 def unpickleSlice(start, stop, step):
         return slice(start, stop, step)
 
-copy_reg.pickle(slice, pickleSlice, unpickleSlice)
+copyreg.pickle(slice, pickleSlice, unpickleSlice)
 
 
 def f_gauss2d2c(p, X, Y):
@@ -174,7 +174,7 @@
         fitErrors=None
         try:       
             fitErrors = scipy.sqrt(scipy.diag(cov_x)*(infodict['fvec']*infodict['fvec']).sum()/(len(dataROI.ravel())- len(res)))
-        except Exception, e:
+        except Exception as e:
             pass
 
         #print res, fitErrors, resCode
--- ./PYME/Analysis/FitFactories/SplitterShiftEstFR.py	(original)
+++ ./PYME/Analysis/FitFactories/SplitterShiftEstFR.py	(refactored)
@@ -25,7 +25,7 @@
 #from scipy.signal import interpolate
 #import scipy.ndimage as ndimage
 from pylab import *
-import copy_reg
+import copyreg
 import numpy
 import types
 
@@ -43,7 +43,7 @@
 def unpickleSlice(start, stop, step):
         return slice(start, stop, step)
 
-copy_reg.pickle(slice, pickleSlice, unpickleSlice)
+copyreg.pickle(slice, pickleSlice, unpickleSlice)
 
 
 def f_gauss2d2c(p, X, Y):
@@ -173,7 +173,7 @@
         fitErrors=None
         try:       
             fitErrors = scipy.sqrt(scipy.diag(cov_x)*(infodict['fvec']*infodict['fvec']).sum()/(len(dataROI.ravel())- len(res)))
-        except Exception, e:
+        except Exception as e:
             pass
 
         #print res, fitErrors, resCode
--- ./PYME/Analysis/FitFactories/fitCommon.py	(original)
+++ ./PYME/Analysis/FitFactories/fitCommon.py	(refactored)
@@ -5,7 +5,7 @@
 @author: david
 """
 
-import copy_reg
+import copyreg
 
 def pickleSlice(slice):
         return unpickleSlice, (slice.start, slice.stop, slice.step)
@@ -13,7 +13,7 @@
 def unpickleSlice(start, stop, step):
         return slice(start, stop, step)
 
-copy_reg.pickle(slice, pickleSlice, unpickleSlice)
+copyreg.pickle(slice, pickleSlice, unpickleSlice)
 
 def replNoneWith1(n):
         if n == None:
--- ./PYME/Analysis/FitFactories/Interpolators/CubicSplineInterpolator.py	(original)
+++ ./PYME/Analysis/FitFactories/Interpolators/CubicSplineInterpolator.py	(refactored)
@@ -20,7 +20,7 @@
 # along with this program.  If not, see <http://www.gnu.org/licenses/>.
 #
 ################
-from baseInterpolator import __interpolator
+from .baseInterpolator import __interpolator
 from numpy import *
 from scipy import ndimage
 
--- ./PYME/Analysis/FitFactories/Interpolators/LinearInterpolator.py	(original)
+++ ./PYME/Analysis/FitFactories/Interpolators/LinearInterpolator.py	(refactored)
@@ -20,7 +20,7 @@
 # along with this program.  If not, see <http://www.gnu.org/licenses/>.
 #
 ################
-from baseInterpolator import __interpolator
+from .baseInterpolator import __interpolator
 from numpy import *
 from PYME.Analysis.cInterp import cInterp
 
--- ./PYME/Analysis/FitFactories/Interpolators/LinearInterpolatorP.py	(original)
+++ ./PYME/Analysis/FitFactories/Interpolators/LinearInterpolatorP.py	(refactored)
@@ -20,7 +20,7 @@
 # along with this program.  If not, see <http://www.gnu.org/licenses/>.
 #
 ################
-from baseInterpolator import __interpolator
+from .baseInterpolator import __interpolator
 from numpy import *
 
 class LinearInterpolator(__interpolator):
--- ./PYME/Analysis/FitFactories/loft/3DGaussFitR.py	(original)
+++ ./PYME/Analysis/FitFactories/loft/3DGaussFitR.py	(refactored)
@@ -19,7 +19,7 @@
 
 from PYME.Analysis._fithelpers import *
 
-import copy_reg
+import copyreg
 
 def pickleSlice(slice):
         return unpickleSlice, (slice.start, slice.stop, slice.step)
@@ -27,7 +27,7 @@
 def unpickleSlice(start, stop, step):
         return slice(start, stop, step)
 
-copy_reg.pickle(slice, pickleSlice, unpickleSlice)
+copyreg.pickle(slice, pickleSlice, unpickleSlice)
 
 
 
--- ./PYME/Analysis/FitFactories/loft/BiplaneFitR.py	(original)
+++ ./PYME/Analysis/FitFactories/loft/BiplaneFitR.py	(refactored)
@@ -14,7 +14,7 @@
 #from scipy.signal import interpolate
 #import scipy.ndimage as ndimage
 from pylab import *
-import copy_reg
+import copyreg
 import numpy
 import types
 
@@ -34,7 +34,7 @@
 def unpickleSlice(start, stop, step):
         return slice(start, stop, step)
 
-copy_reg.pickle(slice, pickleSlice, unpickleSlice)
+copyreg.pickle(slice, pickleSlice, unpickleSlice)
 
 
 IntXVals = None
@@ -278,7 +278,7 @@
         fitErrors=None
         try:
             fitErrors = scipy.sqrt(scipy.diag(cov_x) * (infodict['fvec'] * infodict['fvec']).sum() / (len(dataROI.ravel())- len(res)))
-        except Exception, e:
+        except Exception as e:
             pass
 
         #print res, fitErrors, resCode
--- ./PYME/Analysis/FitFactories/loft/LatGaussFit.py	(original)
+++ ./PYME/Analysis/FitFactories/loft/LatGaussFit.py	(refactored)
@@ -14,7 +14,7 @@
 from scipy.signal import interpolate
 import scipy.ndimage as ndimage
 from pylab import *
-import copy_reg
+import copyreg
 import numpy
 
 from scipy import weave
@@ -27,7 +27,7 @@
 def unpickleSlice(start, stop, step):
         return slice(start, stop, step)
 
-copy_reg.pickle(slice, pickleSlice, unpickleSlice)
+copyreg.pickle(slice, pickleSlice, unpickleSlice)
 
 def f_gauss2d(p, X, Y):
     """2D Gaussian model function with linear background - parameter vector [A, x0, y0, sigma, background, lin_x, lin_y]"""
@@ -128,7 +128,7 @@
         fitErrors=None
         try:       
             fitErrors = scipy.sqrt(scipy.diag(cov_x)*(infodict['fvec']*infodict['fvec']).sum()/(len(dataMean.ravel())- len(res)))
-        except Exception, e:
+        except Exception as e:
             pass
         return GaussianFitResult(res, self.metadata, (xslice, yslice, zslice), resCode, fitErrors)
 
--- ./PYME/Analysis/FitFactories/loft/LatGaussFitAF.py	(original)
+++ ./PYME/Analysis/FitFactories/loft/LatGaussFitAF.py	(refactored)
@@ -14,7 +14,7 @@
 from scipy.signal import interpolate
 import scipy.ndimage as ndimage
 from pylab import *
-import copy_reg
+import copyreg
 import numpy
 
 from gauss_app import *
@@ -29,7 +29,7 @@
 def unpickleSlice(start, stop, step):
         return slice(start, stop, step)
 
-copy_reg.pickle(slice, pickleSlice, unpickleSlice)
+copyreg.pickle(slice, pickleSlice, unpickleSlice)
 
 def f_gauss2dA(p, X, Y):
     """2D Gaussian model function with linear background - parameter vector [A, x0, y0, sigma, background, lin_x, lin_y]"""
@@ -140,7 +140,7 @@
         fitErrors=None
         try:       
             fitErrors = scipy.sqrt(scipy.diag(cov_x)*(infodict['fvec']*infodict['fvec']).sum()/(len(dataMean.ravel())- len(res)))
-        except Exception, e:
+        except Exception as e:
             pass
         return GaussianFitResult(res, self.metadata, (xslice, yslice, zslice), resCode, fitErrors)
 
--- ./PYME/Analysis/FitFactories/loft/LatGaussFitF.py	(original)
+++ ./PYME/Analysis/FitFactories/loft/LatGaussFitF.py	(refactored)
@@ -14,7 +14,7 @@
 from scipy.signal import interpolate
 import scipy.ndimage as ndimage
 from pylab import *
-import copy_reg
+import copyreg
 import numpy
 
 from PYME.Analysis.cModels.gauss_app import *
@@ -29,7 +29,7 @@
 def unpickleSlice(start, stop, step):
         return slice(start, stop, step)
 
-copy_reg.pickle(slice, pickleSlice, unpickleSlice)
+copyreg.pickle(slice, pickleSlice, unpickleSlice)
 
 def f_gauss2d(p, X, Y):
     """2D Gaussian model function with linear background - parameter vector [A, x0, y0, sigma, background, lin_x, lin_y]"""
@@ -150,7 +150,7 @@
         fitErrors=None
         try:       
             fitErrors = scipy.sqrt(scipy.diag(cov_x)*(infodict['fvec']*infodict['fvec']).sum()/(len(dataMean.ravel())- len(res)))
-        except Exception, e:
+        except Exception as e:
             pass
         return GaussianFitResult(res, self.metadata, (xslice, yslice, zslice), resCode, fitErrors)
 
--- ./PYME/Analysis/FitFactories/loft/LatGaussFitFJ.py	(original)
+++ ./PYME/Analysis/FitFactories/loft/LatGaussFitFJ.py	(refactored)
@@ -14,7 +14,7 @@
 from scipy.signal import interpolate
 import scipy.ndimage as ndimage
 from pylab import *
-import copy_reg
+import copyreg
 import numpy
 
 from  cModels.gauss_ap import *
@@ -29,7 +29,7 @@
 def unpickleSlice(start, stop, step):
         return slice(start, stop, step)
 
-copy_reg.pickle(slice, pickleSlice, unpickleSlice)
+copyreg.pickle(slice, pickleSlice, unpickleSlice)
 
 def f_gauss2d(p, X, Y):
     """2D Gaussian model function with linear background - parameter vector [A, x0, y0, sigma, background, lin_x, lin_y]"""
@@ -151,7 +151,7 @@
         fitErrors=None
         try:       
             fitErrors = scipy.sqrt(scipy.diag(cov_x)*(infodict['fvec']*infodict['fvec']).sum()/(len(dataMean.ravel())- len(res)))
-        except Exception, e:
+        except Exception as e:
             pass
         return GaussianFitResult(res, self.metadata, (xslice, yslice, zslice), resCode, fitErrors)
 
--- ./PYME/Analysis/FitFactories/loft/LatPSFFit.py	(original)
+++ ./PYME/Analysis/FitFactories/loft/LatPSFFit.py	(refactored)
@@ -18,7 +18,7 @@
 
 from _fithelpers import *
 
-import copy_reg
+import copyreg
 
 def pickleSlice(slice):
         return unpickleSlice, (slice.start, slice.stop, slice.step)
@@ -26,7 +26,7 @@
 def unpickleSlice(start, stop, step):
         return slice(start, stop, step)
 
-copy_reg.pickle(slice, pickleSlice, unpickleSlice)
+copyreg.pickle(slice, pickleSlice, unpickleSlice)
 
 
 
--- ./PYME/Analysis/FitFactories/loft/PsfFitCSIR.py	(original)
+++ ./PYME/Analysis/FitFactories/loft/PsfFitCSIR.py	(refactored)
@@ -14,10 +14,10 @@
 #from scipy.signal import interpolate
 import scipy.ndimage as ndimage
 from pylab import *
-import copy_reg
+import copyreg
 import numpy
 import types
-import cPickle
+import pickle
 
 from PYME.Analysis import twist
 
@@ -38,7 +38,7 @@
 def unpickleSlice(start, stop, step):
         return slice(start, stop, step)
 
-copy_reg.pickle(slice, pickleSlice, unpickleSlice)
+copyreg.pickle(slice, pickleSlice, unpickleSlice)
 
 
 IntXVals = None
@@ -79,7 +79,7 @@
 
     if not modName == interpModelName:
         mf = open(getFullExistingFilename(modName), 'rb')
-        mod, voxelsize = cPickle.load(mf)
+        mod, voxelsize = pickle.load(mf)
         mf.close()
         
         interpModelName = modName
@@ -312,7 +312,7 @@
         fitErrors=None
         try:
             fitErrors = scipy.sqrt(scipy.diag(cov_x) * (infodict['fvec'] * infodict['fvec']).sum() / (len(dataROI.ravel())- len(res)))
-        except Exception, e:
+        except Exception as e:
             pass
 
         #print res, fitErrors, resCode
--- ./PYME/Analysis/FitFactories/loft/PsfFitFTR.py	(original)
+++ ./PYME/Analysis/FitFactories/loft/PsfFitFTR.py	(refactored)
@@ -14,10 +14,10 @@
 #from scipy.signal import interpolate
 #import scipy.ndimage as ndimage
 from pylab import *
-import copy_reg
+import copyreg
 import numpy
 import types
-import cPickle
+import pickle
 #from math import floor, ceil
 
 from PYME.Analysis import twist
@@ -42,7 +42,7 @@
 def unpickleSlice(start, stop, step):
         return slice(start, stop, step)
 
-copy_reg.pickle(slice, pickleSlice, unpickleSlice)
+copyreg.pickle(slice, pickleSlice, unpickleSlice)
 
 
 IntXVals = None
@@ -95,7 +95,7 @@
 
     if not modName == interpModelName:
         mf = open(getFullExistingFilename(modName), 'rb')
-        mod, voxelsize = cPickle.load(mf)
+        mod, voxelsize = pickle.load(mf)
 
         mod = mod[15:-15, 15:-15, :]
 
@@ -385,7 +385,7 @@
         try:
             fitErrors[:2] = scipy.sqrt(scipy.diag(cov_z) * (infodict_z['fvec'] * infodict_z['fvec']).sum() / (len(dataROI.ravel())- len(res_z)))
             fitErrors[2:4] = scipy.sqrt(scipy.diag(cov_x) * (infodict_x['fvec'] * infodict_x['fvec']).sum() / (len(dataROI.ravel())- len(res_x)))
-        except Exception, e:
+        except Exception as e:
             pass
 
         #print res, fitErrors, resCode
--- ./PYME/Analysis/FitFactories/loft/PsfFitIR.py	(original)
+++ ./PYME/Analysis/FitFactories/loft/PsfFitIR.py	(refactored)
@@ -14,10 +14,10 @@
 #from scipy.signal import interpolate
 #import scipy.ndimage as ndimage
 from pylab import *
-import copy_reg
+import copyreg
 import numpy
 import types
-import cPickle
+import pickle
 
 from PYME.Analysis import twist
 
@@ -38,7 +38,7 @@
 def unpickleSlice(start, stop, step):
         return slice(start, stop, step)
 
-copy_reg.pickle(slice, pickleSlice, unpickleSlice)
+copyreg.pickle(slice, pickleSlice, unpickleSlice)
 
 
 IntXVals = None
@@ -76,7 +76,7 @@
 
     if not modName == interpModelName:
         mf = open(getFullExistingFilename(modName), 'rb')
-        mod, voxelsize = cPickle.load(mf)
+        mod, voxelsize = pickle.load(mf)
         mf.close()
         
         interpModelName = modName
@@ -446,7 +446,7 @@
         fitErrors=None
         try:
             fitErrors = scipy.sqrt(scipy.diag(cov_x) * (infodict['fvec'] * infodict['fvec']).sum() / (len(dataROI.ravel())- len(res)))
-        except Exception, e:
+        except Exception as e:
             pass
 
         #normalised Chi-squared
--- ./PYME/Analysis/FitFactories/loft/PsfFitSR.py	(original)
+++ ./PYME/Analysis/FitFactories/loft/PsfFitSR.py	(refactored)
@@ -14,10 +14,10 @@
 #from scipy.signal import interpolate
 #import scipy.ndimage as ndimage
 from pylab import *
-import copy_reg
+import copyreg
 import numpy
 import types
-import cPickle
+import pickle
 
 from PYME.Analysis import twist
 
@@ -38,7 +38,7 @@
 def unpickleSlice(start, stop, step):
         return slice(start, stop, step)
 
-copy_reg.pickle(slice, pickleSlice, unpickleSlice)
+copyreg.pickle(slice, pickleSlice, unpickleSlice)
 
 
 IntXVals = None
@@ -89,7 +89,7 @@
 
     if not modName == interpModelName:
         mf = open(getFullExistingFilename(modName), 'rb')
-        mod, voxelsize = cPickle.load(mf)
+        mod, voxelsize = pickle.load(mf)
         mf.close()
 
         interpModelName = modName
@@ -329,7 +329,7 @@
         fitErrors=None
         try:
             fitErrors = scipy.sqrt(scipy.diag(cov_x) * (infodict['fvec'] * infodict['fvec']).sum() / (len(dataROI.ravel())- len(res)))
-        except Exception, e:
+        except Exception as e:
             pass
 
         #print res, fitErrors, resCode
--- ./PYME/Analysis/FitFactories/loft/SMIAxialFit.py	(original)
+++ ./PYME/Analysis/FitFactories/loft/SMIAxialFit.py	(refactored)
@@ -125,7 +125,7 @@
 
     def __CalcStartParams(self, profile):
         xi = scipy.arange(0, len(profile) - 1, .1)
-        ti = interpolate.interp1d(range(len(profile)), profile, 'cubic')(xi)
+        ti = interpolate.interp1d(list(range(len(profile))), profile, 'cubic')(xi)
 
         i_ = ti.argmax()
         v = ti[i_]
@@ -200,7 +200,7 @@
         #print ind3
         try:
             (res, resCode) = FitModel(f_SMIAxial, startParameters, profile[ind3], ind3, ysmooth[ind3], back)
-        except TypeError, e:
+        except TypeError as e:
             res = [-1, -1, -1, -1]
             resCode = -1
 
--- ./PYME/Analysis/FitFactories/loft/SplitterFitPsfIR.py	(original)
+++ ./PYME/Analysis/FitFactories/loft/SplitterFitPsfIR.py	(refactored)
@@ -14,10 +14,10 @@
 #from scipy.signal import interpolate
 #import scipy.ndimage as ndimage
 from pylab import *
-import copy_reg
+import copyreg
 import numpy
 import types
-import cPickle
+import pickle
 
 #import PYME.Analysis.twoColour as twoColour
 
@@ -38,7 +38,7 @@
 def unpickleSlice(start, stop, step):
         return slice(start, stop, step)
 
-copy_reg.pickle(slice, pickleSlice, unpickleSlice)
+copyreg.pickle(slice, pickleSlice, unpickleSlice)
 
 
 IntXVals = None
@@ -77,7 +77,7 @@
 
     if not modName == interpModelName:
         mf = open(getFullExistingFilename(modName), 'rb')
-        mod, voxelsize = cPickle.load(mf)
+        mod, voxelsize = pickle.load(mf)
         mf.close()
 
         interpModelName = modName
@@ -402,7 +402,7 @@
         fitErrors=None
         try:       
             fitErrors = scipy.sqrt(scipy.diag(cov_x) * (infodict['fvec'] * infodict['fvec']).sum() / (len(dataROI.ravel())- len(res)))
-        except Exception, e:
+        except Exception as e:
             pass
 
         #normalised Chi-squared





--- ./PYME/Analysis/LMVis/colourPanel.py	(original)
+++ ./PYME/Analysis/LMVis/colourPanel.py	(refactored)
@@ -28,7 +28,7 @@
 import wx
 from pylab import cm
 import sys
-import dyeRatios
+from . import dyeRatios
 
 class colourPlotPanel(wxPlotPanel.PlotPanel):
     def __init__(self, parent, pipeline, visFrame, **kwargs ):
@@ -65,14 +65,14 @@
             c = -5e3*numpy.ones(x.shape)
 #            print (c < -1).sum(), c.min()
 
-            for k, v in self.pipeline.fluorSpecies.items():
+            for k, v in list(self.pipeline.fluorSpecies.items()):
                 p_dye = self.pipeline.mapping['p_%s' % k][::max(l_x/1e4, 1)]
 
                 p_other = numpy.zeros(x.shape)
                 #p_tot = numpy.zeros(p_dye.shape)
                 p_tot = self.pipeline.t_p_background*self.pipeline.mapping['ColourNorm'][::max(l_x/1e4, 1)]
 
-                for k2 in self.pipeline.fluorSpecies.keys():
+                for k2 in list(self.pipeline.fluorSpecies.keys()):
                     p_tot  += self.pipeline.mapping['p_%s' % k2][::max(l_x/1e4, 1)]
                     if not k2 ==k:
                         p_other = numpy.maximum(p_other, self.pipeline.mapping['p_%s' % k2][::max(l_x/1e4, 1)])
@@ -112,7 +112,7 @@
             self.subplot1.set_ylim((0, yl))
 
 
-            for k, v in self.pipeline.fluorSpecies.items():
+            for k, v in list(self.pipeline.fluorSpecies.items()):
                 self.subplot1.plot([0,xl], [0, ((1-v)/v)*xl], lw=2, c=cm.jet_r(v))
 
             self.canvas.draw()
@@ -170,8 +170,8 @@
         self.lFluorSpecies.makeColumnEditable(4)
         self.lFluorSpecies.makeColumnEditable(5)
 
-        for key, value in self.pipeline.fluorSpecies.items():
-            ind = self.lFluorSpecies.InsertStringItem(sys.maxint, key)
+        for key, value in list(self.pipeline.fluorSpecies.items()):
+            ind = self.lFluorSpecies.InsertStringItem(sys.maxsize, key)
             self.lFluorSpecies.SetStringItem(ind,1, '%3.2f' % value)
             self.lFluorSpecies.SetItemTextColour(ind, wx.Colour(*((128*numpy.array(cm.jet_r(value)))[:3])))
             
@@ -291,7 +291,7 @@
 
             self.pipeline.fluorSpecies[key] = val
 
-            ind = self.lFluorSpecies.InsertStringItem(sys.maxint, key)
+            ind = self.lFluorSpecies.InsertStringItem(sys.maxsize, key)
             self.lFluorSpecies.SetStringItem(ind,1, '%3.2f' % val)
             #print val, (255*numpy.array(cm.gist_rainbow(val)))[:3]
             self.lFluorSpecies.SetItemTextColour(ind, wx.Colour(*((128*numpy.array(cm.jet_r(val)))[:3])))
@@ -339,7 +339,7 @@
         else: #shift
             axis = ['x', 'y', 'z'][col-3]
             specName = it.GetText()
-            if not specName in self.pipeline.chromaticShifts.keys():
+            if not specName in list(self.pipeline.chromaticShifts.keys()):
                 self.pipeline.chromaticShifts[specName] = {}
 
             self.pipeline.chromaticShifts[specName][axis] = val
@@ -353,10 +353,10 @@
 
         guesses = scipy.cluster.vq.kmeans(self.pipeline.filter['gFrac'], n)[0]
 
-        for g, i in zip(guesses, range(n)):
+        for g, i in zip(guesses, list(range(n))):
             key = '%c' % (65 + i)
             self.pipeline.fluorSpecies[key] = g
-            ind = self.lFluorSpecies.InsertStringItem(sys.maxint, key)
+            ind = self.lFluorSpecies.InsertStringItem(sys.maxsize, key)
             self.lFluorSpecies.SetStringItem(ind,1, '%3.3f' % g)
             self.lFluorSpecies.SetItemTextColour(ind, wx.Colour(*((128*numpy.array(cm.jet_r(g)))[:3])))
 
@@ -382,7 +382,7 @@
 
             if not ratio == None:
                 self.pipeline.fluorSpecies[structure] = ratio
-                ind = self.lFluorSpecies.InsertStringItem(sys.maxint, structure)
+                ind = self.lFluorSpecies.InsertStringItem(sys.maxsize, structure)
                 self.lFluorSpecies.SetStringItem(ind,1, '%3.3f' % ratio)
                 self.lFluorSpecies.SetItemTextColour(ind, wx.Colour(*((128*numpy.array(cm.jet_r(ratio)))[:3])))
 
@@ -405,7 +405,7 @@
     def refresh(self):
         self.colPlotPan.draw()
 
-        for key in self.pipeline.fluorSpecies.keys():
+        for key in list(self.pipeline.fluorSpecies.keys()):
             ind = self.lFluorSpecies.FindItem(-1,key)
             p_dye = self.pipeline.mapping['p_%s' % key]
 
@@ -413,7 +413,7 @@
             #p_tot = numpy.zeros(p_dye.shape)
             p_tot = self.pipeline.t_p_background*self.pipeline.mapping['ColourNorm']
 
-            for k2 in self.pipeline.fluorSpecies.keys():
+            for k2 in list(self.pipeline.fluorSpecies.keys()):
                 p_tot  += self.pipeline.mapping['p_%s' % k2]
                 if not k2 ==key:
                     p_other = numpy.maximum(p_other, self.pipeline.mapping['p_%s' % k2])

 
--- ./PYME/Analysis/LMVis/fastGraph.py	(original)
+++ ./PYME/Analysis/LMVis/fastGraph.py	(refactored)
@@ -129,7 +129,7 @@
         h = (self.Size[1] - self.textSize - 2)*(1.0-((self.h - self.h.min())/(1.0*(self.h.max()-self.h.min() + .1))))
 
         maxy = self.Size[1] - self.textSize
-        pointlist = [(i+self.left_margin,h_i) for i, h_i in zip(range(len(h)), h)]
+        pointlist = [(i+self.left_margin,h_i) for i, h_i in zip(list(range(len(h))), h)]
         #pointlist = [(10,h[0])] + pointlist + [(self.Size[0], maxy)]
 
         dc.Clear()
--- ./PYME/Analysis/LMVis/filterPane.py	(original)
+++ ./PYME/Analysis/LMVis/filterPane.py	(refactored)
@@ -48,8 +48,8 @@
         self.lFiltKeys.InsertColumn(1, 'Min')
         self.lFiltKeys.InsertColumn(2, 'Max')
 
-        for key, value in self.filterKeys.items():
-            ind = self.lFiltKeys.InsertStringItem(sys.maxint, key)
+        for key, value in list(self.filterKeys.items()):
+            ind = self.lFiltKeys.InsertStringItem(sys.maxsize, key)
             self.lFiltKeys.SetStringItem(ind,1, '%3.2f' % value[0])
             self.lFiltKeys.SetStringItem(ind,2, '%3.2f' % value[1])
 
@@ -133,14 +133,14 @@
         event.Skip()
 
     def OnFilterClipToSelection(self, event):
-        if 'x' in self.filterKeys.keys() or 'y' in self.filterKeys.keys():
-            if 'x' in self.filterKeys.keys():
+        if 'x' in list(self.filterKeys.keys()) or 'y' in list(self.filterKeys.keys()):
+            if 'x' in list(self.filterKeys.keys()):
                 i = 0
                 while not self.lFiltKeys.GetItemText(i) == 'x':
                     i +=1
                 self.lFiltKeys.DeleteItem(i)
                 self.filterKeys.pop('x')
-            if 'y' in self.filterKeys.keys():
+            if 'y' in list(self.filterKeys.keys()):
                 i = 0
                 while not self.lFiltKeys.GetItemText(i) == 'y':
                     i +=1
@@ -152,13 +152,13 @@
             x0, y0 = self.visFr.glCanvas.selectionStart
             x1, y1 = self.visFr.glCanvas.selectionFinish
 
-            if not 'x' in self.filterKeys.keys():
-                indx = self.lFiltKeys.InsertStringItem(sys.maxint, 'x')
+            if not 'x' in list(self.filterKeys.keys()):
+                indx = self.lFiltKeys.InsertStringItem(sys.maxsize, 'x')
             else:
                 indx = [self.lFiltKeys.GetItemText(i) for i in range(self.lFiltKeys.GetItemCount())].index('x')
 
-            if not 'y' in self.filterKeys.keys():
-                indy = self.lFiltKeys.InsertStringItem(sys.maxint, 'y')
+            if not 'y' in list(self.filterKeys.keys()):
+                indy = self.lFiltKeys.InsertStringItem(sys.maxsize, 'y')
             else:
                 indy = [self.lFiltKeys.GetItemText(i) for i in range(self.lFiltKeys.GetItemCount())].index('y')
 
@@ -181,7 +181,7 @@
 
         possibleKeys = []
         if not self.pipeline.selectedDataSource == None:
-            possibleKeys = self.pipeline.selectedDataSource.keys()
+            possibleKeys = list(self.pipeline.selectedDataSource.keys())
 
         dlg = editFilterDialog.FilterEditDialog(self, mode='new', possibleKeys=possibleKeys)
 
@@ -198,7 +198,7 @@
 
             self.filterKeys[key] = (minVal, maxVal)
 
-            ind = self.lFiltKeys.InsertStringItem(sys.maxint, key)
+            ind = self.lFiltKeys.InsertStringItem(sys.maxsize, key)
             self.lFiltKeys.SetStringItem(ind,1, '%3.2f' % minVal)
             self.lFiltKeys.SetStringItem(ind,2, '%3.2f' % maxVal)
 
--- ./PYME/Analysis/LMVis/gen3DTriangs.py	(original)
+++ ./PYME/Analysis/LMVis/gen3DTriangs.py	(refactored)
@@ -150,7 +150,7 @@
 
 class emptyListDict(dict):
     def __getitem__(self, key):
-        if key in self.keys():
+        if key in list(self.keys()):
             return dict.__getitem__(self, key)
         else:
             return []
@@ -231,9 +231,9 @@
 #           surfInds*=(matches == 0) #remove triangles
     if internalCull:
         fcs = {} #emptyListDict()
-        for i, triI in zip(range(len(triInds)), triInds):
+        for i, triI in zip(list(range(len(triInds))), triInds):
             t_t = tuple(triI)
-            if t_t in fcs.keys():
+            if t_t in list(fcs.keys()):
                 surfInds[fcs[t_t]] = 0
                 surfInds[i] = 0
             else:
@@ -410,7 +410,7 @@
     return sqrt((edVecs**2).sum(1)).sum()
 
 def averageNormals(P,N):
-    i_s = range(P.shape[0])
+    i_s = list(range(P.shape[0]))
 
     while len(i_s) > 0:
         i = i_s.pop(0)
@@ -617,7 +617,7 @@
     
     A_ = []
 
-    for o, i in zip(objects, range(len(objects))):
+    for o, i in zip(objects, list(range(len(objects)))):
         T = delaunay.Triangulation(o.ravel(),2)
         #T2 = matplotlib.delaunay.Triangulation(o[:, 0], o[:,1])
         P, A, triI = gen2DTriangsTF(T, sizeCutoff)

--- ./PYME/Analysis/LMVis/gl_render.py	(original)
+++ ./PYME/Analysis/LMVis/gl_render.py	(refactored)
@@ -36,7 +36,7 @@
 #from PYME.Analysis.QuadTree import pointQT
 #import numpy
 
-import statusLog
+from . import statusLog
 import weakref
 
 try:
@@ -585,7 +585,7 @@
 
 
     def setBlobs(self, objects, sizeCutoff):
-        import gen3DTriangs
+        from . import gen3DTriangs
 
         vs, self.c = gen3DTriangs.blobify2D(objects, sizeCutoff)
 
--- ./PYME/Analysis/LMVis/gl_render3D.py	(original)
+++ ./PYME/Analysis/LMVis/gl_render3D.py	(refactored)
@@ -38,7 +38,7 @@
 import pylab
 
 try:
-    from gen3DTriangs import gen3DTriangs, gen3DBlobs, testObj
+    from .gen3DTriangs import gen3DTriangs, gen3DBlobs, testObj
 except:
     pass
 
--- ./PYME/Analysis/LMVis/h5rNoGui.py	(original)
+++ ./PYME/Analysis/LMVis/h5rNoGui.py	(refactored)
@@ -114,11 +114,11 @@
         else:
             self.imageBounds = ImageBounds.estimateFromSource(self.selectedDataSource)
 
-        if 'fitResults_Ag' in self.selectedDataSource.keys():
+        if 'fitResults_Ag' in list(self.selectedDataSource.keys()):
             #if we used the splitter set up a mapping so we can filter on total amplitude and ratio
             #if not 'fitError_Ag' in self.selectedDataSource.keys():
 
-            if 'fitError_Ag' in self.selectedDataSource.keys():
+            if 'fitError_Ag' in list(self.selectedDataSource.keys()):
                 self.selectedDataSource = inpFilt.mappingFilter(self.selectedDataSource, A='fitResults_Ag + fitResults_Ar', gFrac='fitResults_Ag/(fitResults_Ag + fitResults_Ar)', error_gFrac = 'sqrt((fitError_Ag/fitResults_Ag)**2 + (fitError_Ag**2 + fitError_Ar**2)/(fitResults_Ag + fitResults_Ar)**2)*fitResults_Ag/(fitResults_Ag + fitResults_Ar)')
                 sg = self.selectedDataSource['fitError_Ag']
                 sr = self.selectedDataSource['fitError_Ar']
@@ -146,7 +146,7 @@
             self.dataSources.append(self.selectedDataSource)
 
 
-        elif 'fitResults_sigxl' in self.selectedDataSource.keys():
+        elif 'fitResults_sigxl' in list(self.selectedDataSource.keys()):
             self.selectedDataSource = inpFilt.mappingFilter(self.selectedDataSource)
             self.dataSources.append(self.selectedDataSource)
 
@@ -208,18 +208,18 @@
         if not 'foreShort' in dir(self.selectedDataSource):
             self.selectedDataSource.foreShort = 1.
 
-        if not 'focus' in self.selectedDataSource.mappings.keys():
+        if not 'focus' in list(self.selectedDataSource.mappings.keys()):
             self.selectedDataSource.focus= np.zeros(self.selectedDataSource['x'].shape)
 
-        if 'fitResults_z0' in self.selectedDataSource.keys():
+        if 'fitResults_z0' in list(self.selectedDataSource.keys()):
             self.selectedDataSource.setMapping('z', 'fitResults_z0 + foreShort*focus')
         else:
             self.selectedDataSource.setMapping('z', 'foreShort*focus')
 
         #if we've done a 3d fit
         #print self.selectedDataSource.keys()
-        for k in self.filterKeys.keys():
-            if not k in self.selectedDataSource.keys():
+        for k in list(self.filterKeys.keys()):
+            if not k in list(self.selectedDataSource.keys()):
                 self.filterKeys.pop(k)
 
         #print self.filterKeys
--- ./PYME/Analysis/LMVis/histLimits.py	(original)
+++ ./PYME/Analysis/LMVis/histLimits.py	(refactored)
@@ -183,7 +183,7 @@
         h = (self.Size[1] - self.textSize - 2)*(1.0-(self.h/(1.0*self.h[1:-1].max()+1e-9))) + 2
 
         maxy = self.Size[1] - self.textSize
-        pointlist = [(i,h_i) for i, h_i in zip(range(len(h)), h)]
+        pointlist = [(i,h_i) for i, h_i in zip(list(range(len(h))), h)]
         pointlist = [(0,maxy)] + pointlist + [(self.Size[0], maxy)]
 
         dc.Clear()
--- ./PYME/Analysis/LMVis/importTextDialog.py	(original)
+++ ./PYME/Analysis/LMVis/importTextDialog.py	(refactored)
@@ -123,7 +123,7 @@
         return colNames, dataLines
 
     def CheckColNames(self):
-        reqNotDef = [var for var in self.requiredVariables.keys() if not var in self.colNames]
+        reqNotDef = [var for var in list(self.requiredVariables.keys()) if not var in self.colNames]
 
         if len(reqNotDef) > 0:
             self.btnOK.Enable(False)
@@ -138,7 +138,7 @@
 
         self.stRequiredNotPresent.SetLabel(sreq)
 
-        recNotDef = [var for var in self.recommendedVariables.keys() if not var in self.colNames]
+        recNotDef = [var for var in list(self.recommendedVariables.keys()) if not var in self.colNames]
 
         if len(recNotDef) > 0:
             sreq = 'Recomended variables not yet defined:\n'
@@ -165,7 +165,7 @@
             id = wx.NewId()
             self.comboIDs.append(id)
 
-            cb = wx.ComboBox(self.scrollW, id, size=(120, -1), choices=[cn]+ self.requiredVariables.keys() +self.recommendedVariables.keys() + self.niceVariables.keys())
+            cb = wx.ComboBox(self.scrollW, id, size=(120, -1), choices=[cn]+ list(self.requiredVariables.keys()) +list(self.recommendedVariables.keys()) + list(self.niceVariables.keys()))
             self.combos.append(cb)
             cb.SetSelection(0)
 
--- ./PYME/Analysis/LMVis/inpFilt.py	(original)
+++ ./PYME/Analysis/LMVis/inpFilt.py	(refactored)
@@ -97,17 +97,17 @@
                           'y' : 'fitResults_y0', 'sig' : 'fitResults_sigma',
                           'error_x' : 'fitError_x0', 'error_y' : 'fitError_y0','t':'tIndex'}
 
-        for k in self.transkeys.keys():
+        for k in list(self.transkeys.keys()):
             if not self.transkeys[k] in self._keys:
                 self.transkeys.pop(k)
 
 
     def keys(self):
-        return self._keys + self.transkeys.keys()
+        return self._keys + list(self.transkeys.keys())
 
     def __getitem__(self, key):
         #if we're using an alias replace with actual key
-        if key in self.transkeys.keys():
+        if key in list(self.transkeys.keys()):
             key = self.transkeys[key]
 
         if not key in self._keys:
@@ -158,17 +158,17 @@
                           'y' : 'fitResults_y0', 'sig' : 'fitResults_sigma', 
                           'error_x' : 'fitError_x0', 'error_y' : 'fitError_y0', 't':'tIndex'}
 
-        for k in self.transkeys.keys():
+        for k in list(self.transkeys.keys()):
             if not self.transkeys[k] in self._keys:
                 self.transkeys.pop(k)
 
 
     def keys(self):
-        return self._keys + self.transkeys.keys()
+        return self._keys + list(self.transkeys.keys())
 
     def __getitem__(self, key):
         #if we're using an alias replace with actual key
-        if key in self.transkeys.keys():
+        if key in list(self.transkeys.keys()):
             key = self.transkeys[key]
 
         if not key in self._keys:
@@ -216,11 +216,11 @@
 
 
     def keys(self):
-        return self._keys + self.transkeys.keys()
+        return self._keys + list(self.transkeys.keys())
 
     def __getitem__(self, key):
         #if we're using an alias replace with actual key
-        if key in self.transkeys.keys():
+        if key in list(self.transkeys.keys()):
             key = self.transkeys[key]
 
         if not key in self._keys:
@@ -323,10 +323,10 @@
         self.resultsSource = resultsSource
 
         #by default select everything
-        self.Index = np.ones(self.resultsSource[resultsSource.keys()[0]].shape) >  0.5
-
-        for k in kwargs.keys():
-            if not k in self.resultsSource.keys():
+        self.Index = np.ones(self.resultsSource[list(resultsSource.keys())[0]].shape) >  0.5
+
+        for k in list(kwargs.keys()):
+            if not k in list(self.resultsSource.keys()):
                 raise RuntimeError('Requested key not present: ' + k)
 
             range = kwargs[k]
@@ -340,7 +340,7 @@
         return self.resultsSource[key][self.Index]
 
     def keys(self):
-        return self.resultsSource.keys()
+        return list(self.resultsSource.keys())
 
 class cachingResultsFilter(inputFilter):
     _name = "Caching Results Filter"
@@ -358,10 +358,10 @@
         self.cache = {}
 
         #by default select everything
-        self.Index = np.ones(self.resultsSource[resultsSource.keys()[0]].shape) >  0.5
-
-        for k in kwargs.keys():
-            if not k in self.resultsSource.keys():
+        self.Index = np.ones(self.resultsSource[list(resultsSource.keys())[0]].shape) >  0.5
+
+        for k in list(kwargs.keys()):
+            if not k in list(self.resultsSource.keys()):
                 raise RuntimeError('Requested key not present: ' + k)
 
             range = kwargs[k]
@@ -372,7 +372,7 @@
 
 
     def __getitem__(self, key):
-        if key in self.cache.keys():
+        if key in list(self.cache.keys()):
             return self.cache[key]
         else:
             res = self.resultsSource[key][self.Index]
@@ -380,7 +380,7 @@
             return res
 
     def keys(self):
-        return self.resultsSource.keys()
+        return list(self.resultsSource.keys())
 
 
 class mappingFilter(inputFilter):
@@ -401,24 +401,24 @@
 
         self.mappings = {}
 
-        for k in kwargs.keys():
+        for k in list(kwargs.keys()):
             v = kwargs[k]
             self.setMapping(k,v)
 
 
     def __getitem__(self, key):
-        if key in self.mappings.keys():
+        if key in list(self.mappings.keys()):
             return self.getMappedResults(key)
         else:
             return self.resultsSource[key]
 
     def keys(self):
-        return self.resultsSource.keys() + self.mappings.keys()
+        return list(self.resultsSource.keys()) + list(self.mappings.keys())
 
     def setMapping(self, key, mapping):
         if type(mapping) == types.CodeType:
             self.mappings[key] = mapping
-        elif type(mapping) == types.StringType:
+        elif type(mapping) == bytes:
             self.mappings[key] = compile(mapping, '/tmp/test1', 'eval')
         else:
             self.__dict__[key] = mapping
@@ -431,11 +431,11 @@
         for vname in varnames:
             if vname in globals():
                 pass
-            if vname in self.resultsSource.keys(): #look at original results first
+            if vname in list(self.resultsSource.keys()): #look at original results first
                 locals()[vname] = self.resultsSource[vname]
             elif vname in dir(self): #look for constants
                 locals()[vname] = self.__dict__[vname]
-            elif vname in self.mappings.keys(): #finally try other mappings
+            elif vname in list(self.mappings.keys()): #finally try other mappings
                 #try to prevent infinite recursion here if mappings have circular references
                 if not vname == key and not key in self.mappings[vname].co_names:
                     locals()[vname] = self.getMappedResults(vname)
@@ -480,19 +480,19 @@
 
             #chromatic shift correction
             #print self.currentColour
-            if self.currentColour in self.visFr.chromaticShifts.keys() and key in self.visFr.chromaticShifts[self.currentColour].keys():
+            if self.currentColour in list(self.visFr.chromaticShifts.keys()) and key in list(self.visFr.chromaticShifts[self.currentColour].keys()):
                 return self.resultsSource[key][ind] + self.visFr.chromaticShifts[self.currentColour][key]
             else:
                 return self.resultsSource[key][ind]
 
     def getColourChans(self):
-        return [k[2:] for k in self.keys() if k.startswith('p_')]
+        return [k[2:] for k in list(self.keys()) if k.startswith('p_')]
 
     def setColour(self, colour):
         self.currentColour = colour
 
     def keys(self):
-        return self.resultsSource.keys()
+        return list(self.resultsSource.keys())
 
     
     
@@ -504,7 +504,7 @@
         resultsSource
         self.cache = {}
 
-        for k in resultsSource.keys():
+        for k in list(resultsSource.keys()):
             self.cache[k] = resultsSource[k]
 
 
@@ -513,4 +513,4 @@
         return self.cache[key]
 
     def keys(self):
-        return self.cache.keys()
+        return list(self.cache.keys())
--- ./PYME/Analysis/LMVis/objectMeasure.py	(original)
+++ ./PYME/Analysis/LMVis/objectMeasure.py	(refactored)
@@ -23,7 +23,7 @@
 
 from numpy import *
 import delaunay
-import gen3DTriangs
+from . import gen3DTriangs
 from PYME.Analysis import moments
 
 def getPrincipalAxis(obj_c, numIters=10):
--- ./PYME/Analysis/LMVis/pipeline.py	(original)
+++ ./PYME/Analysis/LMVis/pipeline.py	(refactored)
@@ -83,7 +83,7 @@
         return self.colourFilter[key]
 
     def keys(self):
-        return self.colourFilter.keys()
+        return list(self.colourFilter.keys())
 
 
     def Rebuild(self):
@@ -169,7 +169,7 @@
         self.selectedDataSource.setMapping('A', 'fitResults_Ag + fitResults_Ar')
         self.selectedDataSource.setMapping('gFrac', 'fitResults_Ag/(fitResults_Ag + fitResults_Ar)')
         
-        if 'fitError_Ag' in self.selectedDataSource.keys():    
+        if 'fitError_Ag' in list(self.selectedDataSource.keys()):    
             self.selectedDataSource.setMapping('error_gFrac', 'sqrt((fitError_Ag/fitResults_Ag)**2 + (fitError_Ag**2 + fitError_Ar**2)/(fitResults_Ag + fitResults_Ar)**2)*fitResults_Ag/(fitResults_Ag + fitResults_Ar)')
         else:
             self.selectedDataSource.setMapping('error_gFrac','0*x + 0.01')
@@ -274,7 +274,7 @@
                 self.mdh = MetaDataHandler.HDFMDHandler(self.selectedDataSource.h5f)
 
            
-            if ('Events' in self.selectedDataSource.h5f.root) and ('StartTime' in self.mdh.keys()):
+            if ('Events' in self.selectedDataSource.h5f.root) and ('StartTime' in list(self.mdh.keys())):
                 self.events = self.selectedDataSource.h5f.root.Events[:]
 
                         
@@ -285,7 +285,7 @@
 
         elif os.path.splitext(filename)[1] == '.csv': 
             #special case for csv files - tell np.loadtxt to use a comma rather than whitespace as a delimeter
-            if 'SkipRows' in kwargs.keys():
+            if 'SkipRows' in list(kwargs.keys()):
                 ds = inpFilt.textfileSource(filename, kwargs['FieldNames'], delimiter=',', skiprows=kwargs['SkipRows'])
             else:
                 ds = inpFilt.textfileSource(filename, kwargs['FieldNames'], delimiter=',')
@@ -293,7 +293,7 @@
             self.dataSources.append(ds)
             
         else: #assume it's a tab (or other whitespace) delimited text file
-            if 'SkipRows' in kwargs.keys():
+            if 'SkipRows' in list(kwargs.keys()):
                 ds = inpFilt.textfileSource(filename, kwargs['FieldNames'], skiprows=kwargs['SkipRows'])
             else:
                 ds = inpFilt.textfileSource(filename, kwargs['FieldNames'])
@@ -311,7 +311,7 @@
         self.selectedDataSource = inpFilt.mappingFilter(self.selectedDataSource)
         self.dataSources.append(self.selectedDataSource)
         
-        if 'PixelSize' in kwargs.keys():
+        if 'PixelSize' in list(kwargs.keys()):
             self.selectedDataSource.pixelSize = kwargs['PixelSize']
             self.selectedDataSource.setMapping('x', 'x*pixelSize')
             self.selectedDataSource.setMapping('y', 'y*pixelSize')
@@ -342,15 +342,15 @@
         
         #handle special cases which get detected by looking for the presence or
         #absence of certain variables in the data.        
-        if 'fitResults_Ag' in self.selectedDataSource.keys():
+        if 'fitResults_Ag' in list(self.selectedDataSource.keys()):
             #if we used the splitter set up a number of mappings e.g. total amplitude and ratio
             self._processSplitter()
 
-        if 'fitResults_ratio' in self.selectedDataSource.keys():
+        if 'fitResults_ratio' in list(self.selectedDataSource.keys()):
             #if we used the splitter set up a number of mappings e.g. total amplitude and ratio
             self._processPriSplit()
 
-        if 'fitResults_sigxl' in self.selectedDataSource.keys():
+        if 'fitResults_sigxl' in list(self.selectedDataSource.keys()):
             #fast, quickpalm like astigmatic fitting 
             self.selectedDataSource.setMapping('sig', 'fitResults_sigxl + fitResults_sigyu')
             self.selectedDataSource.setMapping('sig_d', 'fitResults_sigxl - fitResults_sigyu')
@@ -358,7 +358,7 @@
             self.selectedDataSource.dsigd_dz = -30.
             self.selectedDataSource.setMapping('fitResults_z0', 'dsigd_dz*sig_d')
             
-        if not 'y' in self.selectedDataSource.keys():
+        if not 'y' in list(self.selectedDataSource.keys()):
             self.selectedDataSource.setMapping('y', '10*t')
             
             
@@ -367,12 +367,12 @@
         if not 'foreShort' in dir(self.selectedDataSource):
             self.selectedDataSource.foreShort = 1.
 
-        if not 'focus' in self.selectedDataSource.mappings.keys():
+        if not 'focus' in list(self.selectedDataSource.mappings.keys()):
             self.selectedDataSource.focus= np.zeros(self.selectedDataSource['x'].shape)
             
-        if 'fitResults_z0' in self.selectedDataSource.keys():
+        if 'fitResults_z0' in list(self.selectedDataSource.keys()):
             self.selectedDataSource.setMapping('z', 'fitResults_z0 + foreShort*focus')
-        elif not 'z' in self.selectedDataSource.keys():
+        elif not 'z' in list(self.selectedDataSource.keys()):
             self.selectedDataSource.setMapping('z', 'foreShort*focus')
 
         
@@ -390,15 +390,15 @@
                 
         
         #remove any keys from the filter which are not present in the data
-        for k in self.filterKeys.keys():
-            if not k in self.selectedDataSource.keys():
+        for k in list(self.filterKeys.keys()):
+            if not k in list(self.selectedDataSource.keys()):
                 self.filterKeys.pop(k)
 
         
         self.Rebuild()
 
 
-        if 'Sample.Labelling' in self.mdh.getEntryNames() and 'gFrac' in self.selectedDataSource.keys():
+        if 'Sample.Labelling' in self.mdh.getEntryNames() and 'gFrac' in list(self.selectedDataSource.keys()):
             self.SpecFromMetadata()
 
 
@@ -416,7 +416,7 @@
     def getNeighbourDists(self, forceRetriang = False):
         from PYME.Analysis.LMVis import visHelpers
         
-        if forceRetriang or not 'neighbourDistances' in self.GeneratedMeasures.keys():
+        if forceRetriang or not 'neighbourDistances' in list(self.GeneratedMeasures.keys()):
             statNeigh = statusLog.StatusLogger("Calculating mean neighbour distances ...")
             self.GeneratedMeasures['neighbourDistances'] = np.array(visHelpers.calcNeighbourDists(self.getTriangles(forceRetriang)))
             
@@ -496,7 +496,7 @@
         
     def save_txt(self, outFile, keys=None):
         if keys == None:
-            keys = self.keys()
+            keys = list(self.keys())
 
         #nRecords = len(ds[keys[0]])
     
--- ./PYME/Analysis/LMVis/renderers.py	(original)
+++ ./PYME/Analysis/LMVis/renderers.py	(refactored)
@@ -65,11 +65,11 @@
         x1 = min(self.visFr.glCanvas.xmax, self.pipeline.imageBounds.x1)
         y1 = min(self.visFr.glCanvas.ymax, self.pipeline.imageBounds.y1)
 
-        if 'x' in self.pipeline.filterKeys.keys():
+        if 'x' in list(self.pipeline.filterKeys.keys()):
             x0 = max(x0, self.pipeline.filterKeys['x'][0])
             x1 = min(x1, self.pipeline.filterKeys['x'][1])
 
-        if 'y' in self.pipeline.filterKeys.keys():
+        if 'y' in list(self.pipeline.filterKeys.keys()):
             y0 = max(y0, self.pipeline.filterKeys['y'][0])
             y1 = min(y1, self.pipeline.filterKeys['y'][1])
 
@@ -89,7 +89,7 @@
         #print jitParamName
         if jitParamName == '1.0':
             jitVals = np.ones(self.pipeline.colourFilter['x'].shape)
-        elif jitParamName in self.pipeline.colourFilter.keys():
+        elif jitParamName in list(self.pipeline.colourFilter.keys()):
             jitVals = self.pipeline.colourFilter[jitParamName]
         elif jitParamName in self.genMeas:
             #print 'f'
@@ -150,9 +150,9 @@
     
     def Generate(self, event=None):
         jitVars = ['1.0']
-        jitVars += self.pipeline.colourFilter.keys()
-
-        self.genMeas = self.pipeline.GeneratedMeasures.keys()
+        jitVars += list(self.pipeline.colourFilter.keys())
+
+        self.genMeas = list(self.pipeline.GeneratedMeasures.keys())
         if not 'neighbourDistances' in self.genMeas:
             self.genMeas.append('neighbourDistances')
             
@@ -162,7 +162,7 @@
         jitVars += self.genMeas
         
         
-        if 'z' in self.pipeline.mapping.keys():
+        if 'z' in list(self.pipeline.mapping.keys()):
             zvals = self.pipeline.mapping['z']
         else:
             zvals = None
--- ./PYME/Analysis/LMVis/visHelpers.py	(original)
+++ ./PYME/Analysis/LMVis/visHelpers.py	(refactored)
@@ -553,7 +553,7 @@
 
 else:
     def rendJitTet(x,y,z,n,jsig, jsigz, mcp, imageBounds, pixelSize, zb,sliceSize=100):
-        import gen3DTriangs
+        from . import gen3DTriangs
 
         sizeX = (imageBounds.x1 - imageBounds.x0)/pixelSize
         sizeY = (imageBounds.y1 - imageBounds.y0)/pixelSize
--- ./PYME/Analysis/LMVis/visHelpersMin.py	(original)
+++ ./PYME/Analysis/LMVis/visHelpersMin.py	(refactored)
@@ -178,7 +178,7 @@
 
 
 def rendJitTet(x,y,z,n,jsig, jsigz, mcp, imageBounds, pixelSize, zb,sliceSize=100):
-    import gen3DTriangs
+    from . import gen3DTriangs
 
     sizeX = (imageBounds.x1 - imageBounds.x0)/pixelSize
     sizeY = (imageBounds.y1 - imageBounds.y0)/pixelSize
--- ./PYME/Analysis/LMVis/workspaceTree.py	(original)
+++ ./PYME/Analysis/LMVis/workspaceTree.py	(refactored)
@@ -25,7 +25,7 @@
 from wx.lib.mixins.treemixin import VirtualTree
 #from pylab import cm, array
 
-import inpFilt
+from . import inpFilt
 
 class WorkWrap:
     def __init__(self, dict):
@@ -91,11 +91,11 @@
             #either list like or dict like
             if 'keys' in dir(item):
                 #dict like
-                return item[item.keys()[n]]
+                return item[list(item.keys())[n]]
             else:
                 return item[n]
         else:
-            return item.__dict__.values()[n]
+            return list(item.__dict__.values())[n]
 
     def _getChildName(self, item, n):
         '''get the nth child of an item'''
@@ -103,11 +103,11 @@
             #either list like or dict like
             if 'keys' in dir(item):
                 #dict like
-                return item.keys()[n]
+                return list(item.keys())[n]
             else:
                 return '[%d]' %n
         else:
-            return item.__dict__.keys()[n]
+            return list(item.__dict__.keys())[n]
 
     def _getChildPathPart(self, item, n):
         '''get the nth child of an item'''
@@ -115,11 +115,11 @@
             #either list like or dict like
             if 'keys' in dir(item):
                 #dict like
-                return "['%s']" % item.keys()[n]
+                return "['%s']" % list(item.keys())[n]
             else:
                 return '[%d]' %n
         else:
-            return '.' + item.__dict__.keys()[n]
+            return '.' + list(item.__dict__.keys())[n]
 
     def _getChildPath(self, index):
         '''get the nth child of an item'''
@@ -144,7 +144,7 @@
                 #dict like
                 return len(item)
             elif 'keys' in dir(item):
-                return len(item.keys())
+                return len(list(item.keys()))
         elif '__dict__' in dir(item):
             return len(item.__dict__)
         else:
--- ./PYME/Analysis/LMVis/Extras/objectMeasurements.py	(original)
+++ ./PYME/Analysis/LMVis/Extras/objectMeasurements.py	(refactored)
@@ -43,7 +43,7 @@
 
         dlg = wx.SingleChoiceDialog(
                 self.visFr, 'choose the image which contains labels', 'Use Segmentation',
-                image.openImages.keys(),
+                list(image.openImages.keys()),
                 wx.CHOICEDLG_STYLE
                 )
 
@@ -97,7 +97,7 @@
 #                    if lab[i][0] in chanNames:
 #                        chanNames[chanNames.index(lab[i][0])] = lab[i][1]
 
-            for ch, i in zip(chans, range(len(chans))):
+            for ch, i in zip(chans, list(range(len(chans)))):
                 self.visFr.colourFilter.setColour(ch)
                 #fitDecayChan(colourFilter, metadata, chanNames[i], i)
                 self.visFr.objectMeasures[chanNames[i]] = objectMeasure.measureObjectsByID(self.visFr.colourFilter, 10,ids)
--- ./PYME/Analysis/LMVis/Extras/pointSetGeneration.py	(original)
+++ ./PYME/Analysis/LMVis/Extras/pointSetGeneration.py	(refactored)
@@ -82,7 +82,7 @@
 
     @property
     def values(self):
-        return self.wrdict.keys()
+        return list(self.wrdict.keys())
 
     #def info ( self ):
     #    return ' or '.join( [ repr( x ) for x in self.values ] )
--- ./PYME/Analysis/LMVis/Extras/shiftmapGenerator.py	(original)
+++ ./PYME/Analysis/LMVis/Extras/shiftmapGenerator.py	(refactored)
@@ -47,7 +47,7 @@
         twoColourPlot.PlotShiftField2(spx, spy, pipeline.mdh['Splitter.Channel0ROI'][2:], voxelsize=vs)
         twoColourPlot.PlotShiftResiduals(pipeline['x'][good], pipeline['y'][good], pipeline['fitResults_dx'][good], pipeline['fitResults_dy'][good], spx, spy)
 
-        import cPickle
+        import pickle
 
         defFile = os.path.splitext(os.path.split(self.visFr.GetTitle())[-1])[0] + '.sf'
 
@@ -59,7 +59,7 @@
             #save as a pickle containing the data and voxelsize
 
             fid = open(fpath, 'wb')
-            cPickle.dump((spx, spy), fid, 2)
+            pickle.dump((spx, spy), fid, 2)
             fid.close()
 
 def Plug(visFr):
--- ./PYME/Analysis/QuadTree/__init__.py	(original)
+++ ./PYME/Analysis/QuadTree/__init__.py	(refactored)
@@ -21,5 +21,5 @@
 #
 ##################
 
-from pointQT import * 
-from QTrend import * 
+from .pointQT import * 
+from .QTrend import * 
--- ./PYME/Analysis/QuadTree/pointQT.py	(original)
+++ ./PYME/Analysis/QuadTree/pointQT.py	(refactored)
@@ -90,14 +90,14 @@
         return [r for r in self.records if (r.x > x0) and (r.x < x1) and (r.y > y0) and (r.y < y1)]
 
     def drawTree(self, depth=0):
-        st = u'' + repr(self) +'\n'
+        st = '' + repr(self) +'\n'
         for r in self.records:
             for i in range(depth):
-                st += u'\u2502 '
-            st += u'\u251C\u2500' + str(r) +'\n'
-
-        for i in range(depth):
-                st += u'\u2502 '
+                st += '\u2502 '
+            st += '\u251C\u2500' + str(r) +'\n'
+
+        for i in range(depth):
+                st += '\u2502 '
         st += '\n'
         return st
 
@@ -161,20 +161,20 @@
     def drawTree(self, depth=0):
         st = repr(self) +'\n'
         for i in range(depth):
-            st += u'\u2502 '
-        st += u'\u251C\u2500NW ' + self.NW.drawTree(depth+1)
-        for i in range(depth):
-            st += u'\u2502 '
-        st += u'\u251C\u2500NE ' + self.NE.drawTree(depth+1) 
-        for i in range(depth):
-            st += u'\u2502 '
-        st += u'\u251C\u2500SE ' + self.SE.drawTree(depth+1) 
-        for i in range(depth):
-            st += u'\u2502 '
-        st += u'\u251C\u2500SW ' + self.SW.drawTree(depth+1)
-
-        for i in range(depth):
-                st += u'\u2502 '
+            st += '\u2502 '
+        st += '\u251C\u2500NW ' + self.NW.drawTree(depth+1)
+        for i in range(depth):
+            st += '\u2502 '
+        st += '\u251C\u2500NE ' + self.NE.drawTree(depth+1) 
+        for i in range(depth):
+            st += '\u2502 '
+        st += '\u251C\u2500SE ' + self.SE.drawTree(depth+1) 
+        for i in range(depth):
+            st += '\u2502 '
+        st += '\u251C\u2500SW ' + self.SW.drawTree(depth+1)
+
+        for i in range(depth):
+                st += '\u2502 '
         st += '\n'
 
         return st
--- ./PYME/Analysis/QuadTree/qtUtils.py	(original)
+++ ./PYME/Analysis/QuadTree/qtUtils.py	(refactored)
@@ -21,7 +21,7 @@
 #
 ##################
 
-import pointQT
+from . import pointQT
 import MetaData
 
 def compareOriginalWithRec(ofd, qt, radius = 250, md = MetaData.TIRFDefault):
--- ./PYME/Analysis/SoftRend/__init__.py	(original)
+++ ./PYME/Analysis/SoftRend/__init__.py	(refactored)
@@ -21,4 +21,4 @@
 #
 ##################
 
-from triRend import *
+from .triRend import *
--- ./PYME/Analysis/cInterp/__init__.py	(original)
+++ ./PYME/Analysis/cInterp/__init__.py	(refactored)
@@ -21,4 +21,4 @@
 #
 ##################
 
-from cInterp import *
+from .cInterp import *
--- ./PYME/Analysis/cModels/__init__.py	(original)
+++ ./PYME/Analysis/cModels/__init__.py	(refactored)
@@ -21,4 +21,4 @@
 #
 ##################
 
-from gauss_app import *
+from .gauss_app import *
--- ./PYME/DSView/DisplayOptionsPanel.py	(original)
+++ ./PYME/DSView/DisplayOptionsPanel.py	(refactored)
@@ -28,7 +28,7 @@
 import numpy as np
 #from matplotlib import cm
 from PYME.Analysis.LMVis import histLimits
-from displayOptions import DisplayOpts, fast_grey, labeled
+from .displayOptions import DisplayOpts, fast_grey, labeled
 
 import os
 dirname = os.path.dirname(__file__)
--- ./PYME/DSView/__init__.py	(original)
+++ ./PYME/DSView/__init__.py	(refactored)
@@ -20,5 +20,5 @@
 # along with this program.  If not, see <http://www.gnu.org/licenses/>.
 #
 ################
-from dsviewer_npy_nb import View3D, ViewIm3D
-from image import ImageStack
+from .dsviewer_npy_nb import View3D, ViewIm3D
+from .image import ImageStack
--- ./PYME/DSView/arrayViewPanel.py	(original)
+++ ./PYME/DSView/arrayViewPanel.py	(refactored)
@@ -41,7 +41,7 @@
 LUTCache = {}
 
 def getLUT(cmap):
-    if not cmap.name in LUTCache.keys():
+    if not cmap.name in list(LUTCache.keys()):
         #calculate and cache LUT
         LUTCache[cmap.name] = (255*(cmap(numpy.linspace(0,1,256))[:,:3].T)).copy().astype('uint8')
 
@@ -290,7 +290,7 @@
                     dc.DrawRectangle(sc*p[1]-self.psfROISize[1]*sc - x0,sc*p[2]*self.aspect - self.psfROISize[2]*sc*self.aspect - y0, 2*self.psfROISize[1]*sc,2*self.psfROISize[2]*sc*self.aspect)
 
 
-        if self.showTracks and 'filter' in dir(self) and 'clumpIndex' in self.filter.keys():
+        if self.showTracks and 'filter' in dir(self) and 'clumpIndex' in list(self.filter.keys()):
             if(self.do.slice == self.do.SLICE_XY):
                 IFoc = (abs(self.filter['t'] - self.do.zp) < 1)
                                
--- ./PYME/DSView/dataExporter.py	(original)
+++ ./PYME/DSView/dataExporter.py	(refactored)
@@ -159,7 +159,7 @@
                     chanNames = metadata['ChannelNames']    
 
                 else:
-                    chanNames = range(data.shape[3])
+                    chanNames = list(range(data.shape[3]))
 
                 chanFiles = [os.path.splitext(os.path.split(outFile)[1])[0] + '__%s.tif' % chanNames[i]  for i in range(data.shape[3])]
                 if not metadata == None:
@@ -255,9 +255,9 @@
 
     def Export(self, data, outFile, xslice, yslice, zslice, metadata=None, events = None, origName=None):
         #numpy.save(outFile, data[xslice, yslice, zslice])
-        import cPickle
+        import pickle
         fid = open(outFile, 'wb')
-        cPickle.dump((data[xslice, yslice, zslice], metadata.voxelsize), fid, 2)
+        pickle.dump((data[xslice, yslice, zslice], metadata.voxelsize), fid, 2)
         fid.close()
 
 exporter(PSFExporter)
@@ -387,7 +387,7 @@
 
         defIndex = 0
 
-        for i, e in enumerate(exporters.values()):
+        for i, e in enumerate(list(exporters.values())):
             wcs.append(e.descr + '|' + e.extension)
             if e.extension == defaultExt:
                 defIndex = i
@@ -450,8 +450,8 @@
     
     ext = '*' + os.path.splitext(filename)[1]
         
-    if not ext in exportersByExtension.keys():
-        wx.MessageBox('No exporter found for %s files\n Try one of the following file types:\n%s' % (ext, ', '.join(exportersByExtension.keys())), "Error saving data", wx.OK|wx.ICON_HAND)
+    if not ext in list(exportersByExtension.keys()):
+        wx.MessageBox('No exporter found for %s files\n Try one of the following file types:\n%s' % (ext, ', '.join(list(exportersByExtension.keys()))), "Error saving data", wx.OK|wx.ICON_HAND)
         return
 
     exp = exportersByExtension[ext]()
--- ./PYME/DSView/displayOptions.py	(original)
+++ ./PYME/DSView/displayOptions.py	(refactored)
@@ -50,11 +50,11 @@
      
 
 class DisplayOpts(object):
-    UPRIGHT, ROT90 = range(2)
-    SLICE_XY, SLICE_XZ, SLICE_YZ = range(3)
-
-    ACTION_POSITION, ACTION_SELECTION = range(2)
-    SELECTION_RECTANGLE, SELECTION_LINE, SELECTION_SQUIGLE = range(3)
+    UPRIGHT, ROT90 = list(range(2))
+    SLICE_XY, SLICE_XZ, SLICE_YZ = list(range(3))
+
+    ACTION_POSITION, ACTION_SELECTION = list(range(2))
+    SELECTION_RECTANGLE, SELECTION_LINE, SELECTION_SQUIGLE = list(range(3))
 
     def __init__(self, datasource, xp=0, yp=0, zp=0, aspect=1):
         self.WantChangeNotification = []# MyWeakSet() #[]
@@ -158,7 +158,9 @@
         
         self.selection_trace = []
 
-    def SetSelection(self, (b_x,b_y,b_z),(e_x,e_y,e_z)):
+    def SetSelection(self, xxx_todo_changeme, xxx_todo_changeme1):
+        (b_x,b_y,b_z) = xxx_todo_changeme
+        (e_x,e_y,e_z) = xxx_todo_changeme1
         self.selection_begin_x = b_x
         self.selection_begin_y = b_y
         self.selection_begin_z = b_z
--- ./PYME/DSView/dsviewer_npy.py	(original)
+++ ./PYME/DSView/dsviewer_npy.py	(refactored)
@@ -22,7 +22,7 @@
 ##################
 
 import wx
-from arrayViewPanel import ArraySettingsAndViewPanel
+from .arrayViewPanel import ArraySettingsAndViewPanel
 
 class DSViewFrame(wx.Frame):
     def __init__(self, parent=None, title='', dstack = None, log = None, filename = None, mdh = None, size = (400,300)):
@@ -74,7 +74,7 @@
         self.statusbar.SetStatusText('Slice No: (%d/%d)  x: %d  y: %d' % (self.do.zp, self.do.ds.shape[2], self.do.xp, self.do.yp))
 
     def OnSave(self, event=None):
-        import dataExporter
+        from . import dataExporter
 
         if 'getEvents' in dir(self.ds):
             evts = self.ds.getEvents()
@@ -88,7 +88,7 @@
         self.saved = True
 
     def OnExport(self, event=None):
-        import dataExporter
+        from . import dataExporter
 
         if 'getEvents' in dir(self.ds):
             evts = self.ds.getEvents()
--- ./PYME/DSView/dsviewer_npy_nb.py	(original)
+++ ./PYME/DSView/dsviewer_npy_nb.py	(refactored)
@@ -24,7 +24,7 @@
 import wx.lib.agw.aui as aui
 
 import pylab
-import modules
+from . import modules
 
 import PYME.misc.autoFoldPanel as afp
 #from PYME.DSView.arrayViewPanel import ArraySettingsAndViewPanel
--- ./PYME/DSView/fitInfo.py	(original)
+++ ./PYME/DSView/fitInfo.py	(refactored)
@@ -69,7 +69,7 @@
         self.SetSizerAndFit(vsizer)
 
     def genResultsText(self, index):
-        s =  u''
+        s =  ''
         ns = self.fitResults['fitResults'].dtype.names
 
         nl = max([len(n) for n in ns])
@@ -84,9 +84,9 @@
             for n in ns:
                 #\u00B1 is the plus-minus sign
                 if 'fitError' in r.dtype.names:
-                    s += u'%s %8.2f \u00B1 %3.2f\n' % ((n + ':').ljust(nl+1), r['fitResults'][n], r['fitError'][n])
+                    s += '%s %8.2f \u00B1 %3.2f\n' % ((n + ':').ljust(nl+1), r['fitResults'][n], r['fitError'][n])
                 else:
-                    s += u'%s %8.2f\n' % ((n + ':').ljust(nl+1), r['fitResults'][n])
+                    s += '%s %8.2f\n' % ((n + ':').ljust(nl+1), r['fitResults'][n])
 
             #s = s[:-1]
             if 'resultCode' in r.dtype.names:
@@ -95,16 +95,16 @@
             if 'startParams' in r.dtype.names:
                 s += '\n\nStart Params:\n%s' % str(r['startParams'])
             if 'nchi2' in r.dtype.names:
-                s += u'\n\u03A7\u00B2/\u03BD: %3.2f' % r['nchi2']
+                s += '\n\u03A7\u00B2/\u03BD: %3.2f' % r['nchi2']
         else:    
             for n in ns:
-                s += u'%s:\n' % (n)
+                s += '%s:\n' % (n)
                 
         return s
 
 
     def genGaussPhotonStats(self, index):
-        s =  u''
+        s =  ''
 
         if not index == None:
             r = self.fitResults[index]['fitResults']
--- ./PYME/DSView/image.py	(original)
+++ ./PYME/DSView/image.py	(refactored)
@@ -404,7 +404,7 @@
                 self.mdh['voxelsize.z'] = lsm_info['plane_spacing']
                 
                 def lsm_pop(basename, dic):
-                    for k, v in dic.items():
+                    for k, v in list(dic.items()):
                         if isinstance(v, list):
                             #print k, v
                             for i, l_i in enumerate(v):
@@ -417,7 +417,7 @@
                 lsm_pop('LSM.', lsm_info)
                 
 
-        if self.haveGUI and not ('voxelsize.x' in self.mdh.keys() and 'voxelsize.y' in self.mdh.keys()):
+        if self.haveGUI and not ('voxelsize.x' in list(self.mdh.keys()) and 'voxelsize.y' in list(self.mdh.keys())):
             from PYME.DSView.voxSizeDialog import VoxSizeDialog
 
             dlg = VoxSizeDialog(None)
@@ -466,7 +466,7 @@
             from PYME.DSView.dataWrap import ListWrap
             chans = [numpy.atleast_3d(self.data.getSlice(i)) for i in range(len(self.mdh['ChannelNames']))]
             self.data = ListWrap(chans)
-        elif filename.endswith('.lsm') and 'LSM.images_number_channels' in self.mdh.keys() and self.mdh['LSM.images_number_channels'] > 1:
+        elif filename.endswith('.lsm') and 'LSM.images_number_channels' in list(self.mdh.keys()) and self.mdh['LSM.images_number_channels'] > 1:
             from PYME.DSView.dataWrap import ListWrap
             nChans = self.mdh['LSM.images_number_channels']
             
@@ -540,7 +540,7 @@
             self.saved = True
 
     def Save(self, filename=None, crop=False, view=None):
-        import dataExporter
+        from . import dataExporter
 
         ofn = self.filename
 
--- ./PYME/DSView/logparser.py	(original)
+++ ./PYME/DSView/logparser.py	(refactored)
@@ -86,12 +86,12 @@
         
         s = ''
         
-        cats = log.keys()
+        cats = list(log.keys())
         cats.sort()
         for category in cats:
             s = s + '[%s]\n' % category
             
-            entries = log[category].keys()
+            entries = list(log[category].keys())
             entries.sort()
             for entry in entries:
                 s = s + '%s=%s\n' % (entry, log[category][entry])
--- ./PYME/DSView/viewpanellite.py	(original)
+++ ./PYME/DSView/viewpanellite.py	(refactored)
@@ -303,7 +303,9 @@
         self.selection_end_y = self.ds.getHeight() - 1
         self.selection_end_z = self.ds.getDepth() - 1
         
-    def SetSelection(self, (b_x,b_y,b_z),(e_x,e_y,e_z)):
+    def SetSelection(self, xxx_todo_changeme, xxx_todo_changeme1):
+        (b_x,b_y,b_z) = xxx_todo_changeme
+        (e_x,e_y,e_z) = xxx_todo_changeme1
         self.selection_begin_x = b_x
         self.selection_begin_y = b_y
         self.selection_begin_z = b_z
--- ./PYME/DSView/voxSizeDialog.py	(original)
+++ ./PYME/DSView/voxSizeDialog.py	(refactored)
@@ -31,7 +31,7 @@
         #sizer2 = wx.BoxSizer(wx.HORIZONTAL)
 
         sizer2 = wx.BoxSizer(wx.HORIZONTAL)
-        sizer2.Add(wx.StaticText(self, -1, u'x [\u03BCm]:'), 0, wx.ALIGN_CENTER_VERTICAL | wx.ALL, 5)
+        sizer2.Add(wx.StaticText(self, -1, 'x [\u03BCm]:'), 0, wx.ALIGN_CENTER_VERTICAL | wx.ALL, 5)
         self.tVoxX = wx.TextCtrl(self, -1, '0.08')
 
         sizer2.Add(self.tVoxX, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALL, 5)
@@ -39,7 +39,7 @@
         sizer1.Add(sizer2, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALL, 0)
 
         sizer2 = wx.BoxSizer(wx.HORIZONTAL)
-        sizer2.Add(wx.StaticText(self, -1, u'y [\u03BCm]:'), 0, wx.ALIGN_CENTER_VERTICAL | wx.ALL, 5)
+        sizer2.Add(wx.StaticText(self, -1, 'y [\u03BCm]:'), 0, wx.ALIGN_CENTER_VERTICAL | wx.ALL, 5)
         self.tVoxY = wx.TextCtrl(self, -1, '0.08')
 
         sizer2.Add(self.tVoxY, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALL, 5)
@@ -47,7 +47,7 @@
         sizer1.Add(sizer2, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALL, 0)
 
         sizer2 = wx.BoxSizer(wx.HORIZONTAL)
-        sizer2.Add(wx.StaticText(self, -1, u'z [\u03BCm]:'), 0, wx.ALIGN_CENTER_VERTICAL | wx.ALL, 5)
+        sizer2.Add(wx.StaticText(self, -1, 'z [\u03BCm]:'), 0, wx.ALIGN_CENTER_VERTICAL | wx.ALL, 5)
         self.tVoxZ = wx.TextCtrl(self, -1, '0.2')
 
         sizer2.Add(self.tVoxZ, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALL, 5)
--- ./PYME/DSView/LUT/__init__.py	(original)
+++ ./PYME/DSView/LUT/__init__.py	(refactored)
@@ -21,7 +21,7 @@
 #
 ##################
 
-from lut import *
+from .lut import *
 
 def applyLUT(seg, gain, offset, lut, ima):
     if seg.dtype == 'uint8':
--- ./PYME/DSView/LUT/test_lut.py	(original)
+++ ./PYME/DSView/LUT/test_lut.py	(refactored)
@@ -22,7 +22,7 @@
 
 from pylab import *
 
-import lut
+from . import lut
 
 lut1 = (255*cm.gray(linspace(0,1,256))[:,:3].T).astype('uint8').copy()
 print((lut1.shape))
--- ./PYME/DSView/loft/dCrop.py	(original)
+++ ./PYME/DSView/loft/dCrop.py	(refactored)
@@ -24,7 +24,7 @@
  wxID_DCROPSTATICTEXT4, wxID_DCROPSTATICTEXT5, wxID_DCROPSTATICTEXT6, 
  wxID_DCROPSTSIZE, wxID_DCROPTXEND, wxID_DCROPTXSTART, wxID_DCROPTYEND, 
  wxID_DCROPTYSTART, wxID_DCROPTZEND, wxID_DCROPTZSTART, 
-] = map(lambda _init_ctrls: wx.NewId(), range(17))
+] = [wx.NewId() for _init_ctrls in range(17)]
 
 class dCrop(wx.Dialog):
     def _init_ctrls(self, prnt):
--- ./PYME/DSView/loft/fth5.py	(original)
+++ ./PYME/DSView/loft/fth5.py	(refactored)
@@ -21,7 +21,7 @@
 from PYME.io.FileUtils.nameUtils import genResultFileName
 
 if not 'tq' in locals():
-    if 'PYME_TASKQUEUENAME' in os.environ.keys():
+    if 'PYME_TASKQUEUENAME' in list(os.environ.keys()):
         taskQueueName = os.environ['PYME_TASKQUEUENAME']
     else:
         taskQueueName = 'taskQueue'
@@ -68,11 +68,11 @@
     
 
 def testFrame(detThresh = 0.9):
-    ft = remFitBuf.fitTask(seriesName,vp.zp, detThresh, MetaDataHandler.NestedClassMDHandler(mdh), cFitType.GetString(cFitType.GetSelection()), bgindices=range(max(vp.zp-10, mdh.getEntry('EstimatedLaserOnFrameNo')),vp.zp), SNThreshold=True)
+    ft = remFitBuf.fitTask(seriesName,vp.zp, detThresh, MetaDataHandler.NestedClassMDHandler(mdh), cFitType.GetString(cFitType.GetSelection()), bgindices=list(range(max(vp.zp-10, mdh.getEntry('EstimatedLaserOnFrameNo')),vp.zp)), SNThreshold=True)
     return ft(True)
 
 def testFrameTQ(detThresh = 0.9):
-    ft = remFitBuf.fitTask(seriesName,vp.zp, detThresh, MetaDataHandler.NestedClassMDHandler(mdh), 'LatGaussFitFR', 'TQDataSource', bgindices=range(max(vp.zp-10, mdh.getEntry('EstimatedLaserOnFrameNo')),vp.zp), SNThreshold=True)
+    ft = remFitBuf.fitTask(seriesName,vp.zp, detThresh, MetaDataHandler.NestedClassMDHandler(mdh), 'LatGaussFitFR', 'TQDataSource', bgindices=list(range(max(vp.zp-10, mdh.getEntry('EstimatedLaserOnFrameNo')),vp.zp)), SNThreshold=True)
     return ft(True, tq)
 
 def pushImagesD(startingAt=0, detThresh = .9):
@@ -80,11 +80,11 @@
     mdhQ = MetaDataHandler.QueueMDHandler(tq, seriesName, mdh)
     mdhQ.setEntry('Analysis.DetectionThreshold', detThresh)
     for i in range(startingAt, ds.shape[0]):
-        tq.postTask(remFitBuf.fitTask(seriesName,i, detThresh, MetaDataHandler.NestedClassMDHandler(mdh), 'LatGaussFitFR', bgindices=range(max(i-10,mdh.getEntry('EstimatedLaserOnFrameNo') ),i), SNThreshold=True,driftEstInd=range(max(i-5, mdh.getEntry('EstimatedLaserOnFrameNo')),min(i + 5, ds.shape[0])), dataSourceModule=dataSource.moduleName), queueName=seriesName)
+        tq.postTask(remFitBuf.fitTask(seriesName,i, detThresh, MetaDataHandler.NestedClassMDHandler(mdh), 'LatGaussFitFR', bgindices=list(range(max(i-10,mdh.getEntry('EstimatedLaserOnFrameNo') ),i)), SNThreshold=True,driftEstInd=list(range(max(i-5, mdh.getEntry('EstimatedLaserOnFrameNo')),min(i + 5, ds.shape[0]))), dataSourceModule=dataSource.moduleName), queueName=seriesName)
 
 
 def testFrameD(detThresh = 0.9):
-    ft = remFitBuf.fitTask(seriesName,vp.zp, detThresh, MetaDataHandler.NestedClassMDHandler(mdh), 'LatGaussFitFR', bgindices=range(max(vp.zp-10, md.EstimatedLaserOnFrameNo),vp.zp), SNThreshold=True,driftEstInd=range(max(vp.zp-5, md.EstimatedLaserOnFrameNo),min(vp.zp + 5, ds.shape[0])))
+    ft = remFitBuf.fitTask(seriesName,vp.zp, detThresh, MetaDataHandler.NestedClassMDHandler(mdh), 'LatGaussFitFR', bgindices=list(range(max(vp.zp-10, md.EstimatedLaserOnFrameNo),vp.zp)), SNThreshold=True,driftEstInd=list(range(max(vp.zp-5, md.EstimatedLaserOnFrameNo),min(vp.zp + 5, ds.shape[0]))))
     return ft(True)
 
 def testFrames(detThresh = 0.9, offset = 0):
@@ -92,7 +92,7 @@
     matplotlib.interactive(False)
     clf()
     sq = min(mdh.getEntry('EstimatedLaserOnFrameNo') + 1000, dataSource.getNumSlices()/4)
-    zps = array(range(mdh.getEntry('EstimatedLaserOnFrameNo') + 20, mdh.getEntry('EstimatedLaserOnFrameNo') + 24)  + range(sq, sq + 4) + range(dataSource.getNumSlices()/2,dataSource.getNumSlices() /2+4))
+    zps = array(list(range(mdh.getEntry('EstimatedLaserOnFrameNo') + 20, mdh.getEntry('EstimatedLaserOnFrameNo') + 24))  + list(range(sq, sq + 4)) + list(range(dataSource.getNumSlices()/2,dataSource.getNumSlices() /2+4)))
     zps += offset
     fitMod = cFitType.GetStringSelection()
     #bgFrames = int(tBackgroundFrames.GetValue())
@@ -100,7 +100,7 @@
     for i in range(12):
         #if 'Analysis.NumBGFrames' in md.getEntryNames():
         #bgi = range(max(zps[i] - bgFrames,mdh.getEntry('EstimatedLaserOnFrameNo')), zps[i])
-        bgi = range(max(zps[i] + bgFrames[0],mdh.getEntry('EstimatedLaserOnFrameNo')), max(zps[i] + bgFrames[1],mdh.getEntry('EstimatedLaserOnFrameNo')))
+        bgi = list(range(max(zps[i] + bgFrames[0],mdh.getEntry('EstimatedLaserOnFrameNo')), max(zps[i] + bgFrames[1],mdh.getEntry('EstimatedLaserOnFrameNo'))))
         #else:
         #    bgi = range(max(zps[i] - 10,md.EstimatedLaserOnFrameNo), zps[i])
         if 'Splitter' in fitMod:
--- ./PYME/DSView/loft/myviewpanel.py	(original)
+++ ./PYME/DSView/loft/myviewpanel.py	(refactored)
@@ -451,7 +451,9 @@
         self.selection_end_y = self.ds.getHeight() - 1
         self.selection_end_z = self.ds.getDepth() - 1
         
-    def SetSelection(self, (b_x,b_y,b_z),(e_x,e_y,e_z)):
+    def SetSelection(self, xxx_todo_changeme, xxx_todo_changeme1):
+        (b_x,b_y,b_z) = xxx_todo_changeme
+        (e_x,e_y,e_z) = xxx_todo_changeme1
         self.selection_begin_x = b_x
         self.selection_begin_y = b_y
         self.selection_begin_z = b_z
--- ./PYME/DSView/loft/myviewpanel_numarray.py	(original)
+++ ./PYME/DSView/loft/myviewpanel_numarray.py	(refactored)
@@ -99,8 +99,8 @@
         return r
         
 class DisplayOpts:
-    UPRIGHT, ROT90 = range(2)
-    SLICE_XY, SLICE_XZ, SLICE_YZ = range(3)
+    UPRIGHT, ROT90 = list(range(2))
+    SLICE_XY, SLICE_XZ, SLICE_YZ = list(range(3))
     
     def __init__(self, nchans=1):
         if nchans ==1:
@@ -749,7 +749,9 @@
         self.selection_end_y = self.ds.shape[1] - 1
         self.selection_end_z = self.ds.shape[2] - 1
         
-    def SetSelection(self, (b_x,b_y,b_z),(e_x,e_y,e_z)):
+    def SetSelection(self, xxx_todo_changeme, xxx_todo_changeme1):
+        (b_x,b_y,b_z) = xxx_todo_changeme
+        (e_x,e_y,e_z) = xxx_todo_changeme1
         self.selection_begin_x = b_x
         self.selection_begin_y = b_y
         self.selection_begin_z = b_z
--- ./PYME/DSView/modules/LMAnalysis.py	(original)
+++ ./PYME/DSView/modules/LMAnalysis.py	(refactored)
@@ -137,7 +137,7 @@
         else:
             self.do.zp = self.image.mdh.getEntry('EstimatedLaserOnFrameNo')
         
-        if (len(self.fitResults) > 0) and not 'PYME_BUGGYOPENGL' in os.environ.keys():
+        if (len(self.fitResults) > 0) and not 'PYME_BUGGYOPENGL' in list(os.environ.keys()):
             self.GenResultsView()
 
     def GenResultsView(self):
@@ -754,11 +754,11 @@
         for i in range(startingAt, self.image.dataSource.getNumSlices()):
             debugPrint('Posting task %d' %i)
             if 'Analysis.BGRange' in md.getEntryNames():
-                bgi = range(max(i + md.Analysis.BGRange[0],md.EstimatedLaserOnFrameNo), max(i + md.Analysis.BGRange[1],md.EstimatedLaserOnFrameNo))
+                bgi = list(range(max(i + md.Analysis.BGRange[0],md.EstimatedLaserOnFrameNo), max(i + md.Analysis.BGRange[1],md.EstimatedLaserOnFrameNo)))
             elif 'Analysis.NumBGFrames' in md.getEntryNames():
-                bgi = range(max(i - md.Analysis.NumBGFrames, md.EstimatedLaserOnFrameNo), i)
+                bgi = list(range(max(i - md.Analysis.NumBGFrames, md.EstimatedLaserOnFrameNo), i))
             else:
-                bgi = range(max(i - 10, md.EstimatedLaserOnFrameNo), i)
+                bgi = list(range(max(i - 10, md.EstimatedLaserOnFrameNo), i))
 
             #task = fitTask(self.queueID, taskNum, self.metaData.Analysis.DetectionThreshold, self.metaData, self.metaData.Analysis.FitModule, 'TQDataSource', bgindices =bgi, SNThreshold = True)
             
@@ -796,7 +796,7 @@
         matplotlib.interactive(False)
         clf()
         sq = min(self.image.mdh.getEntry('EstimatedLaserOnFrameNo') + 1000, self.image.dataSource.getNumSlices()/4)
-        zps = array(range(self.image.mdh.getEntry('EstimatedLaserOnFrameNo') + 20, self.image.mdh.getEntry('EstimatedLaserOnFrameNo') + 24)  + range(sq, sq + 4) + range(self.image.dataSource.getNumSlices()/2,self.image.dataSource.getNumSlices() /2+4))
+        zps = array(list(range(self.image.mdh.getEntry('EstimatedLaserOnFrameNo') + 20, self.image.mdh.getEntry('EstimatedLaserOnFrameNo') + 24))  + list(range(sq, sq + 4)) + list(range(self.image.dataSource.getNumSlices()/2,self.image.dataSource.getNumSlices() /2+4)))
         zps += offset
         fitMod = self.fitFactories[self.cFitType.GetSelection()]
         #bgFrames = int(tBackgroundFrames.GetValue())
@@ -806,7 +806,7 @@
             print(i)
             #if 'Analysis.NumBGFrames' in md.getEntryNames():
             #bgi = range(max(zps[i] - bgFrames,mdh.getEntry('EstimatedLaserOnFrameNo')), zps[i])
-            bgi = range(max(zps[i] + bgFrames[0],self.image.mdh.getEntry('EstimatedLaserOnFrameNo')), max(zps[i] + bgFrames[1],self.image.mdh.getEntry('EstimatedLaserOnFrameNo')))
+            bgi = list(range(max(zps[i] + bgFrames[0],self.image.mdh.getEntry('EstimatedLaserOnFrameNo')), max(zps[i] + bgFrames[1],self.image.mdh.getEntry('EstimatedLaserOnFrameNo'))))
             #else:
             #    bgi = range(max(zps[i] - 10,md.EstimatedLaserOnFrameNo), zps[i])
             mn = self.image.dataSource.moduleName
@@ -866,7 +866,7 @@
         #bgFrames = int(tBackgroundFrames.GetValue())
         bgFrames = [int(v) for v in self.tBackgroundFrames.GetValue().split(':')]
         #print zps
-        bgi = range(max(zp + bgFrames[0],self.image.mdh.getEntry('EstimatedLaserOnFrameNo')), max(zp + bgFrames[1],self.image.mdh.getEntry('EstimatedLaserOnFrameNo')))
+        bgi = list(range(max(zp + bgFrames[0],self.image.mdh.getEntry('EstimatedLaserOnFrameNo')), max(zp + bgFrames[1],self.image.mdh.getEntry('EstimatedLaserOnFrameNo'))))
             #else:
             #    bgi = range(max(zps[i] - 10,md.EstimatedLaserOnFrameNo), zps[i])
         mn = self.image.dataSource.moduleName
--- ./PYME/DSView/modules/__init__.py	(original)
+++ ./PYME/DSView/modules/__init__.py	(refactored)
@@ -55,7 +55,7 @@
 def loadMode(mode, dsviewer):
     '''install the relevant modules for a particular mode'''
 
-    if mode in modeModules.keys():
+    if mode in list(modeModules.keys()):
         mods = modeModules[mode]
     else:
         mods = modeModules['default']
--- ./PYME/DSView/modules/blobFinding.py	(original)
+++ ./PYME/DSView/modules/blobFinding.py	(refactored)
@@ -312,15 +312,15 @@
         X, Y = numpy.meshgrid(numpy.linspace(0., 70.*self.image.data.shape[0], 20), numpy.linspace(0., 70.*self.image.data.shape[1], 20))
         X = X.ravel()
         Y = Y.ravel()
-        for k in self.shiftfields.keys():
+        for k in list(self.shiftfields.keys()):
             spx, spy, dz = self.shiftfields[k]
             pylab.quiver(X, Y, spx.ev(X, Y), spy.ev(X, Y), color=['r', 'g', 'b'][k], scale=2e3)
             
         pylab.axis('equal')
         
     def saveShiftmaps(self, event=None):
-        import cPickle
-        for k in self.shiftfields.keys():
+        import pickle
+        for k in list(self.shiftfields.keys()):
             fdialog = wx.FileDialog(None, 'Save Positions ...',
                 wildcard='Shiftmap|*.sm', defaultFile=os.path.splitext(self.image.names[k])[0] + '.sm', style=wx.SAVE|wx.HIDE_READONLY)
             succ = fdialog.ShowModal()
@@ -328,7 +328,7 @@
                 outFilename = fdialog.GetPath().encode()
                 
                 fid = open(outFilename, 'wb')
-                cPickle.dump(self.shiftfields[k], fid, 2)
+                pickle.dump(self.shiftfields[k], fid, 2)
                 fid.close()
                 
 
--- ./PYME/DSView/modules/blobMeasure.py	(original)
+++ ./PYME/DSView/modules/blobMeasure.py	(refactored)
@@ -36,7 +36,7 @@
 ig = iGen()
 
 def getNewID():
-    return ig.next()
+    return next(ig)
 
 
 class DataBlock(object):
@@ -446,7 +446,7 @@
             
     def getImage(self):
         import Image
-        import StringIO
+        import io
         import cherrypy
         cherrypy.response.headers["Content-Type"]="image/png"
         
@@ -481,7 +481,7 @@
 
         zoom = 200./max(xsize, ysize)
         
-        out = StringIO.StringIO()
+        out = io.StringIO()
         Image.fromarray(im).resize((int(zoom*ysize), int(zoom*xsize))).save(out, 'PNG')
         s = out.getvalue()
         out.close()
@@ -491,7 +491,7 @@
         #import Image
         from matplotlib.backends.backend_agg import FigureCanvasAgg as FigureCanvas
         from matplotlib.figure import Figure
-        import StringIO
+        import io
         import cherrypy
         cherrypy.response.headers["Content-Type"]="image/png"
         
@@ -510,7 +510,7 @@
             ax.plot(xv[:-1], yv[i], c = cols[i], lw=2)
         ax.set_xlabel(getattr(self, graphName).xlabel)
         
-        out = StringIO.StringIO()
+        out = io.StringIO()
         canvas.print_png(out, dpi=100)
         s = out.getvalue()
         out.close()
@@ -521,7 +521,7 @@
         from matplotlib.backends.backend_agg import FigureCanvasAgg as FigureCanvas
         from matplotlib.figure import Figure
         from matplotlib.patches import Rectangle
-        import StringIO
+        import io
         import cherrypy
         cherrypy.response.headers["Content-Type"]="image/png"
 
@@ -565,7 +565,7 @@
         
         ax.set_axis_off()
         
-        out = StringIO.StringIO()
+        out = io.StringIO()
         canvas.print_png(out, dpi=100)
         s = out.getvalue()
         out.close()
@@ -576,7 +576,7 @@
         from matplotlib.backends.backend_agg import FigureCanvasAgg as FigureCanvas
         from mpl_toolkits.mplot3d import Axes3D
         from matplotlib.figure import Figure
-        import StringIO
+        import io
         import cherrypy
         cherrypy.response.headers["Content-Type"]="image/png"
 
@@ -618,7 +618,7 @@
         #ax.axis('equal')
         #ax.set_axis_off()
         
-        out = StringIO.StringIO()
+        out = io.StringIO()
         canvas.print_png(out, dpi=100)
         s = out.getvalue()
         out.close()
@@ -733,7 +733,7 @@
         webbrowser.open('http://localhost:8080/measure/%d' % self.ID)
         
     def OnSaveObjects(self, event):
-        import cPickle
+        import pickle
         import zipfile
         
         zf = zipfile()
--- ./PYME/DSView/modules/composite.py	(original)
+++ ./PYME/DSView/modules/composite.py	(refactored)
@@ -220,7 +220,7 @@
         return self.filectrls[chan].GetPath()
         
 def _getImage(name):
-    if name in image.openImages.keys():
+    if name in list(image.openImages.keys()):
         img = image.openImages[name]
         chan = 0
     else:
@@ -327,7 +327,7 @@
         wx.Dialog.__init__(self, parent, title='Composite')
         #nChans = image.data.shape[3]
         
-        self.imageNames =  image.openImages.keys()
+        self.imageNames =  list(image.openImages.keys())
         
         self.dispNames = []
         
--- ./PYME/DSView/modules/deconvolution.py	(original)
+++ ./PYME/DSView/modules/deconvolution.py	(refactored)
@@ -310,7 +310,7 @@
         sizer2.Add(sizer3, 0, wx.EXPAND|wx.ALIGN_CENTER_VERTICAL | wx.ALL, 0)
 
         sizer3 = wx.BoxSizer(wx.HORIZONTAL)
-        sizer3.Add(wx.StaticText(self, -1, u'Regularisation \u03BB:'), 0, wx.ALIGN_CENTER_VERTICAL | wx.ALL, 5)
+        sizer3.Add(wx.StaticText(self, -1, 'Regularisation \u03BB:'), 0, wx.ALIGN_CENTER_VERTICAL | wx.ALL, 5)
         self.tRegLambda = wx.TextCtrl(self, -1, '1e-8')
 
         sizer3.Add(self.tRegLambda, 1, wx.ALIGN_CENTER_VERTICAL | wx.ALL, 5)
--- ./PYME/DSView/modules/filtering.py	(original)
+++ ./PYME/DSView/modules/filtering.py	(refactored)
@@ -281,7 +281,7 @@
                 
     def OnSetLabels(self, event):
         from PYME.DSView import image
-        names = image.openImages.keys()
+        names = list(image.openImages.keys())
         
         dlg = wx.SingleChoiceDialog(self.dsviewer, 'Select an image', 'Set Labels', names)
         
--- ./PYME/DSView/modules/graphViewPanel.py	(original)
+++ ./PYME/DSView/modules/graphViewPanel.py	(refactored)
@@ -143,7 +143,7 @@
             try:
                 self.canvas.print_figure(
                     os.path.join(dirname, filename), format=format)
-            except Exception, e:
+            except Exception as e:
                 #print str(e)
                 error_msg_wx(str(e))
 
--- ./PYME/DSView/modules/psfTools.py	(original)
+++ ./PYME/DSView/modules/psfTools.py	(refactored)
@@ -33,7 +33,7 @@
     from traitsui.api import View, Item
     from traitsui.menu import OKButton
 
-from graphViewPanel import *
+from .graphViewPanel import *
 from PYME.PSFEst import psfQuality
 
 def remove_newlines(s):
--- ./PYME/DSView/modules/pupilTools.py	(original)
+++ ./PYME/DSView/modules/pupilTools.py	(refactored)
@@ -66,7 +66,7 @@
         self.gZern.SetColLabelValue(1, "Coefficient")
         self.gZern.SetColLabelValue(2, "Residual")
         
-        for i, c, r, in zip(xrange(len(coeffs)), coeffs, res):
+        for i, c, r, in zip(range(len(coeffs)), coeffs, res):
             self.gZern.SetRowLabelValue(i, '%d' %i)
             self.gZern.SetCellValue(i, 0, zernike.NameByNumber[i])
             self.gZern.SetCellValue(i, 1, '%3.3g' % c)
--- ./PYME/DSView/modules/pupilView.py	(original)
+++ ./PYME/DSView/modules/pupilView.py	(refactored)
@@ -143,7 +143,7 @@
             try:
                 self.canvas.print_figure(
                     os.path.join(dirname, filename), format=format)
-            except Exception, e:
+            except Exception as e:
                 #print str(e)
                 error_msg_wx(str(e))
 
--- ./PYME/DSView/modules/synchronise.py	(original)
+++ ./PYME/DSView/modules/synchronise.py	(refactored)
@@ -55,7 +55,7 @@
     def OnSynchronise(self, event):
         dlg = wx.SingleChoiceDialog(
                 self.dsviewer, 'choose the image to composite with', 'Make Composite',
-                dsviewer_npy_nb.openViewers.keys(),
+                list(dsviewer_npy_nb.openViewers.keys()),
                 wx.CHOICEDLG_STYLE
                 )
 
--- ./PYME/DSView/modules/visgui.py	(original)
+++ ./PYME/DSView/modules/visgui.py	(refactored)
@@ -73,7 +73,7 @@
     if not 'ivps' in dir(dsviewer):
         dsviewer.ivps = []
 
-    for name, i in zip(dsviewer.image.names, xrange(dsviewer.image.data.shape[3])):
+    for name, i in zip(dsviewer.image.names, range(dsviewer.image.data.shape[3])):
         dsviewer.ivps.append(ImageViewPanel(dsviewer, dsviewer.image, dsviewer.glCanvas, dsviewer.do, chan=i))
         if dsviewer.image.data.shape[3] > 1 and len(cmaps) > 0:
             dsviewer.do.cmaps[i] = cmaps.pop(0)
--- ./PYME/DSView/modules/measure/filterPan.py	(original)
+++ ./PYME/DSView/modules/measure/filterPan.py	(refactored)
@@ -50,8 +50,8 @@
         self.lFiltKeys.InsertColumn(1, 'Min')
         self.lFiltKeys.InsertColumn(2, 'Max')
 
-        for key, value in self.filterKeys.items():
-            ind = self.lFiltKeys.InsertStringItem(sys.maxint, key)
+        for key, value in list(self.filterKeys.items()):
+            ind = self.lFiltKeys.InsertStringItem(sys.maxsize, key)
             self.lFiltKeys.SetStringItem(ind,1, '%3.2f' % value[0])
             self.lFiltKeys.SetStringItem(ind,2, '%3.2f' % value[1])
 
@@ -135,14 +135,14 @@
         event.Skip()
 
     def OnFilterClipToSelection(self, event):
-        if 'x' in self.filterKeys.keys() or 'y' in self.filterKeys.keys():
-            if 'x' in self.filterKeys.keys():
+        if 'x' in list(self.filterKeys.keys()) or 'y' in list(self.filterKeys.keys()):
+            if 'x' in list(self.filterKeys.keys()):
                 i = 0
                 while not self.lFiltKeys.GetItemText(i) == 'x':
                     i +=1
                 self.lFiltKeys.DeleteItem(i)
                 self.filterKeys.pop('x')
-            if 'y' in self.filterKeys.keys():
+            if 'y' in list(self.filterKeys.keys()):
                 i = 0
                 while not self.lFiltKeys.GetItemText(i) == 'y':
                     i +=1
@@ -154,13 +154,13 @@
             x0, y0 = self.visFr.glCanvas.selectionStart
             x1, y1 = self.visFr.glCanvas.selectionFinish
 
-            if not 'x' in self.filterKeys.keys():
-                indx = self.lFiltKeys.InsertStringItem(sys.maxint, 'x')
+            if not 'x' in list(self.filterKeys.keys()):
+                indx = self.lFiltKeys.InsertStringItem(sys.maxsize, 'x')
             else:
                 indx = [self.lFiltKeys.GetItemText(i) for i in range(self.lFiltKeys.GetItemCount())].index('x')
 
-            if not 'y' in self.filterKeys.keys():
-                indy = self.lFiltKeys.InsertStringItem(sys.maxint, 'y')
+            if not 'y' in list(self.filterKeys.keys()):
+                indy = self.lFiltKeys.InsertStringItem(sys.maxsize, 'y')
             else:
                 indy = [self.lFiltKeys.GetItemText(i) for i in range(self.lFiltKeys.GetItemCount())].index('y')
 
@@ -183,7 +183,7 @@
 
         possibleKeys = []
         if not self.pipeline.selectedDataSource == None:
-            possibleKeys = self.pipeline.selectedDataSource.keys()
+            possibleKeys = list(self.pipeline.selectedDataSource.keys())
 
         dlg = editFilterDialog.FilterEditDialog(self, mode='new', possibleKeys=possibleKeys)
 
@@ -200,7 +200,7 @@
 
             self.filterKeys[key] = (minVal, maxVal)
 
-            ind = self.lFiltKeys.InsertStringItem(sys.maxint, key)
+            ind = self.lFiltKeys.InsertStringItem(sys.maxsize, key)
             self.lFiltKeys.SetStringItem(ind,1, '%3.2f' % minVal)
             self.lFiltKeys.SetStringItem(ind,2, '%3.2f' % maxVal)
 
--- ./PYME/Deconv/block_dec.py	(original)
+++ ./PYME/Deconv/block_dec.py	(refactored)
@@ -22,8 +22,8 @@
 ##################
 
 #f = f3
-import tcluster
-import dec
+from . import tcluster
+from . import dec
 from scipy import *
 class blocking_deconv:
     def __init__(self, nodes, data, psf, alpha, blocksize = {'x':64, 'y':64, 'z':256}, blockoverlap = {'x':10, 'y':10, 'z':50}):        
@@ -43,7 +43,7 @@
         if (self.width > self.blocksize['y']):
             #self.sp_y = [0,]
             #print self.sp_y
-            self.sp_y = range(0,(self.width-self.blocksize['y']), (self.blocksize['y'] -2*self.blockoverlap['y']))
+            self.sp_y = list(range(0,(self.width-self.blocksize['y']), (self.blocksize['y'] -2*self.blockoverlap['y'])))
             #self.sp_y.extend(range((self.blocksize['y'] -2*self.blockoverlap['y']),(self.width-self.blocksize['y']), self.blocksize['y']))
             #print self.sp_y
             self.sp_y.append(self.width-self.blocksize['y'])
@@ -53,7 +53,7 @@
             
         if (self.height > self.blocksize['x']):
             #self.sp_x = [0,]
-            self.sp_x = range(0,(self.height-self.blocksize['x']), (self.blocksize['x'] -2*self.blockoverlap['x']))
+            self.sp_x = list(range(0,(self.height-self.blocksize['x']), (self.blocksize['x'] -2*self.blockoverlap['x'])))
             #self.sp_x.extend(range((self.blocksize['x'] -2*self.blockoverlap['x']),(self.width-self.blocksize['x']), self.blocksize['x']))
             self.sp_x.append(self.height-self.blocksize['x'])
         else:
@@ -62,7 +62,7 @@
             
         if (self.depth > self.blocksize['z']):
             #self.sp_z = [0,]
-            self.sp_z = range(0,(self.depth-self.blocksize['z']), (self.blocksize['z'] -2*self.blockoverlap['z']))
+            self.sp_z = list(range(0,(self.depth-self.blocksize['z']), (self.blocksize['z'] -2*self.blockoverlap['z'])))
             #self.sp_z.extend(range((self.blocksize['z'] -2*self.blockoverlap['z']),(self.width-self.blocksize['z']), self.blocksize['z']))
             self.sp_z.append(self.depth-self.blocksize['z'])
         else:
@@ -207,8 +207,8 @@
     import sys
     import os
     from optparse import OptionParser
-    import read_kdf
-    import write_kdf
+    from . import read_kdf
+    from . import write_kdf
     import time
 
     parser = OptionParser()
--- ./PYME/Deconv/dec.py	(original)
+++ ./PYME/Deconv/dec.py	(refactored)
@@ -26,7 +26,7 @@
 from scipy.fftpack import fftn, ifftn, fftshift, ifftshift
 from scipy import ndimage
 import fftw3f
-import fftwWisdom
+from . import fftwWisdom
 
 fftwWisdom.load_wisdom()
 #import weave
@@ -34,7 +34,7 @@
 #from PYME import pad
 import numpy
 
-from wiener import resizePSF
+from .wiener import resizePSF
 
 class dec:
     '''Base deconvolution class, implementing a variant of the ICTM algorithm.
--- ./PYME/Deconv/decThread.py	(original)
+++ ./PYME/Deconv/decThread.py	(refactored)
@@ -64,7 +64,7 @@
             return self._thread_id
 
         # no, look for it in the _active dict
-        for tid, tobj in threading._active.items():
+        for tid, tobj in list(threading._active.items()):
             if tobj is self:
                 self._thread_id = tid
                 return tid
--- ./PYME/Deconv/dec_test.py	(original)
+++ ./PYME/Deconv/dec_test.py	(refactored)
@@ -24,7 +24,7 @@
 __test__= False
 
 if __name__ == '__main__':
-    import dec
+    from . import dec
     from scipy import *
     import profile
     (x,y,z) = mgrid[-32:31,-32:31,-128:127]
--- ./PYME/Deconv/deccs.py	(original)
+++ ./PYME/Deconv/deccs.py	(refactored)
@@ -26,7 +26,7 @@
 from scipy.fftpack import fftn, ifftn, fftshift, ifftshift
 from scipy import ndimage
 import fftw3f
-import fftwWisdom
+from . import fftwWisdom
 
 fftwWisdom.load_wisdom()
 #import weave
@@ -36,7 +36,7 @@
 
 from pylab import *
 
-from wiener import resizePSF
+from .wiener import resizePSF
 
 show_plots = False
 from PYME.DSView import View3D
@@ -253,7 +253,7 @@
                 plot(self.f)
                 plot(fn)
                 plot(fn1)
-                raw_input()
+                input()
             
             #v.view.Redraw()
             #raw_input()
--- ./PYME/Deconv/deccs2.py	(original)
+++ ./PYME/Deconv/deccs2.py	(refactored)
@@ -26,7 +26,7 @@
 from scipy.fftpack import fftn, ifftn, fftshift, ifftshift
 from scipy import ndimage
 import fftw3f
-import fftwWisdom
+from . import fftwWisdom
 
 fftwWisdom.load_wisdom()
 #import weave
@@ -37,7 +37,7 @@
 
 from pylab import *
 
-from wiener import resizePSF
+from .wiener import resizePSF
 
 show_plots = False
 from PYME.DSView import View3D
@@ -272,7 +272,7 @@
                     plot(self.estimateMask)
                     #plot(fn)
                     #plot(fn1)
-                    raw_input()
+                    input()
             #remove zero entries from the estimate mask
             discard = self.estimateMask*(self.f <= 0)
             if np.any(discard):
@@ -520,7 +520,7 @@
         for xi, yi, zi in zip(self.x,self.y,self.z):
             key = (xi, yi, zi)
             
-            if key in self.ACache.keys():
+            if key in list(self.ACache.keys()):
                 A, x0, x1, y0, y1 = self.ACache[key]
             else: 
                 xif = int(xi/ss)
@@ -554,7 +554,7 @@
         for xi, yi, zi in zip(self.x,self.y,self.z):
             key = (xi, yi, zi)
             
-            if key in self.AhCache.keys():
+            if key in list(self.AhCache.keys()):
                 A, x0, x1, y0, y1 = self.AhCache[key]
             else: 
                 xif = int(xi/ss)
--- ./PYME/Deconv/deccs_mc.py	(original)
+++ ./PYME/Deconv/deccs_mc.py	(refactored)
@@ -26,7 +26,7 @@
 from scipy.fftpack import fftn, ifftn, fftshift, ifftshift
 from scipy import ndimage
 import fftw3f
-import fftwWisdom
+from . import fftwWisdom
 
 fftwWisdom.load_wisdom()
 #import weave
@@ -36,7 +36,7 @@
 
 from pylab import *
 
-from wiener import resizePSF
+from .wiener import resizePSF
 
 show_plots = False
 from PYME.DSView import View3D
@@ -256,7 +256,7 @@
                 plot(self.f)
                 plot(fn)
                 plot(fn1)
-                raw_input()
+                input()
             
             #v.view.Redraw()
             #raw_input()
--- ./PYME/Deconv/deconvDialogs.py	(original)
+++ ./PYME/Deconv/deconvDialogs.py	(refactored)
@@ -91,7 +91,7 @@
         sizer2.Add(sizer3, 0, wx.EXPAND|wx.ALIGN_CENTER_VERTICAL | wx.ALL, 0)
 
         sizer3 = wx.BoxSizer(wx.HORIZONTAL)
-        sizer3.Add(wx.StaticText(pan1, -1, u'Regularisation \u03BB:'), 0, wx.ALIGN_CENTER_VERTICAL | wx.ALL, 5)
+        sizer3.Add(wx.StaticText(pan1, -1, 'Regularisation \u03BB:'), 0, wx.ALIGN_CENTER_VERTICAL | wx.ALL, 5)
         self.tRegLambda = wx.TextCtrl(pan1, -1, '1e-1')
 
         sizer3.Add(self.tRegLambda, 1, wx.ALIGN_CENTER_VERTICAL | wx.ALL, 5)
--- ./PYME/Deconv/richardsonLucy.py	(original)
+++ ./PYME/Deconv/richardsonLucy.py	(refactored)
@@ -26,9 +26,9 @@
 import numpy
 from scipy.fftpack import fftn, ifftn, fftshift, ifftshift
 import fftw3f
-import fftwWisdom
-
-from wiener import resizePSF
+from . import fftwWisdom
+
+from .wiener import resizePSF
 
 fftwWisdom.load_wisdom()
 #import weave
--- ./PYME/Deconv/tcluster.py	(original)
+++ ./PYME/Deconv/tcluster.py	(refactored)
@@ -24,7 +24,7 @@
 import threading
 import scipy.cow
 import scipy.cow.sync_cluster
-import Queue 
+import queue 
 import time
 
 class tTask:
@@ -75,7 +75,7 @@
         #addendums = []
         results = {}
         
-        taskQueue = Queue.Queue()
+        taskQueue = queue.Queue()
         
         tThreads = []
         Tasks = []
@@ -160,13 +160,13 @@
                 try:
                     res = self.machine.executeTask(self.task)
                     self.results[self.task.name] = res
-                except Exception, ex: # if something went wrong put task back
+                except Exception as ex: # if something went wrong put task back
                     #pass
                     self.task_queue.put(self.task)
                     self.task = None
                     raise ex
                 
-           except Queue.Empty:
+           except queue.Empty:
                 time.sleep(1)
                 #pass
         #except Timeout:
--- ./PYME/Deconv/tq_block_dec.py	(original)
+++ ./PYME/Deconv/tq_block_dec.py	(refactored)
@@ -23,9 +23,9 @@
 
 #f = f3
 #import tcluster
-import dec
+from . import dec
 from scipy import *
-import decTask #import decTask
+from . import decTask #import decTask
 
 
 
@@ -51,7 +51,7 @@
         if (self.width > self.blocksize['y']):
             #self.sp_y = [0,]
             #print self.sp_y
-            self.sp_y = range(0,(self.width-self.blocksize['y']), (self.blocksize['y'] -2*self.blockoverlap['y']))
+            self.sp_y = list(range(0,(self.width-self.blocksize['y']), (self.blocksize['y'] -2*self.blockoverlap['y'])))
             #self.sp_y.extend(range((self.blocksize['y'] -2*self.blockoverlap['y']),(self.width-self.blocksize['y']), self.blocksize['y']))
             #print self.sp_y
             self.sp_y.append(self.width-self.blocksize['y'])
@@ -61,7 +61,7 @@
             
         if (self.height > self.blocksize['x']):
             #self.sp_x = [0,]
-            self.sp_x = range(0,(self.height-self.blocksize['x']), (self.blocksize['x'] -2*self.blockoverlap['x']))
+            self.sp_x = list(range(0,(self.height-self.blocksize['x']), (self.blocksize['x'] -2*self.blockoverlap['x'])))
             #self.sp_x.extend(range((self.blocksize['x'] -2*self.blockoverlap['x']),(self.width-self.blocksize['x']), self.blocksize['x']))
             self.sp_x.append(self.height-self.blocksize['x'])
         else:
@@ -70,7 +70,7 @@
             
         if (self.depth > self.blocksize['z']):
             #self.sp_z = [0,]
-            self.sp_z = range(0,(self.depth-self.blocksize['z']), (self.blocksize['z'] -2*self.blockoverlap['z']))
+            self.sp_z = list(range(0,(self.depth-self.blocksize['z']), (self.blocksize['z'] -2*self.blockoverlap['z'])))
             #self.sp_z.extend(range((self.blocksize['z'] -2*self.blockoverlap['z']),(self.width-self.blocksize['z']), self.blocksize['z']))
             self.sp_z.append(self.depth-self.blocksize['z'])
         else:
@@ -118,7 +118,7 @@
         self.tq.removeQueue(self.name)
         
     def push_deconv_tasks(self, lamb = 2e-2, num_iters = 10):
-        for block, blocknum in zip(self.blocks, range(len(self.blocks))):
+        for block, blocknum in zip(self.blocks, list(range(len(self.blocks)))):
             task = decTask.decTask(self.name, block[0], blocknum, lamb=lamb, num_iters=num_iters)
             self.tq.postTask(task, self.name)
         #self.results = self.tc.loop_code('f = d4.deconv(ravel(a[0]), lamb, alpha=a[1], num_iters=num_it)', 'a', {'a':self.blocks, 'lamb':lamb, 'num_it':num_iters}, ('f',))
@@ -132,7 +132,7 @@
         #decTask.decObj = self.d4
         #decTask.queueID = self.name
 
-        for block, blocknum in zip(self.blocks, range(len(self.blocks))):
+        for block, blocknum in zip(self.blocks, list(range(len(self.blocks)))):
             task = decTask.decTask(self.name, block[0], blocknum, lamb=lamb, num_iters=num_iters)
             t = task(taskQueue=self.tq)
             self.results[t.blocknum] = t.results
--- ./PYME/Deconv/wiener.py	(original)
+++ ./PYME/Deconv/wiener.py	(refactored)
@@ -27,7 +27,7 @@
 from scipy.fftpack import fftn, ifftn, fftshift, ifftshift
 import scipy
 import fftw3f
-import fftwWisdom
+from . import fftwWisdom
 
 fftwWisdom.load_wisdom()
 
--- ./PYME.io.FileUtils/KdfSeqToHdf5.py	(original)
+++ ./PYME.io.FileUtils/KdfSeqToHdf5.py	(refactored)
@@ -23,7 +23,7 @@
 
 #!/usr/bin/python
 
-import read_kdf
+from . import read_kdf
 import tables
 import os
 import sys
--- ./PYME.io.FileUtils/KdfStackToHdf5.py	(original)
+++ ./PYME.io.FileUtils/KdfStackToHdf5.py	(refactored)
@@ -23,7 +23,7 @@
 
 #!/usr/bin/python
 
-import read_kdf
+from . import read_kdf
 import tables
 import os
 import sys
--- ./PYME.io.FileUtils/RawToHdf5.py	(original)
+++ ./PYME.io.FileUtils/RawToHdf5.py	(refactored)
@@ -23,7 +23,7 @@
 
 #!/usr/bin/python
 
-import read_kdf
+from . import read_kdf
 import tables
 import os
 import sys
--- ./PYME.io.FileUtils/batchConvertKdf.py	(original)
+++ ./PYME.io.FileUtils/batchConvertKdf.py	(refactored)
@@ -24,7 +24,7 @@
 import sys
 import os
 
-import KdfStackToHdf5
+from . import KdfStackToHdf5
 
 
 if __name__ == '__main__':
--- ./PYME.io.FileUtils/h5r-thumbnailer.py	(original)
+++ ./PYME.io.FileUtils/h5r-thumbnailer.py	(refactored)
@@ -48,7 +48,7 @@
 
     #print f1.keys()
 
-    if 'fitResults_Ag' in f1.keys():
+    if 'fitResults_Ag' in list(f1.keys()):
         #if we used the splitter set up a mapping so we can filter on total amplitude and ratio
         f1_ = inpFilt.mappingFilter(f1, A='fitResults_Ag + fitResults_Ar', gFrac='fitResults_Ag/(fitResults_Ag + fitResults_Ar)')
         #f2 = inpFilt.resultsFilter(f1_, error_x=[0,30], A=[5, 1e5], sig=[100/2.35, 350/2.35])
@@ -56,12 +56,12 @@
     else:
         f1_ = f1
         
-    if 'fitResults_sigma' in f1.keys():
+    if 'fitResults_sigma' in list(f1.keys()):
         f2 = inpFilt.resultsFilter(f1_, error_x=[0,30], A=[5, 1e5], sig=[100/2.35, 350/2.35])
     else:
         f2 = inpFilt.resultsFilter(f1_, error_x=[0,30], A=[5, 1e5])
 
-    if 'fitResults_z0' in f1_.keys():
+    if 'fitResults_z0' in list(f1_.keys()):
         threeD = True
 
     if 'Events' in dir(f1.h5f.root):
--- ./PYME.io.FileUtils/h5rToTxt.py	(original)
+++ ./PYME.io.FileUtils/h5rToTxt.py	(refactored)
@@ -29,7 +29,7 @@
 def convertFile(inFile, outFile):
     ds = inpFilt.h5rSource(inFile)
 
-    nRecords = len(ds[ds.keys()[0]])
+    nRecords = len(ds[list(ds.keys())[0]])
 
     of = open(outFile, 'w')
 
@@ -43,7 +43,7 @@
 
 def saveFilter(ds, outFile, keys = None):
     if keys == None:
-        keys = ds.keys()
+        keys = list(ds.keys())
 
     #nRecords = len(ds[keys[0]])
 
--- ./PYME.io.FileUtils/kdfToFloat32Tiff.py	(original)
+++ ./PYME.io.FileUtils/kdfToFloat32Tiff.py	(refactored)
@@ -22,7 +22,7 @@
 ##################
 
 import Image
-import read_kdf
+from . import read_kdf
 
 if not (len(sys.argv) == 3):
     raise RuntimeError('Usage: procStack inDir resDir')
--- ./PYME.io.FileUtils/kdfToImage.py	(original)
+++ ./PYME.io.FileUtils/kdfToImage.py	(refactored)
@@ -22,7 +22,7 @@
 ##################
 
 import Image
-import read_kdf
+from . import read_kdf
 import sys
 
 if not (len(sys.argv) == 3):
--- ./PYME.io.FileUtils/nameUtils.py	(original)
+++ ./PYME.io.FileUtils/nameUtils.py	(refactored)
@@ -45,15 +45,15 @@
 dtn = datetime.datetime.now()
 
 homedir = os.path.expanduser('~') #unix & possibly others ...
-if 'USERPROFILE' in os.environ.keys(): #windows
+if 'USERPROFILE' in list(os.environ.keys()): #windows
     homedir = os.environ['USERPROFILE']
 
 datadir = os.path.join(homedir, 'PYMEData')
-if 'PYMEDATADIR' in os.environ.keys() and os.access(os.environ['PYMEDATADIR'], os.W_OK):
+if 'PYMEDATADIR' in list(os.environ.keys()) and os.access(os.environ['PYMEDATADIR'], os.W_OK):
     datadir = os.environ['PYMEDATADIR']
 
 dirSuffix=''
-if 'PYMEDIRSUFFIX' in os.environ.keys():
+if 'PYMEDIRSUFFIX' in list(os.environ.keys()):
     dirSuffix = '_' + os.environ['PYMEDIRSUFFIX']
 
         
--- ./PYME.io.FileUtils/sf-thumbnailer.py	(original)
+++ ./PYME.io.FileUtils/sf-thumbnailer.py	(refactored)
@@ -30,7 +30,7 @@
 import sys
 import gnomevfs
 
-import cPickle
+import pickle
 
 import matplotlib
 matplotlib.use('Agg')
@@ -50,7 +50,7 @@
 
 #def generateThumbnail(inputFile, thumbsize):
 fid = open(inputFile)
-spx, spy = cPickle.load(fid)
+spx, spy = pickle.load(fid)
 fid.close()
 
 f = figure(figsize=(thumbSize/dpi, 0.5*thumbSize/dpi))
--- ./PYME.io.FileUtils/thumbnailDatabase.py	(original)
+++ ./PYME.io.FileUtils/thumbnailDatabase.py	(refactored)
@@ -22,7 +22,7 @@
 ##################
 
 import sqlite3
-import cPickle as pickle
+import pickle as pickle
 import os
 import zlib
 from numpy import ndarray
@@ -73,7 +73,7 @@
     if ret == None:
         ext = os.path.splitext(filename)[-1]
 
-        if ext in thumbnailers.keys():
+        if ext in list(thumbnailers.keys()):
             #print ext
             #try:
             #thumbMod = __import__(thumbnailers[ext])
--- ./PYME/PSFEst/psfQuality.py	(original)
+++ ./PYME/PSFEst/psfQuality.py	(refactored)
@@ -195,11 +195,11 @@
 
     loc_res = {}
     
-    for k, v in localisation_tests.items():
+    for k, v in list(localisation_tests.items()):
         loc_res[k] = v(image, psft)
         
     dec_res = {}
-    for k, v in deconvolution_tests.items():
+    for k, v in list(deconvolution_tests.items()):
         dec_res[k] = v(image, psft)
         
     return loc_res, dec_res
--- ./PYME/PSFGen/__init__.py	(original)
+++ ./PYME/PSFGen/__init__.py	(refactored)
@@ -21,4 +21,4 @@
 #
 ##################
 
-from ps_app import *
+from .ps_app import *
--- ./PYME/PSFGen/fourierHNA.py	(original)
+++ ./PYME/PSFGen/fourierHNA.py	(refactored)
@@ -438,7 +438,7 @@
 def GenSAAstigPSF(zs, dx=5, strength=1.0, SA=0, X=None, Y=None, lamb=700, n=1.51, NA = 1.47):
     from PYME.misc import zernike
     Xk = X.ctypes.data
-    if not Xk in fps.keys():
+    if not Xk in list(fps.keys()):
         fpset = GenWidefieldAP(dx, X, Y, lamb=lamb, n=n, NA = NA)
         X, Y, R, FP, F, u, v = fpset
         r = R/R[abs(F)>0].max()
@@ -468,7 +468,7 @@
 def GenSAPRIPSF(zs, dx=5, strength=1.0, SA=0, X=None, Y=None, lamb=700, n=1.51, NA = 1.47):
     from PYME.misc import zernike
     Xk = X.ctypes.data
-    if not Xk in fps.keys():
+    if not Xk in list(fps.keys()):
         fpset = GenWidefieldAP(dx, X, Y, lamb=lamb, n=n, NA = NA)
         fps[Xk] = fpset
     else:
--- ./PYME/PSFGen/genCRBcurves.py	(original)
+++ ./PYME/PSFGen/genCRBcurves.py	(refactored)
@@ -22,7 +22,7 @@
 ##################
 from pylab import *
 
-import fourierHNA
+from . import fourierHNA
 from PYME.Analysis import cramerRao
 
 
--- ./PYME/PSFGen/nijboer_zernike.py	(original)
+++ ./PYME/PSFGen/nijboer_zernike.py	(refactored)
@@ -56,9 +56,9 @@
     
     s1 = em*np.exp(1j*f)
     
-    for l in xrange(1, lmax):
+    for l in range(1, lmax):
         t1 = 0*r
-        for j in xrange(p + 1):
+        for j in range(p + 1):
             t1 += vlj(l,j,m_a,p, q)*jn(m_a + l + 2*j, mu)/(l*mu**l)
             
         V+= ((-2j*f)**(l-1))*t1
--- ./PYME/PSFGen/test_ps_app.py	(original)
+++ ./PYME/PSFGen/test_ps_app.py	(refactored)
@@ -11,7 +11,7 @@
 
 
 import numpy as np
-import ps_app
+from . import ps_app
 
 
 def test_ps_app():
--- ./PYME/ParallelTasks/HDFTaskQueue.py	(original)
+++ ./PYME/ParallelTasks/HDFTaskQueue.py	(refactored)
@@ -22,7 +22,7 @@
 ##################
 
 import tables
-from taskQueue import *
+from .taskQueue import *
 from PYME.Analysis.remFitBuf import fitTask
 
 from PYME.Analysis import MetaData
@@ -35,7 +35,7 @@
 import logging
 
 import time
-import Queue
+import queue
 
 from PYME.io.FileUtils.nameUtils import genResultFileName
 from PYME.ParallelTasks.relativeFiles import getFullFilename
@@ -87,7 +87,7 @@
         global bufferMisses
         #print self.bufferedSlices, self.insertAt, ind
         #return self.dataSource.getSlice(ind)
-        if ind in self.bufferedSlices.keys(): #return from buffer
+        if ind in list(self.bufferedSlices.keys()): #return from buffer
             #print int(numpy.where(self.bufferedSlices == ind)[0])
             return self.buffer[ind]
         else: #get from our data source and store in buffer
@@ -642,7 +642,7 @@
         taskNum = self.openTasks.pop(self.fTaskToPop(workerN, NWorkers, len(self.openTasks)))
 
         #if 'Analysis.BGRange' in self.metaData.getEntryNames():
-        bgi = range(max(taskNum + self.metaData.Analysis.BGRange[0],self.metaData.EstimatedLaserOnFrameNo), max(taskNum + self.metaData.Analysis.BGRange[1],self.metaData.EstimatedLaserOnFrameNo))
+        bgi = list(range(max(taskNum + self.metaData.Analysis.BGRange[0],self.metaData.EstimatedLaserOnFrameNo), max(taskNum + self.metaData.Analysis.BGRange[1],self.metaData.EstimatedLaserOnFrameNo)))
         #elif 'Analysis.NumBGFrames' in self.metaData.getEntryNames():
         #    bgi = range(max(taskNum - self.metaData.Analysis.NumBGFrames,self.metaData.EstimatedLaserOnFrameNo), taskNum)
         #else:
@@ -695,7 +695,7 @@
             taskNum = self.openTasks.pop(self.fTaskToPop(workerN, NWorkers, len(self.openTasks)))
 
             #if 'Analysis.BGRange' in self.metaData.getEntryNames():
-            bgi = range(max(taskNum + self.metaData.Analysis.BGRange[0],self.metaData.EstimatedLaserOnFrameNo), max(taskNum + self.metaData.Analysis.BGRange[1],self.metaData.EstimatedLaserOnFrameNo))
+            bgi = list(range(max(taskNum + self.metaData.Analysis.BGRange[0],self.metaData.EstimatedLaserOnFrameNo), max(taskNum + self.metaData.Analysis.BGRange[1],self.metaData.EstimatedLaserOnFrameNo)))
             #elif 'Analysis.NumBGFrames' in self.metaData.getEntryNames():
             #    bgi = range(max(taskNum - self.metaData.Analysis.NumBGFrames,self.metaData.EstimatedLaserOnFrameNo), taskNum)
             #else:
@@ -814,5 +814,5 @@
 
 
     def releaseTasks(self, startingAt = 0):
-        self.openTasks += range(startingAt, self.imNum)
+        self.openTasks += list(range(startingAt, self.imNum))
         self.releaseNewTasks = True
--- ./PYME/ParallelTasks/fitMon.py	(original)
+++ ./PYME/ParallelTasks/fitMon.py	(refactored)
@@ -32,10 +32,10 @@
 import time
 import os
 
-if 'PYRO_NS_HOSTNAME' in os.environ.keys():
+if 'PYRO_NS_HOSTNAME' in list(os.environ.keys()):
     Pyro.config.PYRO_NS_HOSTNAME=os.environ['PYRO_NS_HOSTNAME']
 
-if 'PYME_TASKQUEUENAME' in os.environ.keys():
+if 'PYME_TASKQUEUENAME' in list(os.environ.keys()):
     taskQueueName = os.environ['PYME_TASKQUEUENAME']
 else:
     taskQueueName = 'taskQueue'
@@ -154,7 +154,7 @@
             nt = self.tq.getNumTasksProcessed(workers[i])
             #print nt
             self.gWorkers.SetCellValue(i, 1, '%d' % nt)
-            if workers[i] in self.workerProc.keys():
+            if workers[i] in list(self.workerProc.keys()):
                 fps =  (nt - self.workerProc[workers[i]])/dt
                 self.gWorkers.SetCellValue(i, 2, '%3.3f' % fps)
             self.workerProc[workers[i]] = nt
@@ -164,7 +164,7 @@
         nt = self.tq.getNumTasksProcessed()
         #print nt
         self.gWorkers.SetCellValue(n -1, 1, '%d' % nt)
-        if 'Total' in self.workerProc.keys():   
+        if 'Total' in list(self.workerProc.keys()):   
             self.gWorkers.SetCellValue(n - 1, 2, '%3.3f' % ((nt - int(self.workerProc['Total']))/dt,))
         self.workerProc['Total'] = nt
 
--- ./PYME/ParallelTasks/fitMonP.py	(original)
+++ ./PYME/ParallelTasks/fitMonP.py	(refactored)
@@ -35,7 +35,7 @@
 from PYME.misc.computerName import GetComputerName
 compName = GetComputerName()
 
-if 'PYRO_NS_HOSTNAME' in os.environ.keys():
+if 'PYRO_NS_HOSTNAME' in list(os.environ.keys()):
     Pyro.config.PYRO_NS_HOSTNAME=os.environ['PYRO_NS_HOSTNAME']
 
 #if 'PYME_TASKQUEUENAME' in os.environ.keys():
@@ -163,7 +163,7 @@
             nt = self.tq.getNumTasksProcessed(workers[i])
             #print nt
             self.gWorkers.SetCellValue(i, 1, '%d' % nt)
-            if workers[i] in self.workerProc.keys():
+            if workers[i] in list(self.workerProc.keys()):
                 fps =  (nt - self.workerProc[workers[i]])/dt
                 self.gWorkers.SetCellValue(i, 2, '%3.3f' % fps)
             self.workerProc[workers[i]] = nt
@@ -175,7 +175,7 @@
         nt = self.tq.getNumTasksProcessed()
         #print nt
         self.gWorkers.SetCellValue(n -1, 1, '%d' % nt)
-        if 'Total' in self.workerProc.keys():   
+        if 'Total' in list(self.workerProc.keys()):   
             self.gWorkers.SetCellValue(n - 1, 2, '%3.3f' % ((nt - int(self.workerProc['Total']))/dt,))
         self.workerProc['Total'] = nt
 
--- ./PYME/ParallelTasks/hdfWatcher.py	(original)
+++ ./PYME/ParallelTasks/hdfWatcher.py	(refactored)
@@ -49,7 +49,7 @@
     if l > curpos:
         for i in range(curpos, l):
             print(i)
-            tq.postTask(remFitHDF.fitTask(seriesName,i, thresh, MetaData.TIRFDefault, 'LatGaussFitF', bgindices=range(max(i-10, 0),i), SNThreshold=True), queueName=seriesName)
+            tq.postTask(remFitHDF.fitTask(seriesName,i, thresh, MetaData.TIRFDefault, 'LatGaussFitF', bgindices=list(range(max(i-10, 0),i)), SNThreshold=True), queueName=seriesName)
             
     if 'EndTime' in h5file.root.MetaData._v_attrs:
         break
--- ./PYME/ParallelTasks/relativeFiles.py	(original)
+++ ./PYME/ParallelTasks/relativeFiles.py	(refactored)
@@ -43,7 +43,7 @@
     assumes path is absolute.'''
     relFilename = translateSeparators(relFilename)
 
-    if 'PYMEDATADIR' in os.environ.keys():
+    if 'PYMEDATADIR' in list(os.environ.keys()):
         return os.path.join(os.environ['PYMEDATADIR'], relFilename)
     else:
         return relFilename
@@ -73,7 +73,7 @@
         filename= os.path.abspath(filename)
 
     #print filename
-    if 'PYMEDATADIR' in os.environ.keys():
+    if 'PYMEDATADIR' in list(os.environ.keys()):
         dataDir = os.environ['PYMEDATADIR']
         if not dataDir[-1] in [os.sep, os.altsep]:
             dataDir = dataDir + os.sep
--- ./PYME/ParallelTasks/taskServerM.py	(original)
+++ ./PYME/ParallelTasks/taskServerM.py	(refactored)
@@ -28,19 +28,19 @@
 import random
 import threading
 import numpy
-from taskQueue import *
-from HDFTaskQueue import *
+from .taskQueue import *
+from .HDFTaskQueue import *
 
 import os
 
-if 'PYRO_NS_HOSTNAME' in os.environ.keys():
+if 'PYRO_NS_HOSTNAME' in list(os.environ.keys()):
     Pyro.config.PYRO_NS_HOSTNAME=os.environ['PYRO_NS_HOSTNAME']
     print((Pyro.config.PYRO_NS_HOSTNAME))
 
 #from PYME.mProfile import mProfile
 #mProfile.profileOn(['taskServerM.py', 'HDFTaskQueue.py'])
 
-if 'PYME_TASKQUEUENAME' in os.environ.keys():
+if 'PYME_TASKQUEUENAME' in list(os.environ.keys()):
     taskQueueName = os.environ['PYME_TASKQUEUENAME']
 else:
     taskQueueName = 'taskQueue'
@@ -83,13 +83,13 @@
 
     def postTask(self, task, queueName='Default'):
         #print queueName
-        if not queueName in self.taskQueues.keys():
+        if not queueName in list(self.taskQueues.keys()):
             self.taskQueues[queueName] = TaskQueue(queueName)
 
         self.taskQueues[queueName].postTask(task)
 
     def postTasks(self, tasks, queueName='Default'):
-        if not queueName in self.taskQueues.keys():
+        if not queueName in list(self.taskQueues.keys()):
             self.taskQueues[queueName] = TaskQueue(queueName)
 
         self.taskQueues[queueName].postTasks(tasks)
@@ -104,7 +104,7 @@
         if not workerName in self.activeWorkers:
             self.activeWorkers.append(workerName)
             
-        queuesWithOpenTasks = [q for q in self.taskQueues.values() if q.getNumberOpenTasks() > 0]
+        queuesWithOpenTasks = [q for q in list(self.taskQueues.values()) if q.getNumberOpenTasks() > 0]
 
         res = queuesWithOpenTasks[int(numpy.round(len(queuesWithOpenTasks)*numpy.random.rand() - 0.5))].getTask(self.activeWorkers.index(workerName), len(self.activeWorkers))
         self.getTaskLock.release()
@@ -120,7 +120,7 @@
         if not workerName in self.activeWorkers:
             self.activeWorkers.append(workerName)
 
-        queuesWithOpenTasks = [q for q in self.taskQueues.values() if q.getNumberOpenTasks() > 0]
+        queuesWithOpenTasks = [q for q in list(self.taskQueues.values()) if q.getNumberOpenTasks() > 0]
 
         res = queuesWithOpenTasks[int(numpy.round(len(queuesWithOpenTasks)*numpy.random.rand() - 0.5))].getTasks(self.activeWorkers.index(workerName), len(self.activeWorkers))
         self.getTaskLock.release()
@@ -129,7 +129,7 @@
     def returnCompletedTask(self, taskResult, workerName='Unspecified'):
         self.taskQueues[taskResult.queueID].returnCompletedTask(taskResult)
         self.numTasksProcessed += 1
-        if not workerName in self.numTasksProcByWorker.keys():
+        if not workerName in list(self.numTasksProcByWorker.keys()):
             self.numTasksProcByWorker[workerName] = 0
 
         self.numTasksProcByWorker[workerName] += 1
@@ -138,32 +138,32 @@
     def returnCompletedTasks(self, taskResult, workerName='Unspecified'):
         self.taskQueues[taskResult[0].queueID].returnCompletedTasks(taskResult)
         self.numTasksProcessed += len(taskResult)
-        if not workerName in self.numTasksProcByWorker.keys():
+        if not workerName in list(self.numTasksProcByWorker.keys()):
             self.numTasksProcByWorker[workerName] = 0
 
         self.numTasksProcByWorker[workerName] += len(taskResult)
         self.lastTaskByWorker[workerName] = time.time()
 
     def getCompletedTask(self, queueName = 'Default'):
-        if not queueName in self.taskQueues.keys():
+        if not queueName in list(self.taskQueues.keys()):
             return None
         else:
             return self.taskQueues[queueName].getCompletedTask()
 
     def checkTimeouts(self):
-        for q in self.taskQueues.values():
+        for q in list(self.taskQueues.values()):
             q.checkTimeouts()
 
         t = time.time()
         for w in self.activeWorkers:
-            if self.lastTaskByWorker.has_key(w) and self.lastTaskByWorker[w] < (t - self.activeTimeout):
+            if w in self.lastTaskByWorker and self.lastTaskByWorker[w] < (t - self.activeTimeout):
                 self.activeWorkers.remove(w)
 
     def getNumberOpenTasks(self, queueName = None):
         #print queueName
         if queueName == None:
             nO = 0
-            for q in self.taskQueues.values():
+            for q in list(self.taskQueues.values()):
                 nO += q.getNumberOpenTasks()
             return nO
         else:
@@ -172,7 +172,7 @@
     def getNumberTasksInProgress(self, queueName = None):
         if queueName == None:
             nP = 0
-            for q in self.taskQueues.values():
+            for q in list(self.taskQueues.values()):
                 nP += q.getNumberTasksInProgress()
             return nP
         else:
@@ -181,14 +181,14 @@
     def getNumberTasksCompleted(self, queueName = None):
         if queueName == None:
             nC = 0
-            for q in self.taskQueues.values():
+            for q in list(self.taskQueues.values()):
                 nC += q.getNumberTasksCompleted()
             return nC
         else:
             return self.taskQueues[queueName].getNumberTasksCompleted()
 
     def purge(self, queueName = 'Default'):
-        if queueName in self.taskQueues.keys():
+        if queueName in list(self.taskQueues.keys()):
             self.taskQueues[queueName].purge()
 
     def removeQueue(self, queueName):
@@ -202,10 +202,10 @@
             return self.numTasksProcByWorker[workerName]
 
     def getWorkerNames(self):
-        return self.numTasksProcByWorker.keys()
+        return list(self.numTasksProcByWorker.keys())
 
     def getQueueNames(self):
-        return self.taskQueues.keys()
+        return list(self.taskQueues.keys())
 
     def setPopFcn(self, queueName, fcn):
         self.taskQueues[queueName].setPopFcn(fcn)
@@ -243,7 +243,7 @@
         return self.taskQueues[queueName].releaseTasks(*args)
 
     def createQueue(self, queueType, queueName, *args, **kwargs):
-        if queueName in self.taskQueues.keys():
+        if queueName in list(self.taskQueues.keys()):
             raise RuntimeError('queue with same name already present')
 
         self.taskQueues[queueName] = eval(queueType)(queueName, *args, **kwargs)
--- ./PYME/ParallelTasks/taskServerML.py	(original)
+++ ./PYME/ParallelTasks/taskServerML.py	(refactored)
@@ -11,7 +11,7 @@
 ##################
 
 
-from taskServerMP import *
+from .taskServerMP import *
 taskQueueName = 'PrivateTaskQueues.%s' % compName
 def main():
     print('foo')
--- ./PYME/ParallelTasks/taskServerMP.py	(original)
+++ ./PYME/ParallelTasks/taskServerMP.py	(refactored)
@@ -28,8 +28,8 @@
 import random
 import threading
 import numpy
-from taskQueue import *
-from HDFTaskQueue import *
+from .taskQueue import *
+from .HDFTaskQueue import *
 
 import logging
 logging.basicConfig(level=logging.DEBUG)
@@ -40,7 +40,7 @@
 from PYME.misc.computerName import GetComputerName
 compName = GetComputerName()
 
-if 'PYRO_NS_HOSTNAME' in os.environ.keys():
+if 'PYRO_NS_HOSTNAME' in list(os.environ.keys()):
     Pyro.config.PYRO_NS_HOSTNAME=os.environ['PYRO_NS_HOSTNAME']
     print((Pyro.config.PYRO_NS_HOSTNAME))
 
@@ -101,13 +101,13 @@
 
     def postTask(self, task, queueName='Default'):
         #print queueName
-        if not queueName in self.taskQueues.keys():
+        if not queueName in list(self.taskQueues.keys()):
             self.taskQueues[queueName] = TaskQueue(queueName)
 
         self.taskQueues[queueName].postTask(task)
 
     def postTasks(self, tasks, queueName='Default'):
-        if not queueName in self.taskQueues.keys():
+        if not queueName in list(self.taskQueues.keys()):
             self.taskQueues[queueName] = TaskQueue(queueName)
 
         self.taskQueues[queueName].postTasks(tasks)
@@ -122,7 +122,7 @@
             if not workerName in self.activeWorkers:
                 self.activeWorkers.append(workerName)
                 
-            queuesWithOpenTasks = [q for q in self.taskQueues.values() if q.getNumberOpenTasks() > 0]
+            queuesWithOpenTasks = [q for q in list(self.taskQueues.values()) if q.getNumberOpenTasks() > 0]
     
             res = queuesWithOpenTasks[int(numpy.round(len(queuesWithOpenTasks)*numpy.random.rand() - 0.5))].getTask(self.activeWorkers.index(workerName), len(self.activeWorkers))
         
@@ -142,7 +142,7 @@
                 if not workerName in self.activeWorkers:
                     self.activeWorkers.append(workerName)
     
-                queuesWithOpenTasks = [q for q in self.taskQueues.values() if q.getNumberOpenTasks(False) > 0]
+                queuesWithOpenTasks = [q for q in list(self.taskQueues.values()) if q.getNumberOpenTasks(False) > 0]
     
                 res = queuesWithOpenTasks[int(numpy.round(len(queuesWithOpenTasks)*numpy.random.rand() - 0.5))].getTasks(self.activeWorkers.index(workerName), len(self.activeWorkers))
         
@@ -153,7 +153,7 @@
     def returnCompletedTask(self, taskResult, workerName='Unspecified', timeTaken=None):
         self.taskQueues[taskResult.queueID].returnCompletedTask(taskResult)
         self.numTasksProcessed += 1
-        if not workerName in self.numTasksProcByWorker.keys():
+        if not workerName in list(self.numTasksProcByWorker.keys()):
             self.numTasksProcByWorker[workerName] = 0
 
         self.numTasksProcByWorker[workerName] += 1
@@ -166,7 +166,7 @@
     def returnCompletedTasks(self, taskResult, workerName='Unspecified', timeTaken=None):
         self.taskQueues[taskResult[0].queueID].returnCompletedTasks(taskResult)
         self.numTasksProcessed += len(taskResult)
-        if not workerName in self.numTasksProcByWorker.keys():
+        if not workerName in list(self.numTasksProcByWorker.keys()):
             self.numTasksProcByWorker[workerName] = 0
 
         self.numTasksProcByWorker[workerName] += len(taskResult)
@@ -179,25 +179,25 @@
 
 
     def getCompletedTask(self, queueName = 'Default'):
-        if not queueName in self.taskQueues.keys():
+        if not queueName in list(self.taskQueues.keys()):
             return None
         else:
             return self.taskQueues[queueName].getCompletedTask()
 
     def checkTimeouts(self):
-        for q in self.taskQueues.values():
+        for q in list(self.taskQueues.values()):
             q.checkTimeouts()
 
         t = time.time()
         for w in self.activeWorkers:
-            if self.lastTaskByWorker.has_key(w) and self.lastTaskByWorker[w] < (t - self.activeTimeout):
+            if w in self.lastTaskByWorker and self.lastTaskByWorker[w] < (t - self.activeTimeout):
                 self.activeWorkers.remove(w)
 
     def getNumberOpenTasks(self, queueName = None, exact=True):
         #print queueName
         if queueName == None:
             nO = 0
-            for q in self.taskQueues.values():
+            for q in list(self.taskQueues.values()):
                 nO += q.getNumberOpenTasks(exact)
             return nO
         else:
@@ -206,7 +206,7 @@
     def getNumberTasksInProgress(self, queueName = None):
         if queueName == None:
             nP = 0
-            for q in self.taskQueues.values():
+            for q in list(self.taskQueues.values()):
                 nP += q.getNumberTasksInProgress()
             return nP
         else:
@@ -215,14 +215,14 @@
     def getNumberTasksCompleted(self, queueName = None):
         if queueName == None:
             nC = 0
-            for q in self.taskQueues.values():
+            for q in list(self.taskQueues.values()):
                 nC += q.getNumberTasksCompleted()
             return nC
         else:
             return self.taskQueues[queueName].getNumberTasksCompleted()
 
     def purge(self, queueName = 'Default'):
-        if queueName in self.taskQueues.keys():
+        if queueName in list(self.taskQueues.keys()):
             self.taskQueues[queueName].purge()
 
     def removeQueue(self, queueName):
@@ -236,7 +236,7 @@
             return self.numTasksProcByWorker[workerName]
 
     def getWorkerNames(self):
-        return self.numTasksProcByWorker.keys()
+        return list(self.numTasksProcByWorker.keys())
 
     def getWorkerFPS(self, workerName):
         if workerName in self.activeWorkers and not self.lastTimeByWorker[workerName] == None:
@@ -245,7 +245,7 @@
             return 0
 
     def getQueueNames(self):
-        return self.taskQueues.keys()
+        return list(self.taskQueues.keys())
 
     def setPopFcn(self, queueName, fcn):
         self.taskQueues[queueName].setPopFcn(fcn)
@@ -283,7 +283,7 @@
         return self.taskQueues[queueName].releaseTasks(*args)
 
     def createQueue(self, queueType, queueName, *args, **kwargs):
-        if queueName in self.taskQueues.keys():
+        if queueName in list(self.taskQueues.keys()):
             raise RuntimeError('queue with same name already present')
 
         self.taskQueues[queueName] = eval(queueType)(queueName, *args, **kwargs)
--- ./PYME/ParallelTasks/taskWorkerM.py	(original)
+++ ./PYME/ParallelTasks/taskWorkerM.py	(refactored)
@@ -25,12 +25,12 @@
 import os
 import sys
 
-if 'PYRO_NS_HOSTNAME' in os.environ.keys():
+if 'PYRO_NS_HOSTNAME' in list(os.environ.keys()):
     Pyro.config.PYRO_NS_HOSTNAME=os.environ['PYRO_NS_HOSTNAME']
 
 Pyro.config.PYRO_MOBILE_CODE=1
 
-if 'PYME_TASKQUEUENAME' in os.environ.keys():
+if 'PYME_TASKQUEUENAME' in list(os.environ.keys()):
     taskQueueName = os.environ['PYME_TASKQUEUENAME']
 else:
     taskQueueName = 'taskQueue'
--- ./PYME/ParallelTasks/taskWorkerML.py	(original)
+++ ./PYME/ParallelTasks/taskWorkerML.py	(refactored)
@@ -32,7 +32,7 @@
 from PYME.misc.computerName import GetComputerName
 compName = GetComputerName()
 
-if 'PYRO_NS_HOSTNAME' in os.environ.keys():
+if 'PYRO_NS_HOSTNAME' in list(os.environ.keys()):
     Pyro.config.PYRO_NS_HOSTNAME=os.environ['PYRO_NS_HOSTNAME']
 
 Pyro.config.PYRO_MOBILE_CODE=0
@@ -83,7 +83,7 @@
             if e.message == 'connection failed':
                 #remember that the server failed - and put it 'on notice'
                 nFails = 1
-                if qName in serverFails.keys():
+                if qName in list(serverFails.keys()):
                     nFails += serverFails[qName]
 
                 serverFails[qName] = nFails
--- ./PYME/ParallelTasks/taskWorkerMP.py	(original)
+++ ./PYME/ParallelTasks/taskWorkerMP.py	(refactored)
@@ -32,7 +32,7 @@
 from PYME.misc.computerName import GetComputerName
 compName = GetComputerName()
 
-if 'PYRO_NS_HOSTNAME' in os.environ.keys():
+if 'PYRO_NS_HOSTNAME' in list(os.environ.keys()):
     Pyro.config.PYRO_NS_HOSTNAME=os.environ['PYRO_NS_HOSTNAME']
 
 Pyro.config.PYRO_MOBILE_CODE=0
@@ -85,7 +85,7 @@
             if e.message == 'connection failed':
                 #remember that the server failed - and put it 'on notice'
                 nFails = 1
-                if qName in serverFails.keys():
+                if qName in list(serverFails.keys()):
                     nFails += serverFails[qName]
 
                 serverFails[qName] = nFails
--- ./PYME/ParallelTasks/taskWorkerMPP.py	(original)
+++ ./PYME/ParallelTasks/taskWorkerMPP.py	(refactored)
@@ -36,7 +36,7 @@
 from PYME.misc.computerName import GetComputerName
 compName = GetComputerName()
 
-if 'PYRO_NS_HOSTNAME' in os.environ.keys():
+if 'PYRO_NS_HOSTNAME' in list(os.environ.keys()):
     Pyro.config.PYRO_NS_HOSTNAME=os.environ['PYRO_NS_HOSTNAME']
 
 Pyro.config.PYRO_MOBILE_CODE=0
--- ./PYME/ParallelTasks/taskWorkerMS.py	(original)
+++ ./PYME/ParallelTasks/taskWorkerMS.py	(refactored)
@@ -26,12 +26,12 @@
 import os
 import sys
 
-if 'PYRO_NS_HOSTNAME' in os.environ.keys():
+if 'PYRO_NS_HOSTNAME' in list(os.environ.keys()):
     Pyro.config.PYRO_NS_HOSTNAME=os.environ['PYRO_NS_HOSTNAME']
 
 Pyro.config.PYRO_MOBILE_CODE=1
 
-if 'PYME_TASKQUEUENAME' in os.environ.keys():
+if 'PYME_TASKQUEUENAME' in list(os.environ.keys()):
     taskQueueName = os.environ['PYME_TASKQUEUENAME']
 else:
     taskQueueName = 'taskQueue'
--- ./PYME/ParallelTasks/taskWorkerP.py	(original)
+++ ./PYME/ParallelTasks/taskWorkerP.py	(refactored)
@@ -28,8 +28,8 @@
 import random
 import threading
 import numpy
-from taskQueue import *
-from HDFTaskQueue import *
+from .taskQueue import *
+from .HDFTaskQueue import *
 
 import os
 import sys
--- ./PYME/ParallelTasks/Loft/WorkerApp.py	(original)
+++ ./PYME/ParallelTasks/Loft/WorkerApp.py	(refactored)
@@ -28,7 +28,7 @@
 
 import WorkerFrame
 
-modules ={u'WorkerFrame': [1, 'Main frame of Application', u'WorkerFrame.py']}
+modules ={'WorkerFrame': [1, 'Main frame of Application', 'WorkerFrame.py']}
 
 class BoaApp(wx.App):
     def OnInit(self):
--- ./PYME/ParallelTasks/Screensaver/PYMEScreensaver.py	(original)
+++ ./PYME/ParallelTasks/Screensaver/PYMEScreensaver.py	(refactored)
@@ -106,23 +106,23 @@
 
         w,h = self.dc.getSize()
         
-        self.dc.setColor(0xffffffL)
-        self.dc.setTextColor(0x00ff00L)
-        self.dc.setBgColor(0x000000L)
+        self.dc.setColor(0xffffff)
+        self.dc.setTextColor(0x00ff00)
+        self.dc.setBgColor(0x000000)
         self.dc.setFont("courier new")
         #~ self.dc.setBgTransparent(True)
         #self.dc.drawLine((0+self.x, 0), (self.x*5, 50))
         self.dc.drawText((100,50), "Your computer has been assimilated into the...")
-        self.dc.setTextColor(0xffffffL)
+        self.dc.setTextColor(0xffffff)
         self.dc.setFont("arial", 50, bold=True)
         self.dc.drawText((w/2 - 300,100), "PYthon Microscopy Environment")
-        self.dc.setTextColor(0xff4f3fL)
+        self.dc.setTextColor(0xff4f3f)
         self.dc.setFont("arial", 250, bold=True)
         self.dc.drawText((w/2 - 250,150), "PYME")
-        self.dc.setTextColor(0xffffffL)
+        self.dc.setTextColor(0xffffff)
         self.dc.setFont("arial", 50, bold=True)
         self.dc.drawText((w/2 - 300,400), "Distributed Data Analysis Collective")
-        self.dc.setTextColor(0x00ff00L)
+        self.dc.setTextColor(0x00ff00)
         self.dc.setFont("courier new")
         self.dc.drawText((100,470), "To exit move mouse or press a key")
         self.dc.drawText((100,490), "Queries: d.baddeley@auckland.ac.nz")
--- ./PYME/ParallelTasks/Screensaver/pyscr.py	(original)
+++ ./PYME/ParallelTasks/Screensaver/pyscr.py	(refactored)
@@ -20,7 +20,7 @@
 This is distributed under a free software license, see license.txt.
 """
 
-import sys, traceback, StringIO
+import sys, traceback, io
 from ctypes import *
 from winuser import*
 from wingdi import *
@@ -95,7 +95,7 @@
                 self.initialize()
             except:
                 PostMessage(self.hWnd, WM_CLOSE, 0, 0)
-                exinfo = StringIO.StringIO()
+                exinfo = io.StringIO()
                 traceback.print_exc(file=exinfo)
                 print(("-"*78))
                 print("Exception in users initialiaztion code:")
@@ -284,7 +284,7 @@
     is there it's random which one is used... so only define one per file."""
     
     import __main__
-    for name, value in __main__.__dict__.items():
+    for name, value in list(__main__.__dict__.items()):
         if type(value) == type(Screensaver) and issubclass(value, Screensaver):
             saver = value()
             break
--- ./PYME/ParallelTasks/Screensaver/taskWorkerME.py	(original)
+++ ./PYME/ParallelTasks/Screensaver/taskWorkerME.py	(refactored)
@@ -41,7 +41,7 @@
 from PYME.misc.computerName import GetComputerName
 compName = GetComputerName()
 
-if 'PYRO_NS_HOSTNAME' in os.environ.keys():
+if 'PYRO_NS_HOSTNAME' in list(os.environ.keys()):
     Pyro.config.PYRO_NS_HOSTNAME=os.environ['PYRO_NS_HOSTNAME']
 
 Pyro.config.PYRO_MOBILE_CODE=0
--- ./PYME/ParallelTasks/Screensaver/windc.py	(original)
+++ ./PYME/ParallelTasks/Screensaver/windc.py	(refactored)
@@ -48,24 +48,33 @@
     # drawing functions
     #------------------------------------------------------------------------
     
-    def drawLine(self, (x1,y1), (x2,y2)):
+    def drawLine(self, xxx_todo_changeme, xxx_todo_changeme1):
+        (x1,y1) = xxx_todo_changeme
+        (x2,y2) = xxx_todo_changeme1
         windll.gdi32.MoveToEx(self.dc, x1, y1, NULL)
         windll.gdi32.LineTo(self.dc, x2, y2)
 
-    def drawText(self, (x,y), text):
+    def drawText(self, xxx_todo_changeme2, text):
+        (x,y) = xxx_todo_changeme2
         windll.gdi32.TextOutA(self.dc, int(x), int(y), text, len(text))
 
-    def drawRect(self, (x1,y1), (x2,y2)):
+    def drawRect(self, xxx_todo_changeme3, xxx_todo_changeme4):
+        (x1,y1) = xxx_todo_changeme3
+        (x2,y2) = xxx_todo_changeme4
         windll.gdi32.MoveToEx(self.dc, x1, y1, NULL);
         windll.gdi32.LineTo(self.dc, x1, y2);
         windll.gdi32.LineTo(self.dc, x2, y2);
         windll.gdi32.LineTo(self.dc, x2, y1);
         windll.gdi32.LineTo(self.dc, x1, y1);
     
-    def fillRect(self, (x1,y1), (x2,y2)):
+    def fillRect(self, xxx_todo_changeme5, xxx_todo_changeme6):
+        (x1,y1) = xxx_todo_changeme5
+        (x2,y2) = xxx_todo_changeme6
         windll.gdi32.Rectangle(self.dc, x1, y1, x2, y2)
         
-    def invertRect(self, (x1,y1), (x2,y2)):
+    def invertRect(self, xxx_todo_changeme7, xxx_todo_changeme8):
+        (x1,y1) = xxx_todo_changeme7
+        (x2,y2) = xxx_todo_changeme8
         rc = RECT()
         rc.left = x1
         rc.top = y1
@@ -73,7 +82,9 @@
         rc.bottom = y2
         windll.gdi32.InvertRect(self.dc, byref(rc))
     
-    def fillEllipse(self, (x1,y1), (x2,y2)):
+    def fillEllipse(self, xxx_todo_changeme9, xxx_todo_changeme10):
+        (x1,y1) = xxx_todo_changeme9
+        (x2,y2) = xxx_todo_changeme10
         windll.gdi32.Ellipse(self.dc, x1, y1, x2, y2)
     
     
--- ./PYME/ParallelTasks/Screensaver/wingdi.py	(original)
+++ ./PYME/ParallelTasks/Screensaver/wingdi.py	(refactored)
@@ -238,7 +238,7 @@
 PFD_GENERIC_ACCELERATED = 0x00001000
 PFD_DEPTH_DONTCARE = 0x20000000
 PFD_DOUBLEBUFFER_DONTCARE = 0x40000000
-PFD_STEREO_DONTCARE = 0x80000000L
+PFD_STEREO_DONTCARE = 0x80000000
 SP_ERROR = (-1)
 SP_OUTOFDISK = (-4)
 SP_OUTOFMEMORY = (-5)
@@ -479,7 +479,7 @@
 FS_WANSUNG = 0x80000
 FS_CHINESETRAD = 0x100000
 FS_JOHAB = 0x200000
-FS_SYMBOL = 0x80000000L
+FS_SYMBOL = 0x80000000
 HS_BDIAGONAL = 3
 HS_CROSS = 4
 HS_DIAGCROSS = 5
@@ -757,9 +757,9 @@
 PC_EXPLICIT = 2
 PC_NOCOLLAPSE = 4
 PC_RESERVED = 1
-CLR_NONE = 0xffffffffL
+CLR_NONE = 0xffffffff
 CLR_INVALID = CLR_NONE
-CLR_DEFAULT = 0xff000000L
+CLR_DEFAULT = 0xff000000
 PT_MOVETO = 6
 PT_LINETO = 2
 PT_BEZIERTO = 4
@@ -1088,7 +1088,7 @@
 DMDITHER_RESERVED9 = 9
 DMDITHER_GRAYSCALE = 10
 DMDITHER_USER = 256
-GDI_ERROR = 0xFFFFFFFFL
+GDI_ERROR = 0xFFFFFFFF
 TMPF_FIXED_PITCH = 1
 TMPF_VECTOR = 2
 TMPF_TRUETYPE = 4
@@ -1100,7 +1100,7 @@
 TT_PRIM_LINE = 1
 TT_PRIM_QSPLINE = 2
 FONTMAPPER_MAX = 10
-ENHMETA_STOCK_OBJECT = 0x80000000L
+ENHMETA_STOCK_OBJECT = 0x80000000
 WGL_FONT_LINES = 0
 WGL_FONT_POLYGONS = 1
 LPD_DOUBLEBUFFER = 1
--- ./PYME/ParallelTasks/Screensaver/winuser.py	(original)
+++ ./PYME/ParallelTasks/Screensaver/winuser.py	(refactored)
@@ -168,7 +168,7 @@
 DESKTOP_READOBJECTS = 1
 DESKTOP_SWITCHDESKTOP = 256
 DESKTOP_WRITEOBJECTS = 128
-CW_USEDEFAULT = 0x80000000L
+CW_USEDEFAULT = 0x80000000
 WS_BORDER = 0x800000
 WS_CAPTION = 0xc00000
 WS_CHILD = 0x40000000
@@ -186,8 +186,8 @@
 WS_MINIMIZEBOX = 0x20000
 WS_OVERLAPPED = 0
 WS_OVERLAPPEDWINDOW = 0xcf0000
-WS_POPUP = 0x80000000L
-WS_POPUPWINDOW = 0x80880000L
+WS_POPUP = 0x80000000
+WS_POPUPWINDOW = 0x80880000
 WS_SIZEBOX = 0x40000
 WS_SYSMENU = 0x80000
 WS_TABSTOP = 0x10000
@@ -301,11 +301,11 @@
 SS_WHITEFRAME = 9
 SS_WHITERECT = 6
 SS_USERITEM = 10
-SS_TYPEMASK = 0x0000001FL
-SS_ENDELLIPSIS = 0x00004000L
-SS_PATHELLIPSIS = 0x00008000L
-SS_WORDELLIPSIS = 0x0000C000L
-SS_ELLIPSISMASK = 0x0000C000L
+SS_TYPEMASK = 0x0000001F
+SS_ENDELLIPSIS = 0x00004000
+SS_PATHELLIPSIS = 0x00008000
+SS_WORDELLIPSIS = 0x0000C000
+SS_ELLIPSISMASK = 0x0000C000
 DS_3DLOOK = 4
 DS_ABSALIGN = 1
 DS_CENTER = 0x800
@@ -554,7 +554,7 @@
 MFT_RADIOCHECK = 512
 MFT_RIGHTJUSTIFY = 0x4000
 MFT_SEPARATOR = 0x800
-MFT_RIGHTORDER = 0x2000L
+MFT_RIGHTORDER = 0x2000
 MFT_STRING = 0
 MFS_CHECKED = 8
 MFS_DEFAULT = 4096
@@ -1566,8 +1566,8 @@
 TME_HOVER = 1
 TME_LEAVE = 2
 TME_QUERY = 0x40000000
-TME_CANCEL = 0x80000000L
-HOVER_DEFAULT = 0xFFFFFFFFL
+TME_CANCEL = 0x80000000
+HOVER_DEFAULT = 0xFFFFFFFF
 MK_LBUTTON = 1
 MK_RBUTTON = 2
 MK_SHIFT = 4
--- ./PYME/SampleDB/manage.py	(original)
+++ ./PYME/SampleDB/manage.py	(refactored)
@@ -24,7 +24,7 @@
 #!/usr/bin/env python
 from django.core.management import execute_manager
 try:
-    import settings # Assumed to be in the same directory.
+    from . import settings # Assumed to be in the same directory.
 except ImportError:
     import sys
     sys.stderr.write("Error: Can't find the file 'settings.py' in the directory containing %r. It appears you've customized things.\nYou'll have to run django-admin.py, passing it your settings module.\n(If the file settings.py does indeed exist, it's causing an ImportError somehow.)\n" % __file__)
--- ./PYME/SampleDB/settings.py	(original)
+++ ./PYME/SampleDB/settings.py	(refactored)
@@ -43,7 +43,7 @@
 DATABASE_PORT = ''             # Set to empty string for default. Not used with sqlite3.
 
 #look for database host in environment variable
-if 'PYME_DATABASE_HOST' in os.environ.keys():
+if 'PYME_DATABASE_HOST' in list(os.environ.keys()):
     DATABASE_HOST = os.environ['PYME_DATABASE_HOST']
 
 # Local time zone for this installation. Choices can be found here:
--- ./PYME/SampleDB/autocomplete/utils.py	(original)
+++ ./PYME/SampleDB/autocomplete/utils.py	(refactored)
@@ -25,8 +25,8 @@
 from django.forms.models import modelform_factory
 from django.db import models
 
-import widgets
-from views import autocomplete as default_view
+from . import widgets
+from .views import autocomplete as default_view
 
 
 def autocomplete_formfield(ac_id, formfield=None, view=default_view,
--- ./PYME/SampleDB/autocomplete/views.py	(original)
+++ ./PYME/SampleDB/autocomplete/views.py	(refactored)
@@ -28,6 +28,7 @@
 from django.http import Http404, HttpResponse, HttpResponseForbidden
 from django.utils import simplejson
 from django.utils.encoding import smart_str
+from functools import reduce
 
 
 class AlreadyRegistered(Exception):
@@ -47,12 +48,12 @@
     login_required = False
  
     def label(self, obj):
-        return unicode(obj)
+        return str(obj)
     value = label
    
 
     def __init__(self, id, current_app, **kwargs):
-        for (k, v) in kwargs.items():
+        for (k, v) in list(kwargs.items()):
             setattr(self, k, v)
         self.id = id
         self.current_app = current_app
@@ -71,7 +72,7 @@
                 self.key = self.field.rel.get_related_field().name
             if self.reverse_label is None:
                 self.reverse_label = True
-        elif isinstance(id, (str, unicode)):
+        elif isinstance(id, str):
             self.field = None
             self.model = self.queryset.model
             self.id = id
@@ -90,7 +91,7 @@
 
         for name in ('value', 'label'):
             attr = getattr(self, name)
-            if isinstance(attr, (str, unicode)):
+            if isinstance(attr, str):
                 setattr(self, name, build_func(attr))
 
     def view(self, request):
--- ./PYME/SampleDB/autocomplete/widgets.py	(original)
+++ ./PYME/SampleDB/autocomplete/widgets.py	(refactored)
@@ -27,7 +27,7 @@
 from django.utils.safestring import mark_safe
 from django.conf import settings
 
-from views import autocomplete as default_view
+from .views import autocomplete as default_view
 
 
 class AutocompleteWidget(forms.Widget):
@@ -56,7 +56,7 @@
         self.js_options.update(js_options)
         super(AutocompleteWidget, self).__init__(attrs)
 
-    def render(self, name, value, attrs=None, hattrs=None, initial_objects=u''):
+    def render(self, name, value, attrs=None, hattrs=None, initial_objects=''):
         if value is None:
             value = ''
         hidden_id = 'id_hidden_%s' % name
@@ -70,13 +70,13 @@
         if not self.js_options.get('source'):
             self.js_options['source'] = self.settings.get_absolute_url()
         options = simplejson.dumps(self.js_options)
-        return mark_safe(u''.join((
-            u'<input%s />\n' % flatatt(hidden_attrs),
-            u'<input%s />\n' % flatatt(normal_attrs),
+        return mark_safe(''.join((
+            '<input%s />\n' % flatatt(hidden_attrs),
+            '<input%s />\n' % flatatt(normal_attrs),
             initial_objects,
-            u'<script type="text/javascript">',
-            u'django.autocomplete("#id_%s", %s);' % (name, options),
-            u'</script>\n',
+            '<script type="text/javascript">',
+            'django.autocomplete("#id_%s", %s);' % (name, options),
+            '</script>\n',
         )))
 
     def label_for_value(self, value):
@@ -102,7 +102,7 @@
             value = ','.join([str(v) for v in value])
         else:
             value = None
-            initial_objects = u''
+            initial_objects = ''
         return super(MultipleAutocompleteWidget, self).render(
             name, value, attrs, hattrs, initial_objects)
 
@@ -117,8 +117,8 @@
     
     def initial_objects(self, value):
         settings = self.settings
-        output = [u'<ul class="ui-autocomplete-values">']
+        output = ['<ul class="ui-autocomplete-values">']
         for obj in settings.queryset.filter(**{'%s__in' % settings.key: value}):
-            output.append(u'<li>%s</li>' % settings.label(obj))
-        output.append(u'</ul>\n')
-        return mark_safe(u'\n'.join(output))
+            output.append('<li>%s</li>' % settings.label(obj))
+        output.append('</ul>\n')
+        return mark_safe('\n'.join(output))
--- ./PYME/SampleDB/samples/autocomp_settings.py	(original)
+++ ./PYME/SampleDB/samples/autocomp_settings.py	(refactored)
@@ -37,7 +37,7 @@
     key='creator'
 
     def label(self, o):
-        return unicode(o.creator)
+        return str(o.creator)
     value = label
 
 class StructureAutocomplete(AutocompleteSettings):
@@ -46,7 +46,7 @@
     key='structure'
 
     def label(self, o):
-        return unicode(o.structure)
+        return str(o.structure)
     value = label
 
 #class CustomRenderingAutocomplete(SimpleAutocomplete):
--- ./PYME/SampleDB/samples/calcEventStats.py	(original)
+++ ./PYME/SampleDB/samples/calcEventStats.py	(refactored)
@@ -21,7 +21,7 @@
 
 #
 ################
-import models
+from . import models
 from PYME.Analysis.LMVis.h5rNoGui import Pipeline
 from PYME.Analysis.BleachProfile.kinModels import getPhotonNums
 import numpy as np
--- ./PYME/SampleDB/samples/dategraph.py	(original)
+++ ./PYME/SampleDB/samples/dategraph.py	(refactored)
@@ -45,14 +45,14 @@
     usernames = set([i.userID for i in Image.objects.all()])
     usernames = [u for u in usernames if (u.find('-') == -1) and (u.find(' ') ==-1)]
 
-    users = [i[0].split('_')[1] for i in request.REQUEST.items() if i[0].startswith('user_') and i[1] == '1']
+    users = [i[0].split('_')[1] for i in list(request.REQUEST.items()) if i[0].startswith('user_') and i[1] == '1']
     #print users
     if len(users) >  0:
         filters['userID__in'] = users
 
     tagnames = [t.name for t in TagName.objects.all()]
 
-    tags = [i[0].split('__')[1] for i in request.REQUEST.items() if i[0].startswith('tag__') and i[1] == '1']
+    tags = [i[0].split('__')[1] for i in list(request.REQUEST.items()) if i[0].startswith('tag__') and i[1] == '1']
     #print users
 #    if len(tags) >  0:
 #        filters['userID__in'] = users
--- ./PYME/SampleDB/samples/fields.py	(original)
+++ ./PYME/SampleDB/samples/fields.py	(refactored)
@@ -26,8 +26,9 @@
 from copy import deepcopy
 from base64 import b64encode, b64decode
 from zlib import compress, decompress
+import collections
 try:
-    from cPickle import loads, dumps
+    from pickle import loads, dumps
 except ImportError:
     from pickle import loads, dumps
 
@@ -72,7 +73,7 @@
         value = loads(decompress(b64decode(value)))
     return value
 
-class PickledObjectField(models.Field):
+class PickledObjectField(models.Field, metaclass=models.SubfieldBase):
     """
     A field that will accept *any* python object and store it in the
     database. PickledObjectField will optionally compress it's values if
@@ -85,7 +86,6 @@
     None values since they aren't pickled and encoded.
     
     """
-    __metaclass__ = models.SubfieldBase
     
     def __init__(self, *args, **kwargs):
         self.compress = kwargs.pop('compress', False)
@@ -107,7 +107,7 @@
         
         """
         if self.has_default():
-            if callable(self.default):
+            if isinstance(self.default, collections.Callable):
                 return self.default()
             return self.default
         # If the field doesn't have a default, then we punt to models.Field.
--- ./PYME/SampleDB/samples/models.py	(original)
+++ ./PYME/SampleDB/samples/models.py	(refactored)
@@ -27,7 +27,7 @@
 
 from PYME.misc.hash32 import hashString32
 
-from fields import PickledObjectField
+from .fields import PickledObjectField
 
 # Create your models here.
 class Species(models.Model):
@@ -44,7 +44,7 @@
     strain = models.CharField(max_length=200, default='', blank=True, help_text='Strain of animal / cell culture line (sugest stable transfections = different strain, transient tranf. same strain)')
 
     def __unicode__(self):
-        return u'%s - %s' % (self.speciesName, self.strain)
+        return '%s - %s' % (self.speciesName, self.strain)
 
 class Sample(models.Model):
     SAMPLE_TYPES = (('Cell Culture', 'Cultured Cells'),
@@ -59,7 +59,7 @@
     notes = models.TextField(blank=True, help_text='Any other information about the sample, e.g. manipulations, transfections, disease type (free form)', default='')
 
     def __unicode__(self):
-        return u'%s - %s [%s]' % (self.species, self.sampleType, self.patientID)
+        return '%s - %s [%s]' % (self.species, self.sampleType, self.patientID)
 
 class Dye(models.Model):
     try:
@@ -75,7 +75,7 @@
     spectraDBName = models.CharField(max_length=200, choices=DYE_NAMES, help_text='Name that identifies the spectra in Omegas spectra database')
 
     def __unicode__(self):
-        return u'Dye: %s' % self.shortName
+        return 'Dye: %s' % self.shortName
 
 def _getMostRecentCreator():
         return Slide._GetMostRecent().creator
@@ -127,7 +127,7 @@
         return self.creator, self.reference, self.labels()
 
     def __unicode__(self):
-        return u'Slide %d: %s, %s' % (self.slideID, self.creator, self.reference)
+        return 'Slide %d: %s, %s' % (self.slideID, self.creator, self.reference)
 
     @classmethod
     def _GetMostRecent(cls):
@@ -214,7 +214,7 @@
         f = File.GetOrCreate(filename, fileID=fileID, imageID=self)
 
     def __unicode__(self):
-        return u'Image %d: %s' % (self.imageID, ', '.join([n.filename for n in self.files.all()]))
+        return 'Image %d: %s' % (self.imageID, ', '.join([n.filename for n in self.files.all()]))
 
     @classmethod
     def GetOrCreate(cls, imageID, userGuess='N/A', slideID=None, timestamp=0):
@@ -243,7 +243,7 @@
         FileTag.AddTag(self, tagName)
 
     def __unicode__(self):
-        return u'File %d: %s' % (self.fileID, self.filename)
+        return 'File %d: %s' % (self.fileID, self.filename)
 
     @classmethod
     def GetOrCreate(cls, filename, fileID=None, imageID=None):
@@ -329,13 +329,13 @@
             return self.label
 
     def __unicode__(self):
-        return u'%s, %s (Slide %d)' % (self.structure, self.label, self.slideID.slideID)
+        return '%s, %s (Slide %d)' % (self.structure, self.label, self.slideID.slideID)
 
 class TagName(models.Model):
     name = models.CharField(max_length=200)
 
     def __unicode__(self):
-        return u'%s' % self.name
+        return '%s' % self.name
 
     @classmethod
     def GetOrCreate(cls, tagName):
@@ -411,7 +411,7 @@
     parameters = PickledObjectField()
     
     def __unicode__(self):
-        s =  u'%s - x = %s, y = %s' % (self.timestamp, self.exprX, self.exprY)
+        s =  '%s - x = %s, y = %s' % (self.timestamp, self.exprX, self.exprY)
         if len(s) > 60:
             s = s[:60] + ' ...'
             
@@ -430,7 +430,7 @@
     
 
     def __unicode__(self):
-        return u'Stats for %s: %s\t%d\t%3.1f\t%3.2f\t%3.1f' % (self.fileID.filename, self.label, self.nEvents, self.meanPhotons, self.tMax, self.tMedian)
+        return 'Stats for %s: %s\t%d\t%3.1f\t%3.2f\t%3.1f' % (self.fileID.filename, self.label, self.nEvents, self.meanPhotons, self.tMax, self.tMedian)
 
     
 #print Slide.creator
--- ./PYME/SampleDB/samples/views.py	(original)
+++ ./PYME/SampleDB/samples/views.py	(refactored)
@@ -50,7 +50,7 @@
     creatornames = set([s.creator for s in Slide.objects.all()])
     creatornames = [u for u in creatornames if (u.find('-') == -1) and (u.find(' ') ==-1) and (u.find('.') ==-1)]
 
-    creator = [i[0].split('_')[1] for i in request.REQUEST.items() if i[0].startswith('creator_') and i[1] == '1']
+    creator = [i[0].split('_')[1] for i in list(request.REQUEST.items()) if i[0].startswith('creator_') and i[1] == '1']
     #print users
     if len(creator) >  0:
         filters['creator__in'] = creator
@@ -59,7 +59,7 @@
 
     structures = set([l.structure for l in Labelling.objects.all()])
 
-    structure = [i[0].split('_')[1] for i in request.REQUEST.items() if i[0].startswith('structure_') and i[1] == '1']
+    structure = [i[0].split('_')[1] for i in list(request.REQUEST.items()) if i[0].startswith('structure_') and i[1] == '1']
 
     if len(structure) >  0:
         filters['labelling__structure__in'] = structure
@@ -126,7 +126,7 @@
     usernames = set([i.userID for i in Image.objects.all()])
     usernames = [u for u in usernames if (u.find('-') == -1) and (u.find(' ') ==-1)]
 
-    users = [i[0].split('_')[1] for i in request.REQUEST.items() if i[0].startswith('user_') and i[1] == '1']
+    users = [i[0].split('_')[1] for i in list(request.REQUEST.items()) if i[0].startswith('user_') and i[1] == '1']
     #print users
     if len(users) >  0:
         filters['userID__in'] = users
@@ -136,7 +136,7 @@
     structures = list(set([l.structure for l in Labelling.objects.all()]))
     structures.sort()
 
-    structure = [i[0].split('_')[1] for i in request.REQUEST.items() if i[0].startswith('structure_') and i[1] == '1']
+    structure = [i[0].split('_')[1] for i in list(request.REQUEST.items()) if i[0].startswith('structure_') and i[1] == '1']
 
     if len(structure) >  0:
         filters['slideID__labelling__structure__in'] = structure
@@ -152,7 +152,7 @@
 
     tagnames = [t.name for t in TagName.objects.order_by('name')]
 
-    tags = [i[0].split('__')[1] for i in request.REQUEST.items() if i[0].startswith('tag__') and i[1] == '1']
+    tags = [i[0].split('__')[1] for i in list(request.REQUEST.items()) if i[0].startswith('tag__') and i[1] == '1']
     #print users
 #    if len(tags) >  0:
 #        filters['userID__in'] = users
@@ -192,7 +192,7 @@
     #    imgs = [i for i in imgs if i.HasTags(tags)]
 
     totalResultsNum = len(imgs)
-    startNums = range(0,totalResultsNum, numResults)
+    startNums = list(range(0,totalResultsNum, numResults))
     numResults = min(totalResultsNum, startNum + numResults) - startNum
 
     if not totalResultsNum == 0:
--- ./PYME/cSMI/__init__.py	(original)
+++ ./PYME/cSMI/__init__.py	(refactored)
@@ -21,4 +21,4 @@
 #
 ##################
 
-from cSMI import *
+from .cSMI import *
--- ./PYME/cSMI/cSMI.py	(original)
+++ ./PYME/cSMI/cSMI.py	(refactored)
@@ -14,7 +14,7 @@
         try:
             fp, pathname, description = imp.find_module('_cSMI', [dirname(__file__)])
         except ImportError:
-            import _cSMI
+            from . import _cSMI
             return _cSMI
         if fp is not None:
             try:
@@ -25,7 +25,7 @@
     _cSMI = swig_import_helper()
     del swig_import_helper
 else:
-    import _cSMI
+    from . import _cSMI
 del version_info
 try:
     _swig_property = property
--- ./PYME/cpmath/bg_compensate.py	(original)
+++ ./PYME/cpmath/bg_compensate.py	(refactored)
@@ -377,7 +377,7 @@
     from pylab import ceil,imshow,show
     import numpy,pylab
     from matplotlib.image import pil_to_array
-    from filter import canny
+    from .filter import canny
     import matplotlib
     import cProfile
 
@@ -395,7 +395,7 @@
         img_size.reverse()
         new_img = imgdata.reshape(img_size)
         # The magic # for maximum sample value is 281
-        if img.tag.has_key(281):
+        if 281 in img.tag:
             img = new_img.astype(np.float32) / img.tag[281][0]
         elif np.max(new_img) < 4096:
             img = new_img.astype(np.float32) / 4095.
--- ./PYME/cpmath/cpmorphology.py	(original)
+++ ./PYME/cpmath/cpmorphology.py	(refactored)
@@ -19,9 +19,9 @@
 import scipy.ndimage as scind
 import scipy.sparse
 import _cpmorphology
-from outline import outline
-from rankorder import rank_order
-from index import Indexes
+from .outline import outline
+from .rankorder import rank_order
+from .index import Indexes
 from _cpmorphology2 import skeletonize_loop, table_lookup_index
 from _cpmorphology2 import grey_reconstruction_loop
 from _cpmorphology2 import _all_connected_components
@@ -551,7 +551,7 @@
     #
     # An array that converts from label # to index in "indexes"
     anti_indexes = np.zeros((np.max(indexes)+1,),int)
-    anti_indexes[indexes] = range(len(indexes))
+    anti_indexes[indexes] = list(range(len(indexes)))
 
     coords = pixel_labels[:,:2]
     i = coords[:, 0]
@@ -654,7 +654,7 @@
             # Map label #s to the index into indexes_to_finish of that label #
             #
             anti_indexes_to_finish = np.zeros((len(indexes),), np.int32)
-            anti_indexes_to_finish[indexes_to_finish] = range(len(indexes_to_finish))
+            anti_indexes_to_finish[indexes_to_finish] = list(range(len(indexes_to_finish)))
             #
             # Figure out the indices of each point in a label to be finished.
             # We figure out how much to subtract for each label, then
@@ -666,7 +666,7 @@
             finish_idx_base = np.zeros((len(indexes_to_finish),), np.int32)
             finish_idx_base[1:]=np.cumsum(new_counts[indexes_to_finish])[:-1]
             finish_idx_bases = finish_idx_base[anti_indexes_to_finish[atf_indexes]]
-            finish_idx = (np.array(range(a_to_finish.shape[0]))-
+            finish_idx = (np.array(list(range(a_to_finish.shape[0])))-
                           finish_idx_bases)
             finish_idx = finish_idx + result_index[atf_indexes]
             result[finish_idx,1:] = a_to_finish[:,1:]
@@ -690,12 +690,12 @@
         # to address those situations.
         #
         anti_indexes_to_keep = np.zeros((len(indexes),), np.int32)
-        anti_indexes_to_keep[indexes_to_keep] = range(len(indexes_to_keep))
+        anti_indexes_to_keep[indexes_to_keep] = list(range(len(indexes_to_keep)))
         idx_base = np.zeros((len(indexes_to_keep),), np.int32)
         idx_base[1:]=np.cumsum(counts[keep_me])[0:-1]
         idx_bases = idx_base[anti_indexes_to_keep[a[:,0]]]
         counts_per_pt = counts[a[:,0]]
-        idx = np.array(range(a.shape[0]), np.int32)-idx_bases
+        idx = np.array(list(range(a.shape[0])), np.int32)-idx_bases
         n_minus_one = np.mod(idx+counts_per_pt-1,counts_per_pt)+idx_bases
         n_plus_one  = np.mod(idx+1,counts_per_pt)+idx_bases
         #
@@ -761,7 +761,7 @@
     # points for a label, then only keep those whose indexes are
     # less than the count for their label.
     #
-    within_label_index = np.array(range(result.shape[0]), np.int32)
+    within_label_index = np.array(list(range(result.shape[0])), np.int32)
     counts_per_point = result_counts[r_anti_indexes_per_point]
     result_indexes_per_point = result_index[r_anti_indexes_per_point] 
     within_label_index = (within_label_index - result_indexes_per_point)
@@ -1097,7 +1097,7 @@
             indexes = np.array(np.unique(hull_and_point_count[0][:,0]),dtype=np.int32)
         else:
             max_label = np.max(labels)
-            indexes = np.array(range(1,max_label+1),dtype=np.int32)
+            indexes = np.array(list(range(1,max_label+1)),dtype=np.int32)
     else:
         indexes = np.array(indexes,dtype=np.int32)
     if indexes.shape[0] == 0:
@@ -1138,7 +1138,7 @@
     # anti_indexes_per_point gives the label index of any vertex
     #
     anti_indexes=np.zeros((np.max(indexes)+1,),int)
-    anti_indexes[indexes] = range(indexes.shape[0])
+    anti_indexes[indexes] = list(range(indexes.shape[0]))
     anti_indexes_per_point = anti_indexes[hull[:,0]]
     #
     # Start out by eliminating the degenerate cases: 0, 1 and 2
@@ -1170,7 +1170,7 @@
     # the order in which we'll get their angles. We use this to pick out
     # points # 2 to N which are the candidate vertices to S
     # 
-    within_label_indexes = (np.array(range(hull.shape[0]),int) -
+    within_label_indexes = (np.array(list(range(hull.shape[0])),int) -
                             point_index[anti_indexes_per_point])
     
     while(np.any(keep_me)):
@@ -1190,7 +1190,7 @@
         anti_indexes_to_consider =\
             np.zeros((np.max(labels_to_consider)+1,),int)
         anti_indexes_to_consider[labels_to_consider] = \
-            np.array(range(labels_to_consider.shape[0]))
+            np.array(list(range(labels_to_consider.shape[0])))
         ##############################################################
         # Vertex indexing for active vertexes other than S0 and S1
         ##############################################################
@@ -2062,7 +2062,7 @@
     # Given a label number "index_of_label" indexes into the result
     #
     index_of_label = np.zeros((hull[:,0].max()+1),int)
-    index_of_label[indexes] = np.array(range(indexes.shape[0]))
+    index_of_label[indexes] = np.array(list(range(indexes.shape[0])))
     #
     # hull_index is the index into hull of the first point on the hull
     # per label
@@ -2088,7 +2088,7 @@
     counts_nd = counts[counts>=3]
     indexes_nd = indexes[counts>=3]
     index_of_label_nd = np.zeros((index_of_label.shape[0],),int)
-    index_of_label_nd[indexes_nd] = np.array(range(indexes_nd.shape[0]))
+    index_of_label_nd[indexes_nd] = np.array(list(range(indexes_nd.shape[0])))
     #
     # Figure out the within-label index of each point in a label. This is
     # so we can do modulo arithmetic when pairing a point with the next
@@ -2099,7 +2099,7 @@
         hull_index_nd[1:] = np.cumsum(counts_nd[:-1])
     index_of_label_per_pixel_nd = index_of_label_nd[hull_nd[:,0]]
     hull_index_per_pixel_nd = hull_index_nd[index_of_label_per_pixel_nd] 
-    within_label_index = (np.array(range(hull_nd.shape[0])) -
+    within_label_index = (np.array(list(range(hull_nd.shape[0]))) -
                           hull_index_per_pixel_nd)
     #
     # Find some point within each convex hull.
@@ -2138,7 +2138,7 @@
     # from point n to point n+1 (modulo count) to the point within
     # the hull.
     #
-    plus_one_idx = np.array(range(hull_nd.shape[0]))+1
+    plus_one_idx = np.array(list(range(hull_nd.shape[0])))+1
     modulo_mask = within_label_index+1 == counts_nd[index_of_label_per_pixel_nd]
     plus_one_idx[modulo_mask] = hull_index_per_pixel_nd[modulo_mask]
     area_per_pt_nd = triangle_areas(hull_nd[:,1:],
@@ -2305,7 +2305,7 @@
     i = (i * multiplier[0]).astype(int)
     j = (j * multiplier[1]).astype(int)
     labels = i * ijmax[1] + j
-    indexes = np.array(range(np.product(ijmax)))
+    indexes = np.array(list(range(np.product(ijmax))))
     return labels, indexes
 
 def white_tophat(image, radius=None, mask=None, footprint=None):
--- ./PYME/cpmath/filter.py	(original)
+++ ./PYME/cpmath/filter.py	(refactored)
@@ -17,17 +17,17 @@
 import numpy as np
 import itertools
 import _filter
-from rankorder import rank_order
+from .rankorder import rank_order
 import scipy.ndimage as scind
 from scipy.ndimage import map_coordinates, label
 from scipy.ndimage import convolve, correlate1d, gaussian_filter
 from scipy.ndimage import binary_dilation, binary_erosion
 from scipy.ndimage import generate_binary_structure
-from smooth import smooth_with_function_and_mask
-from cpmorphology import fixup_scipy_ndimage_result as fix
-from cpmorphology import centers_of_labels
-from cpmorphology import grey_erosion, grey_reconstruction
-from cpmorphology import convex_hull_ijv, get_line_pts
+from .smooth import smooth_with_function_and_mask
+from .cpmorphology import fixup_scipy_ndimage_result as fix
+from .cpmorphology import centers_of_labels
+from .cpmorphology import grey_erosion, grey_reconstruction
+from .cpmorphology import convex_hull_ijv, get_line_pts
 
 '''# of points handled in the first pass of the convex hull code'''
 CONVEX_HULL_CHUNKSIZE = 250000
@@ -1176,7 +1176,7 @@
     for i in range(1,result_fwd.shape[0]):
         result_fwd[i] += result_fwd[i-1] * decay
     result_rev = smoothed.copy()
-    for i in reversed(range(result_rev.shape[0]-1)):
+    for i in reversed(list(range(result_rev.shape[0]-1))):
         result_rev[i] += result_rev[i+1] * decay
     result = (result_fwd - result_rev) / 2
     #
--- ./PYME/cpmath/haralick.py	(original)
+++ ./PYME/cpmath/haralick.py	(refactored)
@@ -17,7 +17,7 @@
 import scipy.ndimage as scind
 from scipy.linalg import toeplitz
 
-from cpmorphology import fixup_scipy_ndimage_result as fix
+from .cpmorphology import fixup_scipy_ndimage_result as fix
 
 def minimum(input, labels, index):
     return fix(scind.minimum(input, labels, index))
--- ./PYME/cpmath/threshold.py	(original)
+++ ./PYME/cpmath/threshold.py	(refactored)
@@ -24,9 +24,9 @@
 import scipy.sparse
 import scipy.interpolate
 
-from otsu import otsu, entropy, otsu3, entropy3
-from smooth import smooth_with_noise
-from filter import stretch, unstretch
+from .otsu import otsu, entropy, otsu3, entropy3
+from .smooth import smooth_with_noise
+from .filter import stretch, unstretch
 
 TM_OTSU                         = "Otsu"
 TM_OTSU_GLOBAL                  = "Otsu Global"
@@ -313,7 +313,7 @@
             labels[np.logical_not(mask)] = 0 
     label_extents = scipy.ndimage.find_objects(labels,np.max(labels))
     local_threshold = np.ones(image.shape,image.dtype)
-    for i,extent in zip(range(1,len(label_extents)+1),label_extents):
+    for i,extent in zip(list(range(1,len(label_extents)+1)),label_extents):
         label_mask = labels[extent]==i
         if not mask is None:
             label_mask = np.logical_and(mask[extent], label_mask)
@@ -462,7 +462,7 @@
     # Construct an equally spaced array of values between the background
     # and object mean
     ndivisions = 10000
-    level = (np.array(range(ndivisions)) *
+    level = (np.array(list(range(ndivisions))) *
              ((class_mean[2]-class_mean[0]) / ndivisions)
              + class_mean[0])
     class_gaussian = np.ndarray((ndivisions,class_count))
@@ -588,7 +588,7 @@
                                         max_log_image,
                                         256)
     histogram_values = (min_log_image + (max_log_image - min_log_image)*
-                        np.array(range(256),float) / 255)
+                        np.array(list(range(256)),float) / 255)
     # drop any zero bins
     keep = histogram != 0
     histogram = histogram[keep]
@@ -794,7 +794,7 @@
 
 def numpy_histogram(a, bins=10, range=None, normed=False, weights=None):
     '''A version of numpy.histogram that accounts for numpy's version'''
-    args = inspect.getargs(np.histogram.func_code)[0]
+    args = inspect.getargs(np.histogram.__code__)[0]
     if args[-1] == "new":
         return np.histogram(a, bins, range, normed, weights, new=True)
     return np.histogram(a, bins, range, normed, weights)
--- ./PYME/cpmath/watershed.py	(original)
+++ ./PYME/cpmath/watershed.py	(refactored)
@@ -32,7 +32,7 @@
 from _heapq import heapify, heappush, heappop
 import numpy
 import scipy.ndimage
-from rankorder import rank_order
+from .rankorder import rank_order
 
 import _watershed
 
@@ -70,7 +70,7 @@
     ncoords= coords.shape[0]
     if ncoords > 0:
         pixels = image[markers != 0]
-        age    = numpy.array(range(ncoords))
+        age    = numpy.array(list(range(ncoords)))
         offset = numpy.zeros(coords.shape[0],int)
         for i in range(image.ndim):
             offset = offset + stride[i]*coords[:,i]
--- ./PYME/cpmath/zernike.py	(original)
+++ ./PYME/cpmath/zernike.py	(refactored)
@@ -18,8 +18,8 @@
 import numpy as np
 import scipy.sparse
 import scipy.ndimage
-from cpmorphology import minimum_enclosing_circle,fixup_scipy_ndimage_result
-from cpmorphology import fill_labeled_holes,draw_line
+from .cpmorphology import minimum_enclosing_circle,fixup_scipy_ndimage_result
+from .cpmorphology import fill_labeled_holes,draw_line
 
 def construct_zernike_lookuptable(zernike_indexes):
     """Return a lookup table of the sum-of-factorial part of the radial
@@ -29,10 +29,10 @@
                       computed.
     """
     factorial = np.ones((100,))
-    factorial[1:] = np.cumproduct(range(1,100))
+    factorial[1:] = np.cumproduct(list(range(1,100)))
     width = int(np.max(zernike_indexes[:,0]) / 2+1)
     lut = np.zeros((zernike_indexes.shape[0],width))
-    for idx,(n,m) in zip(range(zernike_indexes.shape[0]),zernike_indexes):
+    for idx,(n,m) in zip(list(range(zernike_indexes.shape[0])),zernike_indexes):
         for k in range(0,(n-m)/2+1):
             lut[idx,k] = \
                 (((-1)**k) * factorial[n-k] /
@@ -64,9 +64,9 @@
     zf = np.zeros((x.shape[0], nzernikes), np.complex)
     s = np.zeros(x.shape,np.complex)
     exp_terms = {}
-    for idx,(n,m) in zip(range(nzernikes), zernike_indexes):
+    for idx,(n,m) in zip(list(range(nzernikes)), zernike_indexes):
         s[:]=0
-        if not exp_terms.has_key(m):
+        if m not in exp_terms:
             exp_terms[m] = np.exp(1j*m*phi)
         exp_term = exp_terms[m]
         for k in range((n-m)/2+1):
--- ./PYME/cpmath/tests/test_cpmorphology.py	(original)
+++ ./PYME/cpmath/tests/test_cpmorphology.py	(refactored)
@@ -60,7 +60,7 @@
                    ((0,10),(15,25),(0,3),(18,22)),
                    ((15,25),(30,39),(18,22),(36,39)),
                    ((30,39),(15,25),(36,39),(18,22)))
-        for idx,x in zip(range(1,len(objects)+1),objects):
+        for idx,x in zip(list(range(1,len(objects)+1)),objects):
             image[x[0][0]:x[0][1],x[1][0]:x[1][1]] = idx
             image[x[2][0]:x[2][1],x[3][0]:x[3][1]] = 0
         output = morph.fill_labeled_holes(image)
@@ -297,7 +297,7 @@
         filled_labels = morph.fill_labeled_holes(labels)
         input = filled_labels > 0
         result = morph.binary_shrink(input)
-        my_sum = scind.sum(result.astype(int),filled_labels,np.array(range(nlabels+1),dtype=np.int32))
+        my_sum = scind.sum(result.astype(int),filled_labels,np.array(list(range(nlabels+1)),dtype=np.int32))
         my_sum = np.array(my_sum)
         self.assertTrue(np.all(my_sum[1:] == 1))
         
@@ -545,7 +545,7 @@
         ct = 20
         labels = np.zeros((side,side),int)
         pts = np.zeros((s*s*ct,2),int)
-        index = np.array(range(pts.shape[0])).astype(float)/float(ct)
+        index = np.array(list(range(pts.shape[0]))).astype(float)/float(ct)
         index = index.astype(int)
         idx = 0
         for i in range(0,side,mini_side):
@@ -581,7 +581,7 @@
                 for k in range(ct):
                     morph.draw_line(labels, p[k,:], p[(k+1)%ct,:], idx)
         self.assertTrue(labels[5,106]==5)
-        result,counts = morph.convex_hull(labels,np.array(range(100))+1)
+        result,counts = morph.convex_hull(labels,np.array(list(range(100)))+1)
         self.assertFalse(np.any(np.logical_and(result[:,1]==5,
                                                      result[:,2]==106)))
     
@@ -769,7 +769,7 @@
         while n_multi_edge < 10:
             labels = np.zeros((side,side),int)
             pts = np.zeros((s*s*ct,2),int)
-            index = np.array(range(pts.shape[0])).astype(float)/float(ct)
+            index = np.array(list(range(pts.shape[0]))).astype(float)/float(ct)
             index = index.astype(int)
             idx = 0
             for i in range(0,side,mini_side):
@@ -805,7 +805,7 @@
                     for k in range(ct):
                         morph.draw_line(labels, p[k,:], p[(k+1)%ct,:], idx)
             center,radius = morph.minimum_enclosing_circle(labels, 
-                                                           np.array(range(s**2))+1)
+                                                           np.array(list(range(s**2)))+1)
             epsilon = .000001
             center_per_pt = center[index]
             radius_per_pt = radius[index]
@@ -818,7 +818,7 @@
             pt_on_edge = np.abs(distance_from_center - radius_per_pt)<epsilon
             count_pt_on_edge = scind.sum(pt_on_edge,
                                                  index,
-                                                 np.array(range(s**2),dtype=np.int32))
+                                                 np.array(list(range(s**2)),dtype=np.int32))
             count_pt_on_edge = np.array(count_pt_on_edge)
             #
             # Every dodecagon must have at least 2 points on the edge.
--- ./PYME/cpmath/tests/test_propagate.py	(original)
+++ ./PYME/cpmath/tests/test_propagate.py	(refactored)
@@ -129,7 +129,7 @@
         x_coords = numpy.random.uniform(low=0, high=1000,size=(300,)).astype(int)
         y_coords = numpy.random.uniform(low=0, high=1000,size=(300,)).astype(int)
         labels = numpy.zeros((1000,1000),dtype=int)
-        labels[x_coords,y_coords]=numpy.array(range(300))+1
+        labels[x_coords,y_coords]=numpy.array(list(range(300)))+1
         mask = numpy.ones((1000,1000),bool)
         t1 = time.clock() 
         result,distances = cellprofiler.cpmath.propagate.propagate(image, labels, mask, 1.0)
--- ./PYME/dataBrowser/manage.py	(original)
+++ ./PYME/dataBrowser/manage.py	(refactored)
@@ -24,7 +24,7 @@
 #!/usr/bin/python
 from django.core.management import execute_manager
 try:
-    import settings # Assumed to be in the same directory.
+    from . import settings # Assumed to be in the same directory.
 except ImportError:
     import sys
     sys.stderr.write("Error: Can't find the file 'settings.py' in the directory containing %r. It appears you've customized things.\nYou'll have to run django-admin.py, passing it your settings module.\n(If the file settings.py does indeed exist, it's causing an ImportError somehow.)\n" % __file__)
--- ./PYME/gohlke/czifile.py	(original)
+++ ./PYME/gohlke/czifile.py	(refactored)
@@ -94,7 +94,7 @@
 
 """
 
-from __future__ import division, print_function
+
 
 import sys
 import os
@@ -112,7 +112,7 @@
 import numpy
 from scipy.ndimage.interpolation import zoom
 
-from tifffile import decodelzw, lazyattr, stripnull
+from .tifffile import decodelzw, lazyattr, stripnull
 
 try:
     import _czifile
@@ -195,7 +195,7 @@
             self._fh.close()
             raise
 
-        if multifile and self.header.file_part and isinstance(arg, basestring):
+        if multifile and self.header.file_part and isinstance(arg, str):
             # open master file instead
             self._fh.close()
             name, _ = match_filename(arg)
@@ -430,7 +430,7 @@
             is used.
 
         """
-        if isinstance(arg, basestring):  # file name
+        if isinstance(arg, str):  # file name
             filename = os.path.abspath(arg)
             self.path, self.name = os.path.split(filename)
             self._fh = open(filename, mode)
@@ -603,7 +603,7 @@
         if raw:
             return data
         data = data.replace(b'\r\n', b'\n').replace(b'\r', b'\n')
-        return unicode(data, 'utf-8')
+        return str(data, 'utf-8')
 
     def __str__(self):
         return "MetadataSegment\n %s" % self.data()
@@ -637,7 +637,7 @@
     def metadata(self):
         """Read metadata from file and return as XML string."""
         self._fh.seek(self.data_offset - self.metadata_size)
-        return unicode(self._fh.read(self.metadata_size), 'utf-8')
+        return str(self._fh.read(self.metadata_size), 'utf-8')
 
     def data(self, raw=False, bgr2rgb=True, resize=True, order=1):
         """Read image data from file and return as numpy array."""
@@ -926,14 +926,14 @@
             raise ValueError("not a AttachmentEntryA1")
         self.content_guid = uuid.UUID(bytes=content_guid)
         self.content_file_type = stripnull(content_file_type)
-        self.name = unicode(stripnull(name), 'utf-8')
+        self.name = str(stripnull(name), 'utf-8')
         self._fh = fh
 
     @property
     def filename(self):
         """Return unique file name for attachment."""
         return "%s@%i.%s" % (self.name, self.file_position,
-                             unicode(self.content_file_type, 'utf-8').lower())
+                             str(self.content_file_type, 'utf-8').lower())
 
     def data_segment(self):
         """Read and return AttachmentSegment at file_position."""
@@ -1094,7 +1094,7 @@
          description_size,
          ) = struct.unpack('<idii', fh.read(20))
         description = stripnull(fh.read(description_size))
-        self.description = unicode(description, 'utf-8')
+        self.description = str(description, 'utf-8')
 
     def __str__(self):
         return "%s @ %s (%s)" % (EventListEntry.EV_TYPE[self.event_type],
@@ -1130,7 +1130,7 @@
 
     def __init__(self, fh):
         size, identifier, number = struct.unpack('<i80si', fh.read(88))
-        self.identifier = unicode(stripnull(identifier), 'utf-8')
+        self.identifier = str(stripnull(identifier), 'utf-8')
         self.components = [ComponentEntry(fh) for _ in range(number)]
 
     def __len__(self):
@@ -1168,7 +1168,7 @@
 
 def xml_reader(fh, filesize):
     """Read XML from file and return as xml.ElementTree root Element."""
-    xml = unicode(stripnull(fh.read(filesize)), 'utf-8')
+    xml = str(stripnull(fh.read(filesize)), 'utf-8')
     return etree.fromstring(xml)
 
 
@@ -1186,7 +1186,7 @@
     fd, filename = tempfile.mkstemp(suffix='.jxr')
     with os.fdopen(fd, 'wb') as fh:
         fh.write(data)
-    if isinstance(filename, unicode):
+    if isinstance(filename, str):
         filename = filename.encode('ascii')
     try:
         out = _czifile.decodejxr(filename)
@@ -1280,8 +1280,8 @@
     DECOMPRESS[4] = decodejxr
 
 if sys.version_info[0] > 2:
-    unicode = str
-    basestring = str, bytes
+    str = str
+    str = str, bytes
 
 if __name__ == "__main__":
     import doctest
--- ./PYME/gohlke/fcsfiles.py	(original)
+++ ./PYME/gohlke/fcsfiles.py	(refactored)
@@ -61,7 +61,7 @@
 
 """
 
-from __future__ import division, print_function
+
 
 import os
 import struct
@@ -178,7 +178,7 @@
             if isinstance(value, dict):
                 result.append("%sBEGIN %s%s %i" % (
                     indent, key, index, value['_value']))
-                for k, v in sorted(value.items(), key=sortkey):
+                for k, v in sorted(list(value.items()), key=sortkey):
                     append(k, v, indent+'\t')
                 result.append("%sEND" % indent)
             elif isinstance(value, (list, tuple)):
@@ -208,7 +208,7 @@
                 return '~~~' + key
             return key
 
-        for key, val in sorted(self.items(), key=sortkey):
+        for key, val in sorted(list(self.items()), key=sortkey):
             append(key, val)
         return '\n'.join(result)
 
--- ./PYME/gohlke/tifffile.py	(original)
+++ ./PYME/gohlke/tifffile.py	(refactored)
@@ -112,7 +112,7 @@
 
 """
 
-from __future__ import division, print_function
+
 
 import sys
 import os
@@ -480,7 +480,7 @@
         """Close open file handle(s)."""
         if not hasattr(self, 'tiffs'):
             return
-        for tif in self._tiffs.values():
+        for tif in list(self._tiffs.values()):
             if tif._fd:
                 tif._fd.close()
                 tif._fd = None
@@ -663,10 +663,10 @@
                                 newaxis = along.attrib.get('Type', 'other')
                                 newaxis = AXES_LABELS[newaxis]
                                 if 'Start' in along.attrib:
-                                    labels = range(
+                                    labels = list(range(
                                         int(along.attrib['Start']),
                                         int(along.attrib['End']) + 1,
-                                        int(along.attrib.get('Step', 1)))
+                                        int(along.attrib.get('Step', 1))))
                                 else:
                                     labels = [label.text for label in along
                                               if label.tag.endswith('Label')]
@@ -718,7 +718,7 @@
                                      dtype=numpy.dtype(ifds[0].dtype)))
 
         for record in result:
-            for axis, (newaxis, labels) in modulo.items():
+            for axis, (newaxis, labels) in list(modulo.items()):
                 i = record.axes.index(axis)
                 size = len(labels)
                 if record.shape[i] == size:
@@ -884,7 +884,7 @@
             tags[tag.name] = tag
 
         # read custom tags
-        for name, readtag in CUSTOM_TAGS.values():
+        for name, readtag in list(CUSTOM_TAGS.values()):
             if name in tags and readtag:
                 pos = fd.tell()
                 value = readtag(fd, byte_order, tags[name])
@@ -896,7 +896,7 @@
         # read LSM info subrecords
         if self.is_lsm:
             pos = fd.tell()
-            for name, reader in CZ_LSM_INFO_READERS.items():
+            for name, reader in list(CZ_LSM_INFO_READERS.items()):
                 try:
                     offset = self.cz_lsm_info["offset_"+name]
                 except KeyError:
@@ -917,7 +917,7 @@
 
         """
         tags = self.tags
-        for code, (name, default, dtype, count, validate) in TIFF_TAGS.items():
+        for code, (name, default, dtype, count, validate) in list(TIFF_TAGS.items()):
             if not (name in tags or default is None):
                 tags[name] = TIFFtag(code, dtype=dtype, count=count,
                                      value=default, name=name)
@@ -1413,7 +1413,7 @@
         s = []
         #sortbycode = lambda a, b: cmp(a.code, b.code)
         #for tag in sorted(self.values(), sortbycode):
-        for tag in sorted(self.values(), key=lambda x: x.code):
+        for tag in sorted(list(self.values()), key=lambda x: x.code):
             typecode = "%i%s" % (tag.count * int(tag.dtype[0]), tag.dtype[1])
             line = "* %i %s (%s) %s" % (tag.code, tag.name, typecode,
                                         str(tag.value).split('\n', 1)[0])
@@ -2009,7 +2009,7 @@
     'V': 'event',
     'O': 'other'}
 
-AXES_LABELS.update(dict((v, k) for k, v in AXES_LABELS.items()))
+AXES_LABELS.update(dict((v, k) for k, v in list(AXES_LABELS.items())))
 
 # MetaMorph STK tags
 MM_TAG_IDS = {
--- ./PYME/mProfile/__init__.py	(original)
+++ ./PYME/mProfile/__init__.py	(refactored)
@@ -1 +1 @@
-from mProfile import *
+from .mProfile import *
--- ./PYME/mProfile/mProfile.py	(original)
+++ ./PYME/mProfile/mProfile.py	(refactored)
@@ -50,7 +50,7 @@
 import sys
 import time
 import os
-import colorize_db_t
+from . import colorize_db_t
 import webbrowser
 import tempfile
 import threading
@@ -63,7 +63,7 @@
         dict.__init__(self, *args)
 
     def __getitem__(self,key):
-        if self.has_key(key):
+        if key in self:
             return dict.__getitem__(self, key)
         else:
             return None
@@ -83,7 +83,7 @@
         dict.__init__(self, *args)
 
     def __getitem__(self,key):
-        if self.has_key(key):
+        if key in self:
             return dict.__getitem__(self, key)
         else:
             return 0
--- ./PYME/mProfile/p.py	(original)
+++ ./PYME/mProfile/p.py	(refactored)
@@ -24,7 +24,7 @@
 import sys
 import time
 import os
-import colorize_db_t
+from . import colorize_db_t
 import webbrowser
 
 #tPrev = time.time()
@@ -35,7 +35,7 @@
         dict.__init__(self, *args)
 
     def __getitem__(self,key):
-        if self.has_key(key):
+        if key in self:
             return dict.__getitem__(self, key)
         else:
             return None
@@ -52,7 +52,7 @@
         dict.__init__(self, *args)
 
     def __getitem__(self,key):
-        if self.has_key(key):
+        if key in self:
             return dict.__getitem__(self, key)
         else:
             return 0
--- ./PYME/mProfile/tProfile.py	(original)
+++ ./PYME/mProfile/tProfile.py	(refactored)
@@ -94,7 +94,7 @@
     def __init__(self):
         Thread.__init__(self)
     def run(self):                  # takes about 5 seconds
-        for i in xrange(10):
+        for i in range(10):
             self.test_method()
             test_function()
     def test_method(self):
@@ -103,10 +103,10 @@
 #profile_on('tProfile.py')
 #######################
 def runTests():
-    threads = [T() for i in xrange(3)]
+    threads = [T() for i in range(3)]
     for t in threads:
         t.start()
-    for i in xrange(10):
+    for i in range(10):
         test_function()
     for t in threads:
         t.join()
--- ./PYME/misc/TextCtrlAutoComplete.py	(original)
+++ ./PYME/misc/TextCtrlAutoComplete.py	(refactored)
@@ -10,7 +10,7 @@
 
 '''
 
-import locale, wx, sys, cStringIO
+import locale, wx, sys, io
 
 import  wx.lib.mixins.listctrl  as  listmix
 
@@ -29,7 +29,7 @@
     return BitmapFromImage(getSmallUpArrowImage())
 
 def getSmallUpArrowImage():
-    stream = cStringIO.StringIO(getSmallUpArrowData())
+    stream = io.StringIO(getSmallUpArrowData())
     return ImageFromStream(stream)
 
 
@@ -46,7 +46,7 @@
     return BitmapFromImage(getSmallDnArrowImage())
 
 def getSmallDnArrowImage():
-    stream = cStringIO.StringIO(getSmallDnArrowData())
+    stream = io.StringIO(getSmallDnArrowData())
     return ImageFromStream(stream)
 #----------------------------------------------------------------------
 
@@ -69,7 +69,7 @@
         by calling setChoices.
         '''
 
-        if therest.has_key('style'):
+        if 'style' in therest:
             therest['style']=wx.TE_PROCESS_ENTER | therest['style']
         else:
             therest['style']=wx.TE_PROCESS_ENTER
@@ -195,7 +195,7 @@
             #load the sorted data into the listbox
             dd = self.dropdownlistbox
             choices = [dd.GetItem(x, self._colSearch).GetText()
-                for x in xrange(dd.GetItemCount())]
+                for x in range(dd.GetItemCount())]
         else:
             choices = self._choices
 
@@ -318,7 +318,7 @@
 
             for numCol, colVal in enumerate(valRow):
                 if numCol == 0:
-                    index = self.dropdownlistbox.InsertImageStringItem(sys.maxint, colVal, -1)
+                    index = self.dropdownlistbox.InsertImageStringItem(sys.maxsize, colVal, -1)
                 self.dropdownlistbox.SetStringItem(index, numCol, colVal)
                 self.dropdownlistbox.SetItemData(index, numRow)
 
@@ -350,7 +350,7 @@
         self.dropdownlistbox.InsertColumn(0, "")
 
         for num, colVal in enumerate(self._choices):
-            index = self.dropdownlistbox.InsertImageStringItem(sys.maxint, colVal, -1)
+            index = self.dropdownlistbox.InsertImageStringItem(sys.maxsize, colVal, -1)
 
             self.dropdownlistbox.SetStringItem(index, 0, colVal)
             self.dropdownlistbox.SetItemData(index, num)
@@ -392,7 +392,7 @@
             if self._selectCallback:
                 dd = self.dropdownlistbox
                 values = [dd.GetItem(sel, x).GetText()
-                    for x in xrange(dd.GetColumnCount())]
+                    for x in range(dd.GetColumnCount())]
                 self._selectCallback( values )
 
             self.SetValue (itemtext)
--- ./PYME/misc/VolProj.py	(original)
+++ ./PYME/misc/VolProj.py	(refactored)
@@ -50,7 +50,7 @@
         self.isos = []
         self.projs = []
 
-        for im, th, i in zip(channels, thresholds, range(len(channels))):
+        for im, th, i in zip(channels, thresholds, list(range(len(channels)))):
             c = mlab.contour3d(im, contours=[th], color = pylab.cm.gist_rainbow(float(i)/len(channels))[:3])
             c.mlab_source.dataset.spacing = pixelsize
             self.isos.append(c)
--- ./PYME/misc/autoFoldPanel.py	(original)
+++ ./PYME/misc/autoFoldPanel.py	(refactored)
@@ -26,7 +26,7 @@
 from wx.lib.agw.aui.aui_utilities import BitmapFromBits
 
 def ColourFromStyle(col):
-    if type(col) in [str, unicode]:
+    if type(col) in [str, str]:
         col = wx.NamedColour(col)
     else:
         col = wx.Colour(*col)
@@ -185,9 +185,9 @@
 
         font = wx.SystemSettings.GetFont(wx.SYS_DEFAULT_GUI_FONT)
         #print font.GetFaceName(), font.GetPointSize()
-        if 'FONT_WEIGHT' in self.style.keys():
+        if 'FONT_WEIGHT' in list(self.style.keys()):
             font.SetWeight(self.style['FONT_WEIGHT'])
-        if 'FONT_SIZE' in self.style.keys():
+        if 'FONT_SIZE' in list(self.style.keys()):
             font.SetPointSize(self.style['FONT_SIZE'])
             
         fc = ColourFromStyle(self.style['FONT_COLOUR'])
--- ./PYME/misc/computerName.py	(original)
+++ ./PYME/misc/computerName.py	(refactored)
@@ -24,7 +24,7 @@
 import sys
 
 def GetComputerName():
-    if 'PYME_COMPUTERNAME' in os.environ.keys():
+    if 'PYME_COMPUTERNAME' in list(os.environ.keys()):
         return os.environ['PYME_COMPUTERNAME']
     elif sys.platform == 'win32':
         return os.environ['COMPUTERNAME']
--- ./PYME/misc/congrid.py	(original)
+++ ./PYME/misc/congrid.py	(refactored)
@@ -87,7 +87,7 @@
         mint = scipy.interpolate.interp1d( olddims[-1], a, kind=method )
         newa = mint( dimlist[-1] )
 
-        trorder = [ndims - 1] + range( ndims - 1 )
+        trorder = [ndims - 1] + list(range( ndims - 1))
         for i in range( ndims - 2, -1, -1 ):
             newa = newa.transpose( trorder )
 
@@ -105,7 +105,7 @@
         nslices = [ slice(0,j) for j in list(newdims) ]
         newcoords = n.mgrid[nslices]
 
-        newcoords_dims = range(n.rank(newcoords))
+        newcoords_dims = list(range(n.rank(newcoords)))
         #make first index last
         newcoords_dims.append(newcoords_dims.pop(0))
         newcoords_tr = newcoords.transpose(newcoords_dims)
--- ./PYME/misc/editgrid.py	(original)
+++ ./PYME/misc/editgrid.py	(refactored)
@@ -55,7 +55,7 @@
                 
     
     def tostring(self, selection=None):
-        from cStringIO import StringIO
+        from io import StringIO
         sb = StringIO()
         
         np.savetxt(sb, self.toarray(selection), delimiter='\t')
@@ -63,7 +63,7 @@
         return sb.getvalue()
         
     def setfromstring(self, data, x0=0, y0=0):
-        from cStringIO import StringIO
+        from io import StringIO
         #print repr(data)
         sb = StringIO(data.encode())
         
--- ./PYME/misc/extraCMaps.py	(original)
+++ ./PYME/misc/extraCMaps.py	(refactored)
@@ -51,7 +51,7 @@
 
 ndat = {'r':_r, 'g':_g, 'b':_b, 'c':_c, 'm':_m, 'y':_y, 'hsp': _hsv_part}
 
-ncmapnames = ndat.keys()
+ncmapnames = list(ndat.keys())
 pylab.cm.cmapnames += ncmapnames
 for cmapname in ncmapnames:
     pylab.cm.__dict__[cmapname] = colors.LinearSegmentedColormap(cmapname, ndat[cmapname], pylab.cm.LUTSIZE)
--- ./PYME/misc/fbpIcons.py	(original)
+++ ./PYME/misc/fbpIcons.py	(refactored)
@@ -51,8 +51,8 @@
     return wx.BitmapFromImage(GetCollapsedIconImage())
 
 def GetCollapsedIconImage():
-    import cStringIO
-    stream = cStringIO.StringIO(GetCollapsedIconData())
+    import io
+    stream = io.StringIO(GetCollapsedIconData())
     return wx.ImageFromStream(stream)
 
 #----------------------------------------------------------------------
@@ -83,6 +83,6 @@
     return wx.BitmapFromImage(GetExpandedIconImage())
 
 def GetExpandedIconImage():
-    import cStringIO
-    stream = cStringIO.StringIO(GetExpandedIconData())
+    import io
+    stream = io.StringIO(GetExpandedIconData())
     return wx.ImageFromStream(stream)
--- ./PYME/misc/findCycles.py	(original)
+++ ./PYME/misc/findCycles.py	(refactored)
@@ -44,7 +44,7 @@
 
             outstream.write("   %s -- " % str(type(step)))
             if isinstance(step, dict):
-                for key, val in step.items():
+                for key, val in list(step.items()):
                     if val is next:
                         outstream.write("[%s]" % repr(key))
                         break
--- ./PYME/misc/glassModel.py	(original)
+++ ./PYME/misc/glassModel.py	(refactored)
@@ -58,7 +58,7 @@
 
     n = 0
 
-    for a, n in zip(args, range(len(args))):
+    for a, n in zip(args, list(range(len(args)))):
         n += a/(L2**n)
 
     return n
--- ./PYME/misc/hash32.py	(original)
+++ ./PYME/misc/hash32.py	(refactored)
@@ -23,7 +23,7 @@
 import numpy as np
 
 def c_mul(a, b):
-    return eval(hex((long(a) * b) & 0xFFFFFFFFL)[:-1])
+    return eval(hex((int(a) * b) & 0xFFFFFFFF)[:-1])
 
 
 def hashString32(s):
--- ./PYME/misc/listctrlMixins.py	(original)
+++ ./PYME/misc/listctrlMixins.py	(refactored)
@@ -161,7 +161,7 @@
 
         # If the items are equal then pick something else to make the sort value unique
         if cmpVal == 0:
-            cmpVal = apply(cmp, self.GetSecondarySortValues(col, key1, key2))
+            cmpVal = cmp(*self.GetSecondarySortValues(col, key1, key2))
 
         if ascending:
             return cmpVal
@@ -839,7 +839,7 @@
 
     def RefreshRows(self):
         """Re-color all the rows"""
-        for row in xrange(self.GetItemCount()):
+        for row in range(self.GetItemCount()):
             if self._defaultb is None:
                 self._defaultb = self.GetItemBackgroundColour(row)
 
--- ./PYME/misc/lzw.py	(original)
+++ ./PYME/misc/lzw.py	(refactored)
@@ -623,7 +623,7 @@
 
         try:
             while 1:
-                cp = codepoints.next()
+                cp = next(codepoints)
                 if cp != END_OF_INFO_CODE:
                     yield cp
                 else:
--- ./PYME/misc/optics.py	(original)
+++ ./PYME/misc/optics.py	(refactored)
@@ -64,7 +64,7 @@
     CD = N.zeros(m)
     RD = N.ones(m)*1E10
 
-    for i in xrange(m):
+    for i in range(m):
         #again you can use the euclid function if you don't want hcluster
 #        d = euclid(x[i],x)
 #        d.sort()
--- ./PYME/misc/read_agf.py	(original)
+++ ./PYME/misc/read_agf.py	(refactored)
@@ -599,7 +599,7 @@
 ## =============================================================================
 def find_catalog(glasscat, glassname):
     for catalog in glasscat:
-        if glassname in glasscat[catalog].keys():
+        if glassname in list(glasscat[catalog].keys()):
             catalog1 = catalog
             break
     return(catalog)
--- ./PYME/misc/sqlitendarray.py	(original)
+++ ./PYME/misc/sqlitendarray.py	(refactored)
@@ -30,7 +30,7 @@
 import sqlite3
 from numpy import ndarray
 import zlib
-import cPickle as pickle
+import pickle as pickle
 
 #teach sqlite about numpy arrays
 def adapt_numarray(array):
--- ./PYME/misc/startCommentify.py	(original)
+++ ./PYME/misc/startCommentify.py	(refactored)
@@ -65,7 +65,7 @@
 
           print((text[:500]))
 
-          res = raw_input('Add header to file? y/n:')
+          res = input('Add header to file? y/n:')
 
           if res.upper() == 'Y':
               f = open(os.path.join(dirname, fn), 'w')
--- ./PYME/misc/tempLoggerDB.py	(original)
+++ ./PYME/misc/tempLoggerDB.py	(refactored)
@@ -23,7 +23,7 @@
 #!/usr/bin/python
 from PYME.Acquire.Hardware.DigiData.DigiDataClient import getDDClient
 import time
-import tempDB
+from . import tempDB
 import subprocess
 
 #check to see if we're already running
--- ./PYME/misc/tifffile.py	(original)
+++ ./PYME/misc/tifffile.py	(refactored)
@@ -98,7 +98,7 @@
 
 """
 
-from __future__ import division, print_function
+
 
 import sys
 import os
@@ -363,7 +363,7 @@
 
         # read custom tags
         pos = fhandle.tell()
-        for name, readtag in CUSTOM_TAGS.values():
+        for name, readtag in list(CUSTOM_TAGS.values()):
             if name in tags and readtag:
                 value = readtag(fhandle, byte_order, tags[name])
                 if isinstance(value, dict):  # numpy.core.records.record
@@ -374,7 +374,7 @@
         # read LSM info subrecords
         if self.is_lsm:
             pos = fhandle.tell()
-            for name, reader in CZ_LSM_INFO_READERS.items():
+            for name, reader in list(CZ_LSM_INFO_READERS.items()):
                 try:
                     offset = self.cz_lsm_info["offset_"+name]
                 except KeyError:
@@ -396,7 +396,7 @@
         """
         tags = self.tags
 
-        for code, (name, default, dtype, count, validate) in TIFF_TAGS.items():
+        for code, (name, default, dtype, count, validate) in list(TIFF_TAGS.items()):
             if not (name in tags or default is None):
                 tags[name] = TIFFtag(code, dtype=dtype, count=count,
                                      value=default, name=name)
@@ -751,7 +751,7 @@
         s = []
         #sortbycode = lambda a, b: cmp(a.code, b.code)
         #for tag in sorted(self.values(), sortbycode):
-        for tag in sorted(self.values(), key=lambda x: x.code):
+        for tag in sorted(list(self.values()), key=lambda x: x.code):
             typecode = "%i%s" % (tag.count * int(tag.dtype[0]), tag.dtype[1])
             line = "* %i %s (%s) %s" % (tag.code, tag.name, typecode,
                                         str(tag.value).split('\n', 1)[0])
--- ./PYME/misc/wxPlotPanel.py	(original)
+++ ./PYME/misc/wxPlotPanel.py	(refactored)
@@ -27,9 +27,9 @@
         self.parent = parent
 
         # initialize Panel
-        if 'id' not in kwargs.keys():
+        if 'id' not in list(kwargs.keys()):
             kwargs['id'] = wx.ID_ANY
-        if 'style' not in kwargs.keys():
+        if 'style' not in list(kwargs.keys()):
             kwargs['style'] = wx.NO_FULL_REPAINT_ON_RESIZE
         wx.Panel.__init__( self, parent, **kwargs )
 
--- ./PYME/misc/zemax.py	(original)
+++ ./PYME/misc/zemax.py	(refactored)
@@ -7,7 +7,7 @@
 from PYME.misc import lzw
 import numpy as np
 
-import read_agf
+from . import read_agf
 
 def decompZar(filename):
     '''zemax .zar files are a series of concatenated, LZW compressed text-format 
@@ -170,7 +170,7 @@
         
         if flip:
             z0 = -z0 - l
-            i_s = range(len(surfs))
+            i_s = list(range(len(surfs)))
             for i in i_s[::-1]:
                 print(i)
                 s = surfs[i]
@@ -194,14 +194,14 @@
     glasses = {}
     
     #find all the glass catalogs    
-    glass_cats = [n for n in components.keys() if n.endswith('.AGF')]
+    glass_cats = [n for n in list(components.keys()) if n.endswith('.AGF')]
     for gc in glass_cats:
         glasses.update(read_agf.read_cat_from_string(components[gc]))
         
-    print((glasses.keys()))
+    print((list(glasses.keys())))
         
     #find all components (probably only one)
-    zmxs = [ZMX(components[n], glasses) for n in components.keys() if (n.endswith('.ZMX') or n.endswith('.zmx'))]
+    zmxs = [ZMX(components[n], glasses) for n in list(components.keys()) if (n.endswith('.ZMX') or n.endswith('.zmx'))]
     
     return zmxs, glasses
             
--- ./PYME/pad/__init__.py	(original)
+++ ./PYME/pad/__init__.py	(refactored)
@@ -2,10 +2,10 @@
 #
 
 # Get documentation string:
-from info_pad import __doc__
+from .info_pad import __doc__
 
 # Import symbols from sub-module:
-from pad import *
+from .pad import *
 
 def test(level=1, verbosity=1):
     from numpy.testing import NumpyTest
--- ./PYME/pad/pad.py	(original)
+++ ./PYME/pad/pad.py	(refactored)
@@ -91,11 +91,11 @@
             and len(pad_width) == shapelen):
         pw = pad_width
     if (isinstance(pad_width, (tuple, list))
-            and isinstance(pad_width[0], (int, float, long))
+            and isinstance(pad_width[0], (int, float))
             and len(pad_width) == 1):
         pw = ((pad_width[0], pad_width[0]), ) * shapelen
     if (isinstance(pad_width, (tuple, list))
-            and isinstance(pad_width[0], (int, float, long))
+            and isinstance(pad_width[0], (int, float))
             and len(pad_width) == 2):
         pw = (pad_width, ) * shapelen
     if pw == None:
@@ -119,7 +119,7 @@
     else:
         kw['stat_len'] = None
     pad_width = __validate_tuple(nmatrix, pad_width)
-    rank = range(len(nmatrix.shape))
+    rank = list(range(len(nmatrix.shape)))
     total_dim_increase = [np.sum(pad_width[i]) for i in rank]
     offset_slices = [slice(pad_width[i][0],
                            pad_width[i][0] + nmatrix.shape[i])
--- ./PYME/scripts/h5r-thumbnailer.py	(original)
+++ ./PYME/scripts/h5r-thumbnailer.py	(refactored)
@@ -48,17 +48,17 @@
 
     #print f1.keys()
 
-    if 'fitResults_Ag' in f1.keys():
+    if 'fitResults_Ag' in list(f1.keys()):
         #if we used the splitter set up a mapping so we can filter on total amplitude and ratio
         f1_ = inpFilt.mappingFilter(f1, A='fitResults_Ag + fitResults_Ar', gFrac='fitResults_Ag/(fitResults_Ag + fitResults_Ar)')
         f2 = inpFilt.resultsFilter(f1_, error_x=[0,30], A=[5, 1e5], sig=[100/2.35, 350/2.35])
         split = True
-    elif 'fitResults_sigma' in f1.keys():
+    elif 'fitResults_sigma' in list(f1.keys()):
         f2 = inpFilt.resultsFilter(f1, error_x=[0,30], A=[5, 1e5], sig=[100/2.35, 350/2.35])
     else:
         f2 = inpFilt.resultsFilter(f1, error_x=[0,30], A=[5, 1e5])
 
-    if 'fitResults_z0' in f1.keys():
+    if 'fitResults_z0' in list(f1.keys()):
         threeD = True
 
     if 'Events' in dir(f1.h5f.root):
--- ./PYME/scripts/sf-thumbnailer.py	(original)
+++ ./PYME/scripts/sf-thumbnailer.py	(refactored)
@@ -30,7 +30,7 @@
 import sys
 import gnomevfs
 
-import cPickle
+import pickle
 
 import matplotlib
 matplotlib.use('Agg')
@@ -50,7 +50,7 @@
 
 #def generateThumbnail(inputFile, thumbsize):
 fid = open(inputFile)
-spx, spy = cPickle.load(fid)
+spx, spy = pickle.load(fid)
 fid.close()
 
 f = figure(figsize=(thumbSize/dpi, 0.5*thumbSize/dpi))
--- ./PYME/scripts/urlOpener.py	(original)
+++ ./PYME/scripts/urlOpener.py	(refactored)
@@ -35,11 +35,11 @@
 nasPrefix = '/mnt/NasData/'
 
 micrPath = micrPrefix
-if 'PYMEMICRPATH' in os.environ.keys():
+if 'PYMEMICRPATH' in list(os.environ.keys()):
     micrPath = os.environ['PYMEMICRPATH']
 
 nasPath = nasPrefix
-if 'PYMENASPATH' in os.environ.keys():
+if 'PYMENASPATH' in list(os.environ.keys()):
     nasPath = os.environ['PYMENASPATH']
 
 PYMEDir = os.path.split(os.path.split(os.path.abspath(nameUtils.__file__))[0])[0]
--- ./PYME/scripts/view3d.py	(original)
+++ ./PYME/scripts/view3d.py	(refactored)
@@ -23,7 +23,7 @@
 import sys
 import socket
 from optparse import OptionParser
-import SocketServer
+import socketserver
 
 op = OptionParser(usage = 'usage: %s [options] [filename]' % sys.argv[0])
 
@@ -65,7 +65,7 @@
 
         return 1
 
-class MyTCPHandler(SocketServer.BaseRequestHandler):
+class MyTCPHandler(socketserver.BaseRequestHandler):
     """
     The RequestHandler class for our server.
 
@@ -96,7 +96,7 @@
         
         app = MyApp(0)
 
-        sockServ = SocketServer.TCPServer(('localhost',9898), MyTCPHandler)
+        sockServ = socketserver.TCPServer(('localhost',9898), MyTCPHandler)
 
         thrd = threading.Thread(target=sockServ.serve_forever)
         thrd.start()
--- ./PYME/shmarray/shmTest.py	(original)
+++ ./PYME/shmarray/shmTest.py	(refactored)
@@ -23,7 +23,7 @@
 import numpy.random
 import multiprocessing
 import multiprocessing.sharedctypes
-import shmarray
+from . import shmarray
 import numpy
 
 
@@ -55,7 +55,7 @@
 
 pool = multiprocessing.Pool(4, initFuzz, (data,))
 
-i = pool.map(doFuzz, range(0, 100), chunksize=10)
+i = pool.map(doFuzz, list(range(0, 100)), chunksize=10)
 
 pool.close()
 
--- ./PYME/shmarray/shmarray.py	(original)
+++ ./PYME/shmarray/shmarray.py	(refactored)
@@ -97,7 +97,7 @@
     #otherwise create a suitably sized byte array
     dt = dtype.char
 
-    if not dt in sharedctypes.typecode_to_type.keys():
+    if not dt in list(sharedctypes.typecode_to_type.keys()):
         dt = 'b'
         N *= dtype.itemsize
 
--- ./doc/conf.py	(original)
+++ ./doc/conf.py	(refactored)
@@ -37,8 +37,8 @@
 master_doc = 'index'
 
 # General information about the project.
-project = u'PYME'
-copyright = u'2010, David Baddeley'
+project = 'PYME'
+copyright = '2010, David Baddeley'
 
 # The version info for the project you're documenting, acts as replacement for
 # |version| and |release|, also used in various other places throughout the
@@ -172,8 +172,8 @@
 # Grouping the document tree into LaTeX files. List of tuples
 # (source start file, target name, title, author, documentclass [howto/manual]).
 latex_documents = [
-  ('index', 'PYME.tex', u'PYME Documentation',
-   u'David Baddeley', 'manual'),
+  ('index', 'PYME.tex', 'PYME Documentation',
+   'David Baddeley', 'manual'),
 ]
 
 # The name of an image file (relative to this directory) to place at the top of
