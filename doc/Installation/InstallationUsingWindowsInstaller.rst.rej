--- InstallationUsingWindowsInstaller.rst
+++ InstallationUsingWindowsInstaller.rst
@@ -1,10 +1,10 @@
 .. _installation:
 
-Installation of PYME on windows with enthought python
+Installation of PYME on windows with Enthought Python
 #####################################################
 
-Prerequisites
-=============
+STEP 1: Prerequisites - installing EPD
+======================================
 
 PYME requires python (ideally version 2.7) and a number of additional packages.
 The easiest way to get a system up and running is to install the
@@ -17,43 +17,67 @@
 rather than doing a personal install. Under Win7/Vista? you might need to right click the EPD
 installer and select 'run as administrator' to do an install for everyone.
 
-After installing EPD, we need to install Pyro and upgrade wxPython to get PYME 
-working. The PYME installer tries to do some of this work for you.
+For example, at the time of writing we downloaded and executed ``epd-7.1-2-win-x86_64.msi`` and just accepted all defaults
+when queried by the installer.
 
-Installing PYME using the installer
-===================================
+STEP 2: Installing PYME using the installer
+===========================================
 
-This should be as simple as running the installer which corresponds to your python 
-version & number or bits. With any luck it'll install Pyro for you as well. 
+This should be as simple as running the installer appropriate for your system. As explained above (prerequisites)
+pick the installer that corresponds to your python version (this would be the python version that came with EPD) and
+the type of windows that you run (32 or 64 bit, see above for more about 32 vs 64 bits).
 
+To give a concrete example, with the current EPD 7.1.2, python version 2.7 is installed. We are using a 64 bit Win 7
+installation on our latest machines, so the correct installer version for this setup should be named something
+like ``PYME-XXX.win-amd64-py2.7.exe``.
 
-Upgrading wxPython
-------------------
+Double click the installer, currently there is minimal user interaction required and it
+should be safe to accept any defaults when prompted. Likely you will have to give permission to the installer
+to modify the system (most installers will do that). Just say yes, and you should be ok.
 
-PYME needs wxPython >= 2.8.11. EPD comes with an
-older version of wx and we need to remove this before installing the up to date one.
-When you install PYME, it installs a script (``remove_old_wx.py``) to help with the messy
-bits of the process:
+The installer will attempt to install the additional module ``Pyro`` for you as well, which is a required module,
+but that requires a working internet connection on your machine.
 
-- Open a command prompt (start menu, run, cmd)
-- type ``remove_old_wx.py`` and hit enter 
-- install the new wx which you can download from `http://www.wxpython.org/download.php. <http://www.wxpython.org/download.php>`_
-  Grab the unicode version which matches your python version.
+STEP 3: Upgrading wxPython
+--------------------------
 
-Other Dependencies
-------------------
+PYME needs a wxPython version >= 2.8.11. EPD comes with an
+older version of wx and we need to remove this before installing a current wx.
 
-In addition to wx, PYME needs a couple of other packages which aren't in EPD and which
-need to be manually installed. Luckily Python comes with a package manager called ``pip``
-(or alternatively a slightly older one called ``easy_install`` if you don't have pip on
-your system) which makes this relatively easy if the computer you are using has an
-internet connection.
+The installer that you run in STEP 2 installs a script (``remove_old_wx.py``) to help with the removal,
+the potentially messy bit of the process. Do the following to run the script:
 
-To use ``pip``, open a command prompt and type::
+- Open a command prompt (XP: start menu, run, cmd; Win 7: start menu, into ``Search programs and files`` type ``cmd``, hit enter)
+- in the cmd-window that opens type ``remove_old_wx.py`` and hit enter 
+
+Now install the new wxPython which you can download from `http://www.wxpython.org/download.php. <http://www.wxpython.org/download.php>`_
+Grab the unicode version which matches your python version and windows version. To stay with our example, we have python 2.7 as a result
+of installing EPD 7.2.1 and run a 64 bit win 7, so we grabbed the installer for ``64-bit python 2.7``, a file named ``wxPython2.8-win64-unicode-2.8.12.1-py27.exe``. Again it should be safe to just accept defaults when prompted by the installer.
+
+At this stage you should have a working basic PYME installation. See below (``TESTING PYME``) how to test
+that things are working basically ok.
+
+STEP 4: Other Dependencies (mostly optional)
+--------------------------------------------
+
+If everything went well up to here, this step should be truly optional. This mostly involves getting some
+other packages which aren't in EPD and which are required for some extra functionality of PYME (see STEP 4b).
+
+If, however, for some reason Pyro was not successfully installed during STEP 2, you can try to install Pyro
+manually once more, using the methods described next.
+
+TODO: we need to tell you how to test if Pyro has been installed successfully.
+
+Python comes with some package managers to help you get these additional dependencies easily. One is called ``pip``,
+alternatively you can use a slightly older one called ``easy_install``. (Note: ``pip`` does not seem to be part of EPD, so you can
+try to get that one first with the command ``easy_install pip``). The computer you are using needs an internet connection
+to pull the modules from the net.
+
+To use ``pip``, open a command prompt (see STEP 3 how to get a prompt window) and type::
 
  pip install <module name>
 
-alternatively, using ``easy_install``:
+alternatively, using ``easy_install``::
 
  easy_install <module name>
 
@@ -62,15 +86,20 @@
 your friend and googling "python <module name>" will usually get you there pretty quickly.
 Once you have an installer, just double click on it to install the module.
 
-Pyro
-++++
+STEP 4a: Pyro
++++++++++++++
+
 There's only one required extra module, which is `Pyro <http://www.xs4all.nl/~irmen/pyro3/>`_.
 Notably this should be one of the 3.X versions rather than the recently released Pyro4.
-This should have been installed by the PYME installer but if you get errors try running `easy_install Pyro`.
+This should have been installed by the PYME installer (STEP 3) but if you get errors try running ``easy_install Pyro``.
 
-Extras
-++++++
-For full functionality, however, the following are useful:
+STEP 4b: Extras
++++++++++++++++
+
+None of these extras is required for core functionality. You seriously might want to skip this first
+time around and come back to this step later if you want to try some of this additional functionality.
+
+For full functionality the following are useful:
 
 - PyFFTW3 (widefield/confocal deconvolution)
 - PySerial (interfacing some hardware)
@@ -80,12 +109,13 @@
 - Delny  (triangle based segmentation)
 
 Last time I tried, MySQL-python didn't play well with pip/easy_install on windows
-and there is no official build for Win7. An unofficial one can be found 
-`here <http://www.codegood.com/archives/129>`_.
+and there is no official build for Win7. An unofficial one could be found at the time
+of writing `here <http://www.codegood.com/archives/129>`_.
 MySQL and Django are only needed for interacting with the sample database, however,
-which requires quite a lot of additional setup.
+which requires quite a lot of additional setup. So don't try this unless you really know
+why you want this.
 
-Delny used to be problematic as well, although I think it's better in the 
+The module ``Delny`` used to be problematic as well, although I think it's better in the 
 current version. If you run into problems I can provide a patched version 
 which I know ought to work. This is only used in a small measurement component 
 of the visualisation software, so it can usually be safely ommitted.
@@ -94,13 +124,14 @@
 find a module, try ``pip install``ing it.
 
 
-
-
-
-
 Pyro Nameserver
 ---------------
 
+TODO: This is not really clear enough and will lead to questions. Distill the minimal
+instructions that should work on a system which had no Pyro use before (which is ideally: 
+``just do nothing and let PYME do it for you``). Then follow that by more advanced instructions
+in a separate para.
+
 You need to run a `Pyro <http://www.xs4all.nl/~irmen/pyro3/>`_ nameserver somewhere 
 on your network segment. For testing, the easiest thing is to run ``pryo_ns`` 
 (or ``pyro-nsd``) from the command line, or skip this entirely and let PYME launch 
@@ -110,6 +141,13 @@
 trickery involved to make sure it binds to the the external interface rather 
 than localhost (specifically, the hostname has to resolve to the external interface).
 
+TESTING the basic PYME installation
+-----------------------------------
+
+TODO: Some basic command to execute from the start menu: Launch PYME/LMVis and a window should open
+that looks roughly like this...
+
+TODO: provide simple example data set generated with simulator, both H5 and H5R for basic test run
 
 .. _basicconfig:
 
